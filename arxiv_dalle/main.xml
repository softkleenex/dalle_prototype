<?xml version="1.0" encoding="UTF-8"?>
<?latexml searchpaths="/Users/isangjae/Downloads/arxiv_dalle"?>
<?latexml class="article"?>
<?latexml package="microtype" options="
activate=true,nocompatibility,
tracking=true
"?>
<?latexml package="amsmath"?>
<?latexml package="amssymb"?>
<?latexml package="graphicx"?>
<?latexml package="subfig"?>
<?latexml package="booktabs"?>
<?latexml package="siunitx" options="group-separator=,"?>
<?latexml package="listings"?>
<?latexml package="FiraMono"?>
<?latexml package="fontenc" options="T1"?>
<?latexml package="enumitem"?>
<?latexml package="hyperref"?>
<!--  %Use␣the␣following␣line␣for␣the␣initial␣blind␣version␣submitted␣for␣review: --><!--  %\usepackage{icml2020} --><?latexml package="icml2020" options="accepted"?>
<?latexml RelaxNGSchema="LaTeXML"?>
<document xmlns="http://dlmf.nist.gov/LaTeXML" class="ltx_pruned_first">
  <resource src="LaTeXML.css" type="text/css"/>
  <resource src="ltx-article.css" type="text/css"/>
  <resource src="ltx-listings.css" type="text/css"/>
  <title>Zero-Shot Text-to-Image Generation</title>
  <creator role="author">
    <personname>Aditya Ramesh</personname>
  </creator>
  <creator before="  " role="author">
    <personname>Mikhail Pavlov</personname>
  </creator>
  <creator before="  " role="author">
    <personname>Gabriel Goh</personname>
  </creator>
  <creator before="  " role="author">
    <personname>Scott Gray</personname>
  </creator>
  <creator before="  " role="author">
    <personname>Chelsea Voss</personname>
  </creator>
  <creator before="  " role="author">
    <personname>Alec Radford</personname>
  </creator>
  <creator before="  " role="author">
    <personname>Mark Chen</personname>
  </creator>
  <creator before="  " role="author">
    <personname>Ilya Sutskever</personname>
  </creator>
  <abstract name="Abstract">
    <p>Text-to-image generation has traditionally focused on finding better modeling assumptions for training on a fixed dataset. These assumptions might involve complex architectures, auxiliary losses, or side information such as object part labels or segmentation masks supplied during training. We describe a simple approach for this task based on a transformer that autoregressively models the text and image tokens as a single stream of data. With sufficient data and scale, our approach is competitive with previous domain-specific models when evaluated in a zero-shot fashion.</p>
  </abstract>
  <keywords><!--  %You␣may␣provide␣any␣keywords␣that␣you -->Machine Learning, ICML<!--  %find␣helpful␣for␣describing␣your␣paper;␣these␣are␣used␣to␣populate 
     %the␣"keywords"␣metadata␣in␣the␣PDF␣but␣will␣not␣be␣shown␣in␣the␣document --></keywords>
  <para xml:id="p2">
    <break/>
  </para>
  <section inlist="toc" labels="LABEL:intro" xml:id="S1">
    <tags>
      <tag>1</tag>
      <tag role="autoref">section 1</tag>
      <tag role="refnum">1</tag>
      <tag role="typerefnum">§1</tag>
    </tags>
    <title><tag close=" ">1</tag>Introduction</title>
    <para xml:id="S1.p1">
      <p>Modern machine learning approaches to text to image synthesis started with the work of <cite class="ltx_citemacro_citet"><bibref bibrefs="mansimov2015generating" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
            <bibrefphrase>(</bibrefphrase>
            <bibrefphrase>)</bibrefphrase>
          </bibref></cite>, who showed that the DRAW <cite class="ltx_citemacro_citet"><bibref bibrefs="gregor2015draw" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
            <bibrefphrase>(</bibrefphrase>
            <bibrefphrase>)</bibrefphrase>
          </bibref></cite> generative model, when extended to condition on image captions, could also generate novel visual scenes. <cite class="ltx_citemacro_citet"><bibref bibrefs="reed2016generative" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
            <bibrefphrase>(</bibrefphrase>
            <bibrefphrase>)</bibrefphrase>
          </bibref></cite> later demonstrated that using a generative adversarial network <cite class="ltx_citemacro_citep">(<bibref bibrefs="goodfellow2014generative" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
            <bibrefphrase>, </bibrefphrase>
          </bibref>)</cite>, rather than a recurrent variational auto-encoder, improved image fidelity. <cite class="ltx_citemacro_citet"><bibref bibrefs="reed2016generative" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
            <bibrefphrase>(</bibrefphrase>
            <bibrefphrase>)</bibrefphrase>
          </bibref></cite> showed that this system could not only generate objects with recognizable properties, but also could <text font="italic">zero-shot</text> generalize to held-out categories.</p>
    </para>
    <para xml:id="S1.p2">
      <p>Over the next few years, progress continued using a combination of methods. These include improving the generative model architecture with modifications like multi-scale generators <cite class="ltx_citemacro_citep">(<bibref bibrefs="zhang2017stackgan,zhang2018stackgan++" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
            <bibrefphrase>, </bibrefphrase>
          </bibref>)</cite>, integrating attention and auxiliary losses <cite class="ltx_citemacro_citep">(<bibref bibrefs="xu2018attngan" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
            <bibrefphrase>, </bibrefphrase>
          </bibref>)</cite>, and leveraging additional sources of conditioning information beyond just text <cite class="ltx_citemacro_citep">(<bibref bibrefs="reed2016learning,li2019object,koh2021text" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
            <bibrefphrase>, </bibrefphrase>
          </bibref>)</cite>.</p>
    </para>
    <figure inlist="lof" labels="LABEL:fig:dvae_rec" xml:id="S1.F1">
      <tags>
        <tag>Figure 1</tag>
        <tag role="autoref">Figure 1</tag>
        <tag role="refnum">1</tag>
        <tag role="typerefnum">Figure 1</tag>
      </tags>
      <graphics candidates="dvae_rec.png" class="ltx_centering" graphic="dvae_rec.png" options="width=433.62pt,keepaspectratio=true" xml:id="S1.F1.g1"/>
      <toccaption class="ltx_centering"><tag close=" ">1</tag>Comparison of original images (top) and reconstructions from the discrete VAE (bottom). The encoder downsamples the spatial resolution by a factor of 8. While details (e.g., the texture of the cat’s fur, the writing on the storefront, and the thin lines in the illustration) are sometimes lost or distorted, the main features of the image are still typically recognizable. We use a large vocabulary size of 8192 to mitigate the loss of information.</toccaption>
      <caption class="ltx_centering"><tag close=": ">Figure 1</tag>Comparison of original images (top) and reconstructions from the discrete VAE (bottom). The encoder downsamples the spatial resolution by a factor of 8. While details (e.g., the texture of the cat’s fur, the writing on the storefront, and the thin lines in the illustration) are sometimes lost or distorted, the main features of the image are still typically recognizable. We use a large vocabulary size of 8192 to mitigate the loss of information.</caption>
    </figure>
    <para xml:id="S1.p3">
      <p>Separately, <cite class="ltx_citemacro_citet"><bibref bibrefs="nguyen2017plug" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
            <bibrefphrase>(</bibrefphrase>
            <bibrefphrase>)</bibrefphrase>
          </bibref></cite> propose an energy-based framework for conditional image generation that obtained a large improvement in sample quality relative to contemporary methods. Their approach can incorporate pretrained discriminative models, and they show that it is capable of performing text-to-image generation when applied to a captioning model pretrained on MS-COCO.
More recently, <cite class="ltx_citemacro_citet"><bibref bibrefs="cho2020x" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
            <bibrefphrase>(</bibrefphrase>
            <bibrefphrase>)</bibrefphrase>
          </bibref></cite> also propose a method that involves optimizing the input to a pretrained cross-modal masked language model. While significant increases in visual fidelity have occurred as a result of the work since <cite class="ltx_citemacro_citet"><bibref bibrefs="mansimov2015generating" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
            <bibrefphrase>(</bibrefphrase>
            <bibrefphrase>)</bibrefphrase>
          </bibref></cite>, samples can still suffer from severe artifacts such as object distortion, illogical object placement, or unnatural blending of foreground and background elements.</p>
    </para>
    <para xml:id="S1.p4">
      <p>Recent advances fueled by large-scale generative models suggest a possible route for further improvements. Specifically, when compute, model size, and data are scaled carefully, autoregressive transformers <cite class="ltx_citemacro_citep">(<bibref bibrefs="vaswani2017attention" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
            <bibrefphrase>, </bibrefphrase>
          </bibref>)</cite> have achieved impressive results in several domains such as text <cite class="ltx_citemacro_citep">(<bibref bibrefs="radford2019language" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
            <bibrefphrase>, </bibrefphrase>
          </bibref>)</cite>, images <cite class="ltx_citemacro_citep">(<bibref bibrefs="chen2020generative" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
            <bibrefphrase>, </bibrefphrase>
          </bibref>)</cite>, and audio <cite class="ltx_citemacro_citep">(<bibref bibrefs="dhariwal2020jukebox" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
            <bibrefphrase>, </bibrefphrase>
          </bibref>)</cite>.</p>
    </para>
    <figure inlist="lof" labels="LABEL:fig:blog_samples" xml:id="S1.F2">
      <tags>
        <tag>Figure 2</tag>
        <tag role="autoref">Figure 2</tag>
        <tag role="refnum">2</tag>
        <tag role="typerefnum">Figure 2</tag>
      </tags>
<!--  %****␣main.tex␣Line␣100␣**** -->      <figure align="center" class="ltx_figure_panel" labels="LABEL:fig:blog_samples1" xml:id="S1.F2.sf1">
        <tags>
          <tag>(a)</tag>
          <tag role="autoref">2a</tag>
          <tag role="refnum">2a</tag>
        </tags>
        <tabular vattach="middle">
          <tbody>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="tapir_0.png" graphic="tapir_0" options="scale=0.2" xml:id="S1.F2.sf1.g1"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="tapir_1.png" graphic="tapir_1.png" options="scale=0.2" xml:id="S1.F2.sf1.g2"/></text></td>
            </tr>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="tapir_6.png" graphic="tapir_6.png" options="scale=0.2" xml:id="S1.F2.sf1.g3"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="tapir_14.png" graphic="tapir_14.png" options="scale=0.2" xml:id="S1.F2.sf1.g4"/></text></td>
            </tr>
          </tbody>
        </tabular>
        <toccaption><tag close=" ">a</tag>a tapir made of accordion. a tapir with the texture of an accordion.</toccaption>
        <caption><tag close=" ">(a)</tag>a tapir made of accordion. a tapir with the texture of an accordion.</caption>
      </figure>
      <figure align="center" class="ltx_figure_panel" labels="LABEL:fig:blog_samples2" xml:id="S1.F2.sf2">
        <tags>
          <tag>(b)</tag>
          <tag role="autoref">2b</tag>
          <tag role="refnum">2b</tag>
        </tags>
        <tabular vattach="middle">
          <tbody>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="hedgehog_1.png" graphic="hedgehog_1.png" options="scale=0.2" xml:id="S1.F2.sf2.g1"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="hedgehog_3.png" graphic="hedgehog_3.png" options="scale=0.2" xml:id="S1.F2.sf2.g2"/></text></td>
            </tr>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="hedgehog_16.png" graphic="hedgehog_16.png" options="scale=0.2" xml:id="S1.F2.sf2.g3"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="hedgehog_17.png" graphic="hedgehog_17.png" options="scale=0.2" xml:id="S1.F2.sf2.g4"/></text></td>
            </tr>
          </tbody>
        </tabular>
        <toccaption><tag close=" ">b</tag>an illustration of a baby hedgehog in a christmas sweater walking a dog</toccaption>
        <caption><tag close=" ">(b)</tag>an illustration of a baby hedgehog in a christmas sweater walking a dog</caption>
      </figure>
      <figure align="center" class="ltx_figure_panel" labels="LABEL:fig:blog_samples3" xml:id="S1.F2.sf3">
        <tags>
          <tag>(c)</tag>
          <tag role="autoref">2c</tag>
          <tag role="refnum">2c</tag>
        </tags>
<!--  %****␣main.tex␣Line␣125␣**** -->        <tabular vattach="middle">
          <tbody>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="10.png" graphic="10.png" options="scale=0.2" xml:id="S1.F2.sf3.g1"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="11.png" graphic="11.png" options="scale=0.2" xml:id="S1.F2.sf3.g2"/></text></td>
            </tr>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="13.png" graphic="13.png" options="scale=0.2" xml:id="S1.F2.sf3.g3"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="14.png" graphic="14.png" options="scale=0.2" xml:id="S1.F2.sf3.g4"/></text></td>
            </tr>
          </tbody>
        </tabular>
        <toccaption><tag close=" ">c</tag>a neon sign that reads “backprop”. a neon sign that reads “backprop”. backprop neon sign</toccaption>
        <caption><tag close=" ">(c)</tag>a neon sign that reads “backprop”. a neon sign that reads “backprop”. backprop neon sign</caption>
      </figure>
      <figure align="center" class="ltx_figure_panel" labels="LABEL:fig:blog_samples4" xml:id="S1.F2.sf4">
        <tags>
          <tag>(d)</tag>
          <tag role="autoref">2d</tag>
          <tag role="refnum">2d</tag>
        </tags>
        <tabular vattach="middle">
          <tbody>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="30.png" graphic="30.png" options="scale=0.2" xml:id="S1.F2.sf4.g1"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="31.png" graphic="31.png" options="scale=0.2" xml:id="S1.F2.sf4.g2"/></text></td>
            </tr>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="32.png" graphic="32.png" options="scale=0.2" xml:id="S1.F2.sf4.g3"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="33.png" graphic="33.png" options="scale=0.2" xml:id="S1.F2.sf4.g4"/></text></td>
            </tr>
          </tbody>
        </tabular>
        <toccaption><tag close=" ">d</tag>the exact same cat on the top as a sketch on the bottom</toccaption>
        <caption><tag close=" ">(d)</tag>the exact same cat on the top as a sketch on the bottom</caption>
      </figure>
      <toccaption class="ltx_centering"><tag close=" ">2</tag>With varying degrees of reliability, our model appears to be able to combine distinct concepts in plausible ways, create anthropomorphized versions of animals, render text, and perform some types of image-to-image translation.</toccaption>
      <caption class="ltx_centering"><tag close=": ">Figure 2</tag>With varying degrees of reliability, our model appears to be able to combine distinct concepts in plausible ways, create anthropomorphized versions of animals, render text, and perform some types of image-to-image translation.</caption>
    </figure>
    <para xml:id="S1.p5">
      <p><!--  %These␣models␣use␣billions␣of␣parameters,␣years␣of␣compute␣accelerator␣training␣time,␣and␣millions␣of␣training␣data␣points␣to -->By comparison, text-to-image generation has typically been evaluated on relatively small datasets such as MS-COCO and CUB-200 <!--  %****␣main.tex␣Line␣150␣**** --><cite class="ltx_citemacro_citep">(<bibref bibrefs="welinder2010caltech" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
            <bibrefphrase>, </bibrefphrase>
          </bibref>)</cite>. Could dataset size and model size be the limiting factor of current approaches? In this work, we demonstrate that training a 12-billion parameter autoregressive transformer on 250 million image-text pairs collected from the internet results in a flexible, high fidelity generative model of images controllable through natural language.</p>
    </para>
    <para xml:id="S1.p6">
      <p>The resulting system achieves high quality image generation on the popular MS-COCO dataset <text font="italic">zero-shot</text>, without using any of the training labels. It is preferred over prior work trained on the dataset by human evaluators 90% of the time. We also find that it is able to perform complex tasks such as image-to-image translation at a rudimentary level. This previously required custom approaches <cite class="ltx_citemacro_citep">(<bibref bibrefs="isola2017image" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
            <bibrefphrase>, </bibrefphrase>
          </bibref>)</cite>, rather
emerging as a capability of a single, large generative model.</p>
    </para>
<!--  %than␣as␣an␣emergent␣behavior␣of␣a␣single␣large␣generative␣model. -->    <figure inlist="lof" labels="LABEL:fig:coco_cmp" placement="t" xml:id="S1.F3">
      <tags>
        <tag>Figure 3</tag>
        <tag role="autoref">Figure 3</tag>
        <tag role="refnum">3</tag>
        <tag role="typerefnum">Figure 3</tag>
      </tags>
      <graphics candidates="coco_cmp_v2.jpg" class="ltx_centering" graphic="coco_cmp_v2.jpg" options="width=433.62pt,keepaspectratio=true" xml:id="S1.F3.g1"/>
      <toccaption class="ltx_centering"><tag close=" ">3</tag>Comparison of samples from our model to those from prior approaches on captions from MS-COCO. Each of our model samples is the best of 512 as ranked by the contrastive model. We do not use any manual cherrypicking with the selection of either the captions or the samples from any of the models.</toccaption>
      <caption class="ltx_centering"><tag close=": ">Figure 3</tag>Comparison of samples from our model to those from prior approaches on captions from MS-COCO. Each of our model samples is the best of 512 as ranked by the contrastive model. We do not use any manual cherrypicking with the selection of either the captions or the samples from any of the models.</caption>
    </figure>
  </section>
  <section inlist="toc" xml:id="S2">
    <tags>
      <tag>2</tag>
      <tag role="autoref">section 2</tag>
      <tag role="refnum">2</tag>
      <tag role="typerefnum">§2</tag>
    </tags>
    <title><tag close=" ">2</tag>Method</title>
    <para xml:id="S2.p1">
      <p><!--  %TODO:␣mention␣that␣we␣will␣release␣dVAE␣if␣paper␣is␣accepted -->Our goal is to train a transformer <cite class="ltx_citemacro_citep">(<bibref bibrefs="vaswani2017attention" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
            <bibrefphrase>, </bibrefphrase>
          </bibref>)</cite> to autoregressively model the text and image tokens as a single stream of data. However, using pixels directly as image tokens would require an inordinate amount of memory for high-resolution images. Likelihood objectives tend to prioritize modeling short-range dependencies between pixels <cite class="ltx_citemacro_citep">(<bibref bibrefs="salimans2017pixelcnn++" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
            <bibrefphrase>, </bibrefphrase>
          </bibref>)</cite>, so much of the modeling capacity would be spent capturing high-frequency details instead of the low-frequency structure that makes objects visually recognizable to us.</p>
    </para>
    <para xml:id="S2.p2">
      <p>We address these issues by using a two-stage training procedure, similar to <cite class="ltx_citemacro_citep">(<bibref bibrefs="oord2017neural,razavi2019generating" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
            <bibrefphrase>, </bibrefphrase>
          </bibref>)</cite>:</p>
      <itemize xml:id="S2.I1">
        <item xml:id="S2.I1.i1">
          <tags>
            <tag>•</tag>
            <tag role="autoref">item </tag>
            <tag role="typerefnum">1st item</tag>
          </tags>
          <para xml:id="S2.I1.i1.p1">
            <p><text font="bold">Stage 1.</text> We train a discrete variational autoencoder (dVAE)<note mark="1" role="footnote" xml:id="footnote1"><tags>
                  <tag>1</tag>
                  <tag role="autoref">footnote 1</tag>
                  <tag role="refnum">1</tag>
                  <tag role="typerefnum">footnote 1</tag>
                </tags><ref class="ltx_url" font="typewriter" href="https://github.com/openai/DALL-E">https://github.com/openai/DALL-E</ref></note> to compress each <Math mode="inline" tex="256\times 256" text="256 * 256" xml:id="S2.I1.i1.p1.m1">
                <XMath>
                  <XMApp>
                    <XMTok meaning="times" role="MULOP">×</XMTok>
                    <XMTok meaning="256" role="NUMBER">256</XMTok>
                    <XMTok meaning="256" role="NUMBER">256</XMTok>
                  </XMApp>
                </XMath>
              </Math> RGB image into a <Math mode="inline" tex="32\times 32" text="32 * 32" xml:id="S2.I1.i1.p1.m2">
                <XMath>
                  <XMApp>
                    <XMTok meaning="times" role="MULOP">×</XMTok>
                    <XMTok meaning="32" role="NUMBER">32</XMTok>
                    <XMTok meaning="32" role="NUMBER">32</XMTok>
                  </XMApp>
                </XMath>
              </Math> grid of image tokens, each element of which can assume <Math mode="inline" tex="8192" text="8192" xml:id="S2.I1.i1.p1.m3">
                <XMath>
                  <XMTok meaning="8192" role="NUMBER">8192</XMTok>
                </XMath>
              </Math> possible values. This reduces the context size of the transformer by a factor of <Math mode="inline" tex="192" text="192" xml:id="S2.I1.i1.p1.m4">
                <XMath>
                  <XMTok meaning="192" role="NUMBER">192</XMTok>
                </XMath>
              </Math> without a large degradation in visual quality (see Figure <ref labelref="LABEL:fig:dvae_rec"/>).</p>
          </para>
        </item>
        <item xml:id="S2.I1.i2">
          <tags>
            <tag>•</tag>
            <tag role="autoref">item </tag>
            <tag role="typerefnum">2nd item</tag>
          </tags>
          <para xml:id="S2.I1.i2.p1">
            <p><text font="bold">Stage 2.</text> We concatenate up to 256 BPE-encoded text tokens with the <Math mode="inline" tex="32\times 32=1024" text="32 * 32 = 1024" xml:id="S2.I1.i2.p1.m1">
                <XMath>
                  <XMApp>
                    <XMTok meaning="equals" role="RELOP">=</XMTok>
                    <XMApp>
                      <XMTok meaning="times" role="MULOP">×</XMTok>
                      <XMTok meaning="32" role="NUMBER">32</XMTok>
                      <XMTok meaning="32" role="NUMBER">32</XMTok>
                    </XMApp>
                    <XMTok meaning="1024" role="NUMBER">1024</XMTok>
                  </XMApp>
                </XMath>
              </Math> image tokens, and train an autoregressive transformer to model the joint distribution over the text and image tokens.</p>
          </para>
        </item>
      </itemize>
    </para>
    <para xml:id="S2.p3">
      <p>The overall procedure can be viewed as maximizing the evidence lower bound (ELB) <cite class="ltx_citemacro_citep">(<bibref bibrefs="kingma2013auto,rezende2014stochastic" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
            <bibrefphrase>, </bibrefphrase>
          </bibref>)</cite> on the joint likelihood of the model distribution over images <Math mode="inline" tex="x" text="x" xml:id="S2.p3.m1">
          <XMath>
            <XMTok font="italic" role="UNKNOWN">x</XMTok>
          </XMath>
        </Math>, captions <Math mode="inline" tex="y" text="y" xml:id="S2.p3.m2">
          <XMath>
            <XMTok font="italic" role="UNKNOWN">y</XMTok>
          </XMath>
        </Math>, and the tokens <Math mode="inline" tex="z" text="z" xml:id="S2.p3.m3">
          <XMath>
            <XMTok font="italic" role="UNKNOWN">z</XMTok>
          </XMath>
        </Math> for the encoded RGB image. We model this distribution using the factorization <Math mode="inline" tex="p_{\theta,\psi}(x,y,z)=p_{\theta}(x\,|\,y,z)p_{\psi}(y,z)" text="p _ (list@(theta, psi)) * vector@(x, y, z) = p _ theta * conditional@(x, list@(y, z)) * p _ psi * open-interval@(y, z)" xml:id="S2.p3.m4">
          <XMath>
            <XMApp>
              <XMTok meaning="equals" role="RELOP">=</XMTok>
              <XMApp>
                <XMTok meaning="times" role="MULOP">⁢</XMTok>
                <XMApp>
                  <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                  <XMTok font="italic" role="UNKNOWN">p</XMTok>
                  <XMDual>
                    <XMApp>
                      <XMTok meaning="list"/>
                      <XMRef idref="S2.p3.m4.1"/>
                      <XMRef idref="S2.p3.m4.2"/>
                    </XMApp>
                    <XMWrap>
                      <XMTok font="italic" fontsize="70%" name="theta" role="UNKNOWN" xml:id="S2.p3.m4.1">θ</XMTok>
                      <XMTok fontsize="70%" role="PUNCT">,</XMTok>
                      <XMTok font="italic" fontsize="70%" name="psi" role="UNKNOWN" xml:id="S2.p3.m4.2">ψ</XMTok>
                    </XMWrap>
                  </XMDual>
                </XMApp>
                <XMDual>
                  <XMApp>
                    <XMTok meaning="vector"/>
                    <XMRef idref="S2.p3.m4.3"/>
                    <XMRef idref="S2.p3.m4.4"/>
                    <XMRef idref="S2.p3.m4.5"/>
                  </XMApp>
                  <XMWrap>
                    <XMTok role="OPEN" stretchy="false">(</XMTok>
                    <XMTok font="italic" role="UNKNOWN" xml:id="S2.p3.m4.3">x</XMTok>
                    <XMTok role="PUNCT">,</XMTok>
                    <XMTok font="italic" role="UNKNOWN" xml:id="S2.p3.m4.4">y</XMTok>
                    <XMTok role="PUNCT">,</XMTok>
                    <XMTok font="italic" role="UNKNOWN" xml:id="S2.p3.m4.5">z</XMTok>
                    <XMTok role="CLOSE" stretchy="false">)</XMTok>
                  </XMWrap>
                </XMDual>
              </XMApp>
              <XMApp>
                <XMTok meaning="times" role="MULOP">⁢</XMTok>
                <XMApp>
                  <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                  <XMTok font="italic" role="UNKNOWN">p</XMTok>
                  <XMTok font="italic" fontsize="70%" name="theta" role="UNKNOWN">θ</XMTok>
                </XMApp>
                <XMDual>
                  <XMRef idref="S2.p3.m4.10"/>
                  <XMWrap>
                    <XMTok role="OPEN" stretchy="false">(</XMTok>
                    <XMApp xml:id="S2.p3.m4.10">
                      <XMTok meaning="conditional" role="MODIFIEROP" rpadding="1.7pt" stretchy="false">|</XMTok>
                      <XMTok font="italic" role="UNKNOWN" rpadding="1.7pt">x</XMTok>
                      <XMDual>
                        <XMApp>
                          <XMTok meaning="list"/>
                          <XMRef idref="S2.p3.m4.6"/>
                          <XMRef idref="S2.p3.m4.7"/>
                        </XMApp>
                        <XMWrap>
                          <XMTok font="italic" role="UNKNOWN" xml:id="S2.p3.m4.6">y</XMTok>
                          <XMTok role="PUNCT">,</XMTok>
                          <XMTok font="italic" role="UNKNOWN" xml:id="S2.p3.m4.7">z</XMTok>
                        </XMWrap>
                      </XMDual>
                    </XMApp>
                    <XMTok role="CLOSE" stretchy="false">)</XMTok>
                  </XMWrap>
                </XMDual>
                <XMApp>
                  <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                  <XMTok font="italic" role="UNKNOWN">p</XMTok>
                  <XMTok font="italic" fontsize="70%" name="psi" role="UNKNOWN">ψ</XMTok>
                </XMApp>
                <XMDual>
                  <XMApp>
                    <XMTok meaning="open-interval"/>
                    <XMRef idref="S2.p3.m4.8"/>
                    <XMRef idref="S2.p3.m4.9"/>
                  </XMApp>
                  <XMWrap>
                    <XMTok role="OPEN" stretchy="false">(</XMTok>
                    <XMTok font="italic" role="UNKNOWN" xml:id="S2.p3.m4.8">y</XMTok>
                    <XMTok role="PUNCT">,</XMTok>
                    <XMTok font="italic" role="UNKNOWN" xml:id="S2.p3.m4.9">z</XMTok>
                    <XMTok role="CLOSE" stretchy="false">)</XMTok>
                  </XMWrap>
                </XMDual>
              </XMApp>
            </XMApp>
          </XMath>
        </Math>, which yields the lower bound</p>
      <equation labels="LABEL:eq:elb" xml:id="S2.E1">
        <tags>
          <tag>(1)</tag>
          <tag role="autoref">Equation 1</tag>
          <tag role="refnum">1</tag>
        </tags>
        <Math mode="display" tex="\ln p_{\theta,\psi}(x,y)\geqslant\!\!\!\!\!\!\!\!\mathop{\mathbb{E}}_{\begin{%&#10;subarray}{c}\vspace{0.1mm}\\&#10;z\sim q_{\phi}(z\,|\,x)\end{subarray}}\!\!\!\!\!\!\!\!\big{(}\ln p_{\theta}(x%&#10;\,|\,y,z)\;-\\&#10;\beta\,D_{\mathrm{KL}}(q_{\phi}(y,z\,|\,x),p_{\psi}(y,z))\big{)}," text="natural-logarithm@(p _ (list@(theta, psi))) * open-interval@(x, y) &gt;= (E _ (list@(Array[[], [z similar-to q _ phi * conditional@(z, x)]])))@(natural-logarithm@(p _ theta) * |@(x, list@(y, z)) - beta * D _ KL * open-interval@(q _ phi * open-interval@(y, |@(z, x)), p _ psi * open-interval@(y, z)))" xml:id="S2.E1.m1">
          <XMath>
            <XMDual>
              <XMDual>
                <XMRef idref="S2.E1.m1.49"/>
                <XMWrap>
                  <XMApp xml:id="S2.E1.m1.49">
                    <XMRef idref="S2.E1.m1.10" rpadding="-13.3pt"/>
                    <XMApp>
                      <XMTok meaning="times" role="MULOP">⁢</XMTok>
                      <XMApp>
                        <XMRef idref="S2.E1.m1.2"/>
                        <XMApp>
                          <XMTok role="SUBSCRIPTOP" scriptpos="post5"/>
                          <XMRef idref="S2.E1.m1.3"/>
                          <XMRef idref="S2.E1.m1.4.1"/>
                        </XMApp>
                      </XMApp>
                      <XMApp>
                        <XMTok meaning="open-interval"/>
                        <XMRef idref="S2.E1.m1.6"/>
                        <XMRef idref="S2.E1.m1.8"/>
                      </XMApp>
                    </XMApp>
                    <XMApp>
                      <XMApp rpadding="-13.3pt">
                        <XMTok role="SUBSCRIPTOP" scriptpos="mid5"/>
                        <XMRef idref="S2.E1.m1.11"/>
                        <XMRef idref="S2.E1.m1.12.1"/>
                      </XMApp>
                      <XMDual>
                        <XMRef idref="S2.E1.m1.49.1"/>
                        <XMWrap>
                          <XMRef idref="S2.E1.m1.13"/>
                          <XMApp xml:id="S2.E1.m1.49.1">
                            <XMRef idref="S2.E1.m1.24"/>
                            <XMApp>
                              <XMTok meaning="times" role="MULOP">⁢</XMTok>
                              <XMApp>
                                <XMRef idref="S2.E1.m1.14"/>
                                <XMApp>
                                  <XMTok role="SUBSCRIPTOP" scriptpos="post5"/>
                                  <XMRef idref="S2.E1.m1.15"/>
                                  <XMRef idref="S2.E1.m1.16.1"/>
                                </XMApp>
                              </XMApp>
                              <XMDual>
                                <XMRef idref="S2.E1.m1.49.1.1"/>
                                <XMWrap>
                                  <XMRef idref="S2.E1.m1.17"/>
                                  <XMApp xml:id="S2.E1.m1.49.1.1">
                                    <XMRef idref="S2.E1.m1.19" meaning="conditional" role="MODIFIEROP" rpadding="1.7pt"/>
                                    <XMRef idref="S2.E1.m1.18" rpadding="1.7pt"/>
                                    <XMApp>
                                      <XMTok meaning="list"/>
                                      <XMRef idref="S2.E1.m1.20"/>
                                      <XMRef idref="S2.E1.m1.22"/>
                                    </XMApp>
                                  </XMApp>
                                  <XMRef idref="S2.E1.m1.23" rpadding="2.8pt"/>
                                </XMWrap>
                              </XMDual>
                            </XMApp>
                            <XMApp>
                              <XMTok meaning="times" role="MULOP">⁢</XMTok>
                              <XMRef idref="S2.E1.m1.25" rpadding="1.7pt"/>
                              <XMApp>
                                <XMTok role="SUBSCRIPTOP" scriptpos="post5"/>
                                <XMRef idref="S2.E1.m1.26"/>
                                <XMRef idref="S2.E1.m1.27.1"/>
                              </XMApp>
                              <XMDual>
                                <XMApp>
                                  <XMTok meaning="open-interval"/>
                                  <XMRef idref="S2.E1.m1.49.1.2"/>
                                  <XMRef idref="S2.E1.m1.49.1.3"/>
                                </XMApp>
                                <XMWrap>
                                  <XMRef idref="S2.E1.m1.28"/>
                                  <XMApp xml:id="S2.E1.m1.49.1.2">
                                    <XMTok meaning="times" role="MULOP">⁢</XMTok>
                                    <XMApp>
                                      <XMTok role="SUBSCRIPTOP" scriptpos="post5"/>
                                      <XMRef idref="S2.E1.m1.29"/>
                                      <XMRef idref="S2.E1.m1.30.1"/>
                                    </XMApp>
                                    <XMDual>
                                      <XMApp>
                                        <XMTok meaning="open-interval"/>
                                        <XMRef idref="S2.E1.m1.32"/>
                                        <XMRef idref="S2.E1.m1.49.1.2.1"/>
                                      </XMApp>
                                      <XMWrap>
                                        <XMRef idref="S2.E1.m1.31"/>
                                        <XMRef idref="S2.E1.m1.32"/>
                                        <XMRef idref="S2.E1.m1.33"/>
                                        <XMApp xml:id="S2.E1.m1.49.1.2.1">
                                          <XMRef idref="S2.E1.m1.35" meaning="conditional" role="MODIFIEROP" rpadding="1.7pt"/>
                                          <XMRef idref="S2.E1.m1.34" rpadding="1.7pt"/>
                                          <XMRef idref="S2.E1.m1.36"/>
                                        </XMApp>
                                        <XMRef idref="S2.E1.m1.37"/>
                                      </XMWrap>
                                    </XMDual>
                                  </XMApp>
                                  <XMRef idref="S2.E1.m1.38"/>
                                  <XMApp xml:id="S2.E1.m1.49.1.3">
                                    <XMTok meaning="times" role="MULOP">⁢</XMTok>
                                    <XMApp>
                                      <XMTok role="SUBSCRIPTOP" scriptpos="post5"/>
                                      <XMRef idref="S2.E1.m1.39"/>
                                      <XMRef idref="S2.E1.m1.40.1"/>
                                    </XMApp>
                                    <XMApp>
                                      <XMTok meaning="open-interval"/>
                                      <XMRef idref="S2.E1.m1.42"/>
                                      <XMRef idref="S2.E1.m1.44"/>
                                    </XMApp>
                                  </XMApp>
                                  <XMRef idref="S2.E1.m1.46"/>
                                </XMWrap>
                              </XMDual>
                            </XMApp>
                          </XMApp>
                          <XMRef idref="S2.E1.m1.47"/>
                        </XMWrap>
                      </XMDual>
                    </XMApp>
                  </XMApp>
                  <XMTok role="PUNCT"/>
                </XMWrap>
              </XMDual>
              <XMArray name="multline">
                <XMRow>
                  <XMCell align="left">
                    <XMArg rule="Anything,">
                      <XMTok meaning="natural-logarithm" role="OPFUNCTION" xml:id="S2.E1.m1.2">ln</XMTok>
                      <XMApp>
                        <XMTok role="SUBSCRIPTOP" scriptpos="post5"/>
                        <XMTok font="italic" role="UNKNOWN" xml:id="S2.E1.m1.3">p</XMTok>
                        <XMDual xml:id="S2.E1.m1.4.1">
                          <XMApp>
                            <XMTok meaning="list"/>
                            <XMRef idref="S2.E1.m1.4.1.1"/>
                            <XMRef idref="S2.E1.m1.4.1.2"/>
                          </XMApp>
                          <XMWrap>
                            <XMTok font="italic" fontsize="70%" name="theta" role="UNKNOWN" xml:id="S2.E1.m1.4.1.1">θ</XMTok>
                            <XMTok fontsize="70%" role="PUNCT">,</XMTok>
                            <XMTok font="italic" fontsize="70%" name="psi" role="UNKNOWN" xml:id="S2.E1.m1.4.1.2">ψ</XMTok>
                          </XMWrap>
                        </XMDual>
                      </XMApp>
                      <XMWrap>
                        <XMTok role="OPEN" stretchy="false" xml:id="S2.E1.m1.5">(</XMTok>
                        <XMTok font="italic" role="UNKNOWN" xml:id="S2.E1.m1.6">x</XMTok>
                        <XMTok role="PUNCT" xml:id="S2.E1.m1.7">,</XMTok>
                        <XMTok font="italic" role="UNKNOWN" xml:id="S2.E1.m1.8">y</XMTok>
                        <XMTok role="CLOSE" stretchy="false" xml:id="S2.E1.m1.9">)</XMTok>
                      </XMWrap>
                      <XMTok meaning="greater-than-or-equals" name="geqslant" role="RELOP" rpadding="-13.3pt" xml:id="S2.E1.m1.10">⩾</XMTok>
                      <XMApp rpadding="-13.3pt">
                        <XMTok role="SUBSCRIPTOP" scriptpos="mid5"/>
                        <XMTok font="blackboard" role="BIGOP" scriptpos="mid" xml:id="S2.E1.m1.11">E</XMTok>
                        <XMDual xml:id="S2.E1.m1.12.1">
                          <XMApp>
                            <XMTok meaning="list"/>
                            <XMRef idref="S2.E1.m1.1"/>
                          </XMApp>
                          <XMArray rowsep="0pt" xml:id="S2.E1.m1.1">
                            <XMRow>
                              <XMCell/>
                            </XMRow>
                            <XMRow>
                              <XMCell align="center">
                                <XMApp>
                                  <XMTok fontsize="70%" meaning="similar-to" name="sim" role="RELOP">∼</XMTok>
                                  <XMTok font="italic" fontsize="70%" role="UNKNOWN">z</XMTok>
                                  <XMApp>
                                    <XMTok meaning="times" role="MULOP">⁢</XMTok>
                                    <XMApp>
                                      <XMTok role="SUBSCRIPTOP" scriptpos="post10"/>
                                      <XMTok font="italic" fontsize="70%" role="UNKNOWN">q</XMTok>
                                      <XMTok font="italic" fontsize="50%" name="phi" role="UNKNOWN">ϕ</XMTok>
                                    </XMApp>
                                    <XMDual>
                                      <XMRef idref="S2.E1.m1.1.1"/>
                                      <XMWrap>
                                        <XMTok fontsize="70%" role="OPEN" stretchy="false">(</XMTok>
                                        <XMApp xml:id="S2.E1.m1.1.1">
                                          <XMTok fontsize="70%" meaning="conditional" role="MODIFIEROP" rpadding="1.7pt" stretchy="false">|</XMTok>
                                          <XMTok font="italic" fontsize="70%" role="UNKNOWN" rpadding="1.7pt">z</XMTok>
                                          <XMTok font="italic" fontsize="70%" role="UNKNOWN">x</XMTok>
                                        </XMApp>
                                        <XMTok fontsize="70%" role="CLOSE" stretchy="false">)</XMTok>
                                      </XMWrap>
                                    </XMDual>
                                  </XMApp>
                                </XMApp>
                              </XMCell>
                            </XMRow>
                          </XMArray>
                        </XMDual>
                      </XMApp>
                      <XMWrap>
                        <XMTok fontsize="120%" role="OPEN" stretchy="false" xml:id="S2.E1.m1.13">(</XMTok>
                        <XMTok meaning="natural-logarithm" role="OPFUNCTION" xml:id="S2.E1.m1.14">ln</XMTok>
                        <XMApp>
                          <XMTok role="SUBSCRIPTOP" scriptpos="post5"/>
                          <XMTok font="italic" role="UNKNOWN" xml:id="S2.E1.m1.15">p</XMTok>
                          <XMTok font="italic" fontsize="70%" name="theta" role="UNKNOWN" xml:id="S2.E1.m1.16.1">θ</XMTok>
                        </XMApp>
                        <XMWrap>
                          <XMTok role="OPEN" stretchy="false" xml:id="S2.E1.m1.17">(</XMTok>
                          <XMTok font="italic" role="UNKNOWN" rpadding="1.7pt" xml:id="S2.E1.m1.18">x</XMTok>
                          <XMTok role="VERTBAR" rpadding="1.7pt" stretchy="false" xml:id="S2.E1.m1.19">|</XMTok>
                          <XMTok font="italic" role="UNKNOWN" xml:id="S2.E1.m1.20">y</XMTok>
                          <XMTok role="PUNCT" xml:id="S2.E1.m1.21">,</XMTok>
                          <XMTok font="italic" role="UNKNOWN" xml:id="S2.E1.m1.22">z</XMTok>
                          <XMTok role="CLOSE" rpadding="2.8pt" stretchy="false" xml:id="S2.E1.m1.23">)</XMTok>
                        </XMWrap>
                        <XMTok meaning="minus" role="ADDOP" xml:id="S2.E1.m1.24">-</XMTok>
                      </XMWrap>
                    </XMArg>
                  </XMCell>
                </XMRow>
                <XMRow>
                  <XMCell align="right">
                    <XMArg rule="Anything,">
                      <XMTok font="italic" name="beta" role="UNKNOWN" rpadding="1.7pt" xml:id="S2.E1.m1.25">β</XMTok>
                      <XMApp>
                        <XMTok role="SUBSCRIPTOP" scriptpos="post5"/>
                        <XMTok font="italic" role="UNKNOWN" xml:id="S2.E1.m1.26">D</XMTok>
                        <XMTok fontsize="70%" role="UNKNOWN" xml:id="S2.E1.m1.27.1">KL</XMTok>
                      </XMApp>
                      <XMWrap>
                        <XMTok role="OPEN" stretchy="false" xml:id="S2.E1.m1.28">(</XMTok>
                        <XMApp>
                          <XMTok role="SUBSCRIPTOP" scriptpos="post5"/>
                          <XMTok font="italic" role="UNKNOWN" xml:id="S2.E1.m1.29">q</XMTok>
                          <XMTok font="italic" fontsize="70%" name="phi" role="UNKNOWN" xml:id="S2.E1.m1.30.1">ϕ</XMTok>
                        </XMApp>
                        <XMWrap>
                          <XMTok role="OPEN" stretchy="false" xml:id="S2.E1.m1.31">(</XMTok>
                          <XMTok font="italic" role="UNKNOWN" xml:id="S2.E1.m1.32">y</XMTok>
                          <XMTok role="PUNCT" xml:id="S2.E1.m1.33">,</XMTok>
                          <XMTok font="italic" role="UNKNOWN" rpadding="1.7pt" xml:id="S2.E1.m1.34">z</XMTok>
                          <XMTok role="VERTBAR" rpadding="1.7pt" stretchy="false" xml:id="S2.E1.m1.35">|</XMTok>
                          <XMTok font="italic" role="UNKNOWN" xml:id="S2.E1.m1.36">x</XMTok>
                          <XMTok role="CLOSE" stretchy="false" xml:id="S2.E1.m1.37">)</XMTok>
                        </XMWrap>
                        <XMTok role="PUNCT" xml:id="S2.E1.m1.38">,</XMTok>
                        <XMApp>
                          <XMTok role="SUBSCRIPTOP" scriptpos="post5"/>
                          <XMTok font="italic" role="UNKNOWN" xml:id="S2.E1.m1.39">p</XMTok>
                          <XMTok font="italic" fontsize="70%" name="psi" role="UNKNOWN" xml:id="S2.E1.m1.40.1">ψ</XMTok>
                        </XMApp>
                        <XMWrap>
                          <XMTok role="OPEN" stretchy="false" xml:id="S2.E1.m1.41">(</XMTok>
                          <XMTok font="italic" role="UNKNOWN" xml:id="S2.E1.m1.42">y</XMTok>
                          <XMTok role="PUNCT" xml:id="S2.E1.m1.43">,</XMTok>
                          <XMTok font="italic" role="UNKNOWN" xml:id="S2.E1.m1.44">z</XMTok>
                          <XMTok role="CLOSE" stretchy="false" xml:id="S2.E1.m1.45">)</XMTok>
                        </XMWrap>
                        <XMTok role="CLOSE" stretchy="false" xml:id="S2.E1.m1.46">)</XMTok>
                      </XMWrap>
                      <XMTok fontsize="120%" role="CLOSE" stretchy="false" xml:id="S2.E1.m1.47">)</XMTok>
                      <XMTok role="PUNCT" xml:id="S2.E1.m1.48">,</XMTok>
                    </XMArg>
                  </XMCell>
                </XMRow>
              </XMArray>
            </XMDual>
          </XMath>
        </Math>
      </equation>
      <p>where:</p>
      <itemize xml:id="S2.I2">
        <item xml:id="S2.I2.i1">
          <tags>
            <tag>•</tag>
            <tag role="autoref">item </tag>
            <tag role="typerefnum">1st item</tag>
          </tags>
          <para xml:id="S2.I2.i1.p1">
            <p><Math mode="inline" tex="q_{\phi}" text="q _ phi" xml:id="S2.I2.i1.p1.m1">
                <XMath>
                  <XMApp>
                    <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                    <XMTok font="italic" role="UNKNOWN">q</XMTok>
                    <XMTok font="italic" fontsize="70%" name="phi" role="UNKNOWN">ϕ</XMTok>
                  </XMApp>
                </XMath>
              </Math> denotes the distribution over the <Math mode="inline" tex="32\times 32" text="32 * 32" xml:id="S2.I2.i1.p1.m2">
                <XMath>
                  <XMApp>
                    <XMTok meaning="times" role="MULOP">×</XMTok>
                    <XMTok meaning="32" role="NUMBER">32</XMTok>
                    <XMTok meaning="32" role="NUMBER">32</XMTok>
                  </XMApp>
                </XMath>
              </Math> image tokens generated by the dVAE encoder given the RGB image <Math mode="inline" tex="x" text="x" xml:id="S2.I2.i1.p1.m3">
                <XMath>
                  <XMTok font="italic" role="UNKNOWN">x</XMTok>
                </XMath>
              </Math><note mark="2" role="footnote" xml:id="footnote2"><tags>
                  <tag>2</tag>
                  <tag role="autoref">footnote 2</tag>
                  <tag role="refnum">2</tag>
                  <tag role="typerefnum">footnote 2</tag>
                </tags>We assume that <Math mode="inline" tex="y" text="y" xml:id="footnote2.m1">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">y</XMTok>
                  </XMath>
                </Math> is conditionally independent of <Math mode="inline" tex="x" text="x" xml:id="footnote2.m2">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">x</XMTok>
                  </XMath>
                </Math> given <Math mode="inline" tex="z" text="z" xml:id="footnote2.m3">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">z</XMTok>
                  </XMath>
                </Math>.</note>;</p>
          </para>
        </item>
        <item xml:id="S2.I2.i2">
          <tags>
            <tag>•</tag>
            <tag role="autoref">item </tag>
            <tag role="typerefnum">2nd item</tag>
          </tags>
          <para xml:id="S2.I2.i2.p1">
            <p><Math mode="inline" tex="p_{\theta}" text="p _ theta" xml:id="S2.I2.i2.p1.m1">
                <XMath>
                  <XMApp>
                    <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                    <XMTok font="italic" role="UNKNOWN">p</XMTok>
                    <XMTok font="italic" fontsize="70%" name="theta" role="UNKNOWN">θ</XMTok>
                  </XMApp>
                </XMath>
              </Math> denotes the distribution over the RGB images generated by the dVAE decoder given the image tokens; and</p>
          </para>
        </item>
        <item xml:id="S2.I2.i3">
          <tags>
            <tag>•</tag>
            <tag role="autoref">item </tag>
            <tag role="typerefnum">3rd item</tag>
          </tags>
          <para xml:id="S2.I2.i3.p1">
            <p><Math mode="inline" tex="p_{\psi}" text="p _ psi" xml:id="S2.I2.i3.p1.m1">
                <XMath>
                  <XMApp>
                    <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                    <XMTok font="italic" role="UNKNOWN">p</XMTok>
                    <XMTok font="italic" fontsize="70%" name="psi" role="UNKNOWN">ψ</XMTok>
                  </XMApp>
                </XMath>
              </Math> denotes the joint distribution over the text and image tokens modeled by the transformer.</p>
          </para>
        </item>
      </itemize>
      <p>Note that the bound only holds for <Math mode="inline" tex="\beta=1" text="beta = 1" xml:id="S2.p3.m5">
          <XMath>
            <XMApp>
              <XMTok meaning="equals" role="RELOP">=</XMTok>
              <XMTok font="italic" name="beta" role="UNKNOWN">β</XMTok>
              <XMTok meaning="1" role="NUMBER">1</XMTok>
            </XMApp>
          </XMath>
        </Math>, while in practice we find it helpful to use larger values <cite class="ltx_citemacro_citep">(<bibref bibrefs="higgins2016beta" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
            <bibrefphrase>, </bibrefphrase>
          </bibref>)</cite>. The following subsections describe both stages in further detail.<note mark="3" role="footnote" xml:id="footnote3"><tags>
            <tag>3</tag>
            <tag role="autoref">footnote 3</tag>
            <tag role="refnum">3</tag>
            <tag role="typerefnum">footnote 3</tag>
          </tags>In preliminary experiments on ImageNet <cite class="ltx_citemacro_citep">(<bibref bibrefs="deng2009imagenet" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite>, we attempted to maximize the ELB with respect to <Math mode="inline" tex="\phi" text="phi" xml:id="footnote3.m1">
            <XMath>
              <XMTok font="italic" name="phi" role="UNKNOWN">ϕ</XMTok>
            </XMath>
          </Math>, <Math mode="inline" tex="\theta" text="theta" xml:id="footnote3.m2">
            <XMath>
              <XMTok font="italic" name="theta" role="UNKNOWN">θ</XMTok>
            </XMath>
          </Math>, and <Math mode="inline" tex="\psi" text="psi" xml:id="footnote3.m3">
            <XMath>
              <XMTok font="italic" name="psi" role="UNKNOWN">ψ</XMTok>
            </XMath>
          </Math> jointly, but were unable to improve on two-stage training.</note></p>
    </para>
    <subsection inlist="toc" xml:id="S2.SS1">
      <tags>
        <tag>2.1</tag>
        <tag role="autoref">subsection 2.1</tag>
        <tag role="refnum">2.1</tag>
        <tag role="typerefnum">§2.1</tag>
      </tags>
      <title><tag close=" ">2.1</tag>Stage One: Learning the Visual Codebook</title>
      <para xml:id="S2.SS1.p1">
        <p>In the first stage of training, we maximize the ELB with respect to <Math mode="inline" tex="\phi" text="phi" xml:id="S2.SS1.p1.m1">
            <XMath>
              <XMTok font="italic" name="phi" role="UNKNOWN">ϕ</XMTok>
            </XMath>
          </Math> and <Math mode="inline" tex="\theta" text="theta" xml:id="S2.SS1.p1.m2">
            <XMath>
              <XMTok font="italic" name="theta" role="UNKNOWN">θ</XMTok>
            </XMath>
          </Math>, which corresponds to training a dVAE on the images alone. We set the initial prior <Math mode="inline" tex="p_{\psi}" text="p _ psi" xml:id="S2.SS1.p1.m3">
            <XMath>
              <XMApp>
                <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                <XMTok font="italic" role="UNKNOWN">p</XMTok>
                <XMTok font="italic" fontsize="70%" name="psi" role="UNKNOWN">ψ</XMTok>
              </XMApp>
            </XMath>
          </Math> to the uniform categorical distribution over the <Math mode="inline" tex="K=$8192$" text="K = 8192" xml:id="S2.SS1.p1.m4">
            <XMath>
              <XMApp>
                <XMTok meaning="equals" role="RELOP">=</XMTok>
                <XMTok font="italic" role="UNKNOWN">K</XMTok>
                <XMTok meaning="8192" role="NUMBER">8192</XMTok>
              </XMApp>
            </XMath>
          </Math> codebook vectors, and <Math mode="inline" tex="q_{\phi}" text="q _ phi" xml:id="S2.SS1.p1.m5">
            <XMath>
              <XMApp>
                <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                <XMTok font="italic" role="UNKNOWN">q</XMTok>
                <XMTok font="italic" fontsize="70%" name="phi" role="UNKNOWN">ϕ</XMTok>
              </XMApp>
            </XMath>
          </Math> to be categorical distributions parameterized by the <Math mode="inline" tex="8192" text="8192" xml:id="S2.SS1.p1.m6">
            <XMath>
              <XMTok meaning="8192" role="NUMBER">8192</XMTok>
            </XMath>
          </Math> logits at the same spatial position in the <Math mode="inline" tex="32\times 32" text="32 * 32" xml:id="S2.SS1.p1.m7">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">×</XMTok>
                <XMTok meaning="32" role="NUMBER">32</XMTok>
                <XMTok meaning="32" role="NUMBER">32</XMTok>
              </XMApp>
            </XMath>
          </Math> grid output by the encoder.</p>
      </para>
      <para xml:id="S2.SS1.p2">
        <p>The ELB now becomes difficult to optimize: as <Math mode="inline" tex="q_{\psi}" text="q _ psi" xml:id="S2.SS1.p2.m1">
            <XMath>
              <XMApp>
                <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                <XMTok font="italic" role="UNKNOWN">q</XMTok>
                <XMTok font="italic" fontsize="70%" name="psi" role="UNKNOWN">ψ</XMTok>
              </XMApp>
            </XMath>
          </Math> is a discrete distribution, and we cannot use the reparameterization gradient to maximize it. <cite class="ltx_citemacro_citet"><bibref bibrefs="oord2017neural,razavi2019generating" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
              <bibrefphrase>(</bibrefphrase>
              <bibrefphrase>)</bibrefphrase>
            </bibref></cite> address this using an online cluster assignment procedure coupled with the straight-through estimator <cite class="ltx_citemacro_citep">(<bibref bibrefs="bengio2013estimating" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite>. We instead use the gumbel-softmax relaxation <cite class="ltx_citemacro_citep">(<bibref bibrefs="jang2016categorical,maddison2016concrete" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite>, replacing the expectation over <Math mode="inline" tex="q_{\phi}" text="q _ phi" xml:id="S2.SS1.p2.m2">
            <XMath>
              <XMApp>
                <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                <XMTok font="italic" role="UNKNOWN">q</XMTok>
                <XMTok font="italic" fontsize="70%" name="phi" role="UNKNOWN">ϕ</XMTok>
              </XMApp>
            </XMath>
          </Math> with one over <Math mode="inline" tex="q^{\tau}_{\phi}" text="(q ^ tau) _ phi" xml:id="S2.SS1.p2.m3">
            <XMath>
              <XMApp>
                <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                <XMApp>
                  <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                  <XMTok font="italic" role="UNKNOWN">q</XMTok>
                  <XMTok font="italic" fontsize="70%" name="tau" role="UNKNOWN">τ</XMTok>
                </XMApp>
                <XMTok font="italic" fontsize="70%" name="phi" role="UNKNOWN">ϕ</XMTok>
              </XMApp>
            </XMath>
          </Math>, where the relaxation becomes tight as the temperature <Math mode="inline" tex="\tau\to 0" text="tau to 0" xml:id="S2.SS1.p2.m4">
            <XMath>
              <XMApp>
                <XMTok name="to" role="ARROW">→</XMTok>
                <XMTok font="italic" name="tau" role="UNKNOWN">τ</XMTok>
                <XMTok meaning="0" role="NUMBER">0</XMTok>
              </XMApp>
            </XMath>
          </Math>. The likelihood for <Math mode="inline" tex="p_{\theta}" text="p _ theta" xml:id="S2.SS1.p2.m5">
            <XMath>
              <XMApp>
                <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                <XMTok font="italic" role="UNKNOWN">p</XMTok>
                <XMTok font="italic" fontsize="70%" name="theta" role="UNKNOWN">θ</XMTok>
              </XMApp>
            </XMath>
          </Math> is evaluated using the log-laplace distribution (see Appendix <ref labelref="LABEL:sec:dvae_logit_laplace"/> for a derivation).</p>
      </para>
<!--  %\begin{equation} 
     %\mathop{\mathbb{E}}_{z␣\sim␣\tilde{q}^\tau_\phi(z␣\given␣x)}\!\!\!\!\!␣\ln␣p_\theta(x␣,␣z)␣-␣\beta␣\mathop{D_{KL}}(\tilde{q}_\phi␣(z␣\given␣x),␣u(z)).\label{eq:relax} 
     %\end{equation} 
     %Here,␣$u$␣is␣the␣uniform␣categorical␣distribution␣over␣the~$K␣=␣\num{8192}$␣codebook␣vectors␣at␣at␣one␣of␣the~$32␣\times␣32$␣spatial␣positions␣of␣the␣encoder’s␣output. 
     %The␣entropy␣term␣is␣available␣in␣closed-form,␣and␣the␣cross-entropy␣term␣is␣a␣constant. -->      <para xml:id="S2.SS1.p3">
        <p>The relaxed ELB is maximized using Adam <cite class="ltx_citemacro_citep">(<bibref bibrefs="kingma2014adam" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite> with exponentially weighted iterate averaging. Appendix <ref labelref="LABEL:sec:dvae_train"/> gives a complete description of the hyperparameters, but we found the following to be especially important for stable training:</p>
        <itemize xml:id="S2.I3">
          <item xml:id="S2.I3.i1">
            <tags>
              <tag>•</tag>
              <tag role="autoref">item </tag>
              <tag role="typerefnum">1st item</tag>
            </tags>
            <para xml:id="S2.I3.i1.p1">
              <p>Specific annealing schedules for the relaxation temperature and step size. We found that annealing <Math mode="inline" tex="\tau" text="tau" xml:id="S2.I3.i1.p1.m1">
                  <XMath>
                    <XMTok font="italic" name="tau" role="UNKNOWN">τ</XMTok>
                  </XMath>
                </Math> to <Math mode="inline" tex="1/16" text="1 / 16" xml:id="S2.I3.i1.p1.m2">
                  <XMath>
                    <XMApp>
                      <XMTok meaning="divide" role="MULOP">/</XMTok>
                      <XMTok meaning="1" role="NUMBER">1</XMTok>
                      <XMTok meaning="16" role="NUMBER">16</XMTok>
                    </XMApp>
                  </XMath>
                </Math> was sufficient to close the gap between the relaxed validation ELB and the true validation ELB with <Math mode="inline" tex="q_{\phi}" text="q _ phi" xml:id="S2.I3.i1.p1.m3">
                  <XMath>
                    <XMApp>
                      <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                      <XMTok font="italic" role="UNKNOWN">q</XMTok>
                      <XMTok font="italic" fontsize="70%" name="phi" role="UNKNOWN">ϕ</XMTok>
                    </XMApp>
                  </XMath>
                </Math> intsead of <Math mode="inline" tex="q_{\phi}^{\tau}" text="(q _ phi) ^ tau" xml:id="S2.I3.i1.p1.m4">
                  <XMath>
                    <XMApp>
                      <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                      <XMApp>
                        <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                        <XMTok font="italic" role="UNKNOWN">q</XMTok>
                        <XMTok font="italic" fontsize="70%" name="phi" role="UNKNOWN">ϕ</XMTok>
                      </XMApp>
                      <XMTok font="italic" fontsize="70%" name="tau" role="UNKNOWN">τ</XMTok>
                    </XMApp>
                  </XMath>
                </Math>.</p>
            </para>
          </item>
          <item xml:id="S2.I3.i2">
            <tags>
              <tag>•</tag>
              <tag role="autoref">item </tag>
              <tag role="typerefnum">2nd item</tag>
            </tags>
            <para xml:id="S2.I3.i2.p1">
              <p>The use of <Math mode="inline" tex="1\times 1" text="1 * 1" xml:id="S2.I3.i2.p1.m1">
                  <XMath>
                    <XMApp>
                      <XMTok meaning="times" role="MULOP">×</XMTok>
                      <XMTok meaning="1" role="NUMBER">1</XMTok>
                      <XMTok meaning="1" role="NUMBER">1</XMTok>
                    </XMApp>
                  </XMath>
                </Math> convolutions at the end of the encoder and the beginning of the decoder. We found that reducing the receptive field size for the convolutions around the relaxation led to it generalizing better to the true ELB.</p>
            </para>
          </item>
          <item xml:id="S2.I3.i3">
            <tags>
              <tag>•</tag>
              <tag role="autoref">item </tag>
              <tag role="typerefnum">3rd item</tag>
            </tags>
            <para xml:id="S2.I3.i3.p1">
              <p>Multiplication of the outgoing activations from the encoder and decoder resblocks by a small constant, to ensure stable training at initialization.</p>
            </para>
          </item>
        </itemize>
        <p>We also found that increasing the KL weight to <Math mode="inline" tex="\beta=6.6" text="beta = 6.6" xml:id="S2.SS1.p3.m1">
            <XMath>
              <XMApp>
                <XMTok meaning="equals" role="RELOP">=</XMTok>
                <XMTok font="italic" name="beta" role="UNKNOWN">β</XMTok>
                <XMTok meaning="6.6" role="NUMBER">6.6</XMTok>
              </XMApp>
            </XMath>
          </Math> promotes better codebook usage and ultimately leads to a <emph font="italic">smaller</emph> reconstruction error at the end of training.<note mark="4" role="footnote" xml:id="footnote4"><tags>
              <tag>4</tag>
              <tag role="autoref">footnote 4</tag>
              <tag role="refnum">4</tag>
              <tag role="typerefnum">footnote 4</tag>
            </tags>This is contrary to the usual tradeoff between the two terms. We speculate that for smaller values of <Math mode="inline" tex="\beta" text="beta" xml:id="footnote4.m1">
              <XMath>
                <XMTok font="italic" name="beta" role="UNKNOWN">β</XMTok>
              </XMath>
            </Math>, the noise from the relaxation causes the optimizer to reduce codebook usage toward the beginning of training, resulting in worse ELB at convergence.</note></p>
      </para>
    </subsection>
    <subsection inlist="toc" labels="LABEL:sec:learning_prior" xml:id="S2.SS2">
      <tags>
        <tag>2.2</tag>
        <tag role="autoref">subsection 2.2</tag>
        <tag role="refnum">2.2</tag>
        <tag role="typerefnum">§2.2</tag>
      </tags>
      <title><tag close=" ">2.2</tag>Stage Two: Learning the Prior</title>
      <para xml:id="S2.SS2.p1">
        <p>In the second stage, we fix <Math mode="inline" tex="\phi" text="phi" xml:id="S2.SS2.p1.m1">
            <XMath>
              <XMTok font="italic" name="phi" role="UNKNOWN">ϕ</XMTok>
            </XMath>
          </Math> and <Math mode="inline" tex="\theta" text="theta" xml:id="S2.SS2.p1.m2">
            <XMath>
              <XMTok font="italic" name="theta" role="UNKNOWN">θ</XMTok>
            </XMath>
          </Math>, and learn the prior distribution over the text and image tokens by maximizing the ELB with respect to <Math mode="inline" tex="\psi" text="psi" xml:id="S2.SS2.p1.m3">
            <XMath>
              <XMTok font="italic" name="psi" role="UNKNOWN">ψ</XMTok>
            </XMath>
          </Math>. Here, <Math mode="inline" tex="p_{\psi}" text="p _ psi" xml:id="S2.SS2.p1.m4">
            <XMath>
              <XMApp>
                <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                <XMTok font="italic" role="UNKNOWN">p</XMTok>
                <XMTok font="italic" fontsize="70%" name="psi" role="UNKNOWN">ψ</XMTok>
              </XMApp>
            </XMath>
          </Math> is represented by a 12-billion parameter sparse transformer <cite class="ltx_citemacro_citep">(<bibref bibrefs="child2019generating" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite>.</p>
      </para>
      <para xml:id="S2.SS2.p2">
        <p>Given a text-image pair, we BPE-encode <cite class="ltx_citemacro_citep">(<bibref bibrefs="sennrich2015neural" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite> the lowercased caption using at most 256 tokens<note mark="5" role="footnote" xml:id="footnote5"><tags>
              <tag>5</tag>
              <tag role="autoref">footnote 5</tag>
              <tag role="refnum">5</tag>
              <tag role="typerefnum">footnote 5</tag>
            </tags>During training, we apply 10% BPE dropout <cite class="ltx_citemacro_citep">(<bibref bibrefs="provilkov2019bpe" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
                <bibrefphrase>, </bibrefphrase>
              </bibref>)</cite>, whose use is common in the neural machine translation literature.</note> with vocabulary size <Math mode="inline" tex="16384" text="16384" xml:id="S2.SS2.p2.m1">
            <XMath>
              <XMTok meaning="16384" role="NUMBER">16384</XMTok>
            </XMath>
          </Math>, and encode the image using <Math mode="inline" tex="32\times 32=1024" text="32 * 32 = 1024" xml:id="S2.SS2.p2.m2">
            <XMath>
              <XMApp>
                <XMTok meaning="equals" role="RELOP">=</XMTok>
                <XMApp>
                  <XMTok meaning="times" role="MULOP">×</XMTok>
                  <XMTok meaning="32" role="NUMBER">32</XMTok>
                  <XMTok meaning="32" role="NUMBER">32</XMTok>
                </XMApp>
                <XMTok meaning="1024" role="NUMBER">1024</XMTok>
              </XMApp>
            </XMath>
          </Math> tokens with vocabulary size <Math mode="inline" tex="8192" text="8192" xml:id="S2.SS2.p2.m3">
            <XMath>
              <XMTok meaning="8192" role="NUMBER">8192</XMTok>
            </XMath>
          </Math>. The image tokens are obtained using argmax sampling from the dVAE encoder logits, without adding any gumbel noise.<note mark="6" role="footnote" xml:id="footnote6"><tags>
              <tag>6</tag>
              <tag role="autoref">footnote 6</tag>
              <tag role="refnum">6</tag>
              <tag role="typerefnum">footnote 6</tag>
            </tags>Strictly speaking, Equation <ref labelref="LABEL:eq:elb"/> requires us to sample from the categorical distribution specified by the dVAE encoder logits, rather than taking the argmax. In preliminary experiments on ImageNet, we found that this was a useful regularizer in the overparameterized regime, and allows the transformer to be trained using soft targets for the cross-entropy loss. We decided against this here since the model in consideration is in the underparameterized regime.</note> Finally, the text and image tokens are concatenated and modeled autoregressively as a single stream of data.</p>
      </para>
      <para xml:id="S2.SS2.p3">
        <p>The transformer is a decoder-only model in which each image token can attend to all text tokens in any one of its 64 self-attention layers. The full architecture is described in Appendix <ref labelref="LABEL:sec:xf_arch"/>. There are three different kinds of self-attention masks used in the model. The part of the attention masks corresponding to the text-to-text attention is the standard causal mask, and the part for the image-to-image attention uses either a row, column, or convolutional attention mask.<note mark="7" role="footnote" xml:id="footnote7"><tags>
              <tag>7</tag>
              <tag role="autoref">footnote 7</tag>
              <tag role="refnum">7</tag>
              <tag role="typerefnum">footnote 7</tag>
            </tags>We found using a single attention operation for all three interactions – “text attends to text”, “image attends to text”, and “image attends to image” – to perform better than using separate attention operations that are independently normalized.</note></p>
      </para>
      <para xml:id="S2.SS2.p4">
        <p>We limit the length of a text caption to 256 tokens, though it is not totally clear what to do for the “padding” positions in between the last text token and the start-of-image token. One option is to set the logits for these tokens to <Math mode="inline" tex="-\infty" text="- infinity" xml:id="S2.SS2.p4.m1">
            <XMath>
              <XMApp>
                <XMTok meaning="minus" role="ADDOP">-</XMTok>
                <XMTok meaning="infinity" name="infty" role="ID">∞</XMTok>
              </XMApp>
            </XMath>
          </Math> in the self-attention operations. Instead, we opt to learn a special padding token separately for each of the 256 text positions. This token is used only when no text token is available. In preliminary experiments on Conceptual Captions <cite class="ltx_citemacro_citep">(<bibref bibrefs="sharma2018conceptual" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite>, we found that this resulted in higher validation loss, but better performance on out-of-distribution captions.</p>
      </para>
      <para xml:id="S2.SS2.p5">
        <p>We normalize the cross-entropy losses for the text and image tokens by the total number of each kind in a batch of data. Since we are primarily interested in image modeling, we multiply the cross-entropy loss for the text by <Math mode="inline" tex="1/8" text="1 / 8" xml:id="S2.SS2.p5.m1">
            <XMath>
              <XMApp>
                <XMTok meaning="divide" role="MULOP">/</XMTok>
                <XMTok meaning="1" role="NUMBER">1</XMTok>
                <XMTok meaning="8" role="NUMBER">8</XMTok>
              </XMApp>
            </XMath>
          </Math> and the cross-entropy loss for the image by <Math mode="inline" tex="7/8" text="7 / 8" xml:id="S2.SS2.p5.m2">
            <XMath>
              <XMApp>
                <XMTok meaning="divide" role="MULOP">/</XMTok>
                <XMTok meaning="7" role="NUMBER">7</XMTok>
                <XMTok meaning="8" role="NUMBER">8</XMTok>
              </XMApp>
            </XMath>
          </Math>. The objective is optimized using Adam with exponentially weighted iterate averaging; Appendix <ref labelref="LABEL:sec:xf_train"/> describes the training procedure in more detail. We reserved about <Math mode="inline" tex="606000" text="606000" xml:id="S2.SS2.p5.m3">
            <XMath>
              <XMTok meaning="606000" role="NUMBER">606000</XMTok>
            </XMath>
          </Math> images for validation, and found no signs of overfitting at convergence.</p>
      </para>
      <figure inlist="lof" labels="LABEL:fig:grad_scaling" placement="t" xml:id="S2.F4">
        <tags>
          <tag>Figure 4</tag>
          <tag role="autoref">Figure 4</tag>
          <tag role="refnum">4</tag>
          <tag role="typerefnum">Figure 4</tag>
        </tags>
        <graphics candidates="per_resblock_scaling.png" class="ltx_centering" graphic="per_resblock_scaling.png" options="width=433.62pt,keepaspectratio=true" xml:id="S2.F4.g1"/>
        <toccaption class="ltx_centering"><tag close=" ">4</tag>Illustration of per-resblock gradient scaling for a transformer resblock. The solid line indicates the sequence of operations for forward propagation, and the dashed line the sequence of operations for backpropagation. We scale the incoming gradient for each resblock by its gradient scale, and unscale the outgoing gradient before it is added to the sum of the gradients from the successive resblocks. The activations and gradients along the identity path are stored in 32-bit precision. The “filter” operation sets all Inf and NaN values in the activation gradient to zero. Without this, a nonfinite event in the current resblock would cause the gradient scales for all preceding resblocks to unnecessarily drop, thereby resulting in underflow.</toccaption>
        <caption class="ltx_centering"><tag close=": ">Figure 4</tag>Illustration of per-resblock gradient scaling for a transformer resblock. The solid line indicates the sequence of operations for forward propagation, and the dashed line the sequence of operations for backpropagation. We scale the incoming gradient for each resblock by its gradient scale, and unscale the outgoing gradient before it is added to the sum of the gradients from the successive resblocks. The activations and gradients along the identity path are stored in 32-bit precision. The “filter” operation sets all Inf and NaN values in the activation gradient to zero. Without this, a nonfinite event in the current resblock would cause the gradient scales for all preceding resblocks to unnecessarily drop, thereby resulting in underflow.</caption>
      </figure>
      <figure inlist="lof" labels="LABEL:fig:dist_comm" placement="t" xml:id="S2.F5">
        <tags>
          <tag>Figure 5</tag>
          <tag role="autoref">Figure 5</tag>
          <tag role="refnum">5</tag>
          <tag role="typerefnum">Figure 5</tag>
        </tags>
        <graphics candidates="dist_comm.png" class="ltx_centering" graphic="dist_comm.png" options="width=216.81pt,keepaspectratio=true" xml:id="S2.F5.g1"/>
        <toccaption class="ltx_centering"><tag close=" ">5</tag>Communication patterns used for distributed training. Each parameter array in the model is sharded among the eight GPUs on each machine. During forward propagation, we prefetch the parameter shards for the next resblock (using all-gather) while computing the activations for the current resblock. To conserve memory, the parameter shards from the other GPUs are immediately discarded. Similarly, during backpropagation, we prefetch the parameter shards for the previous resblock while computing the activations and gradients for the current resblock. After all GPUs have computed the gradient with respect to an all-gathered parameter, the reduce-scatter operation leaves each GPU with only one slice – i.e., the gradient for its parameter shard, averaged over the eight GPUs.</toccaption>
        <caption class="ltx_centering"><tag close=": ">Figure 5</tag>Communication patterns used for distributed training. Each parameter array in the model is sharded among the eight GPUs on each machine. During forward propagation, we prefetch the parameter shards for the next resblock (using all-gather) while computing the activations for the current resblock. To conserve memory, the parameter shards from the other GPUs are immediately discarded. Similarly, during backpropagation, we prefetch the parameter shards for the previous resblock while computing the activations and gradients for the current resblock. After all GPUs have computed the gradient with respect to an all-gathered parameter, the reduce-scatter operation leaves each GPU with only one slice – i.e., the gradient for its parameter shard, averaged over the eight GPUs.</caption>
      </figure>
    </subsection>
    <subsection inlist="toc" labels="LABEL:sec:data_collection" xml:id="S2.SS3">
      <tags>
        <tag>2.3</tag>
        <tag role="autoref">subsection 2.3</tag>
        <tag role="refnum">2.3</tag>
        <tag role="typerefnum">§2.3</tag>
      </tags>
      <title><tag close=" ">2.3</tag>Data Collection</title>
      <para xml:id="S2.SS3.p1">
        <p>Our preliminary experiments for models up to <Math mode="inline" tex="1.2" text="1.2" xml:id="S2.SS3.p1.m1">
            <XMath>
              <XMTok meaning="1.2" role="NUMBER">1.2</XMTok>
            </XMath>
          </Math> billion parameters were carried out on Conceptual Captions, a dataset of 3.3 million text-image pairs that was developed as an extension to MS-COCO <cite class="ltx_citemacro_citep">(<bibref bibrefs="lin2014microsoft" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite>.</p>
      </para>
      <para xml:id="S2.SS3.p2">
        <p>To scale up to <Math mode="inline" tex="12" text="12" xml:id="S2.SS3.p2.m1">
            <XMath>
              <XMTok meaning="12" role="NUMBER">12</XMTok>
            </XMath>
          </Math>-billion parameters, we created a dataset of a similar scale to JFT-300M <cite class="ltx_citemacro_citep">(<bibref bibrefs="sun2017revisiting" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite> by collecting 250 million text-images pairs from the internet. This dataset does not include MS-COCO, but does include Conceptual Captions and a filtered subset of YFCC100M <cite class="ltx_citemacro_citep">(<bibref bibrefs="thomee2016yfcc100m" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite>. As MS-COCO was created from the latter, our training data includes a fraction of the MS-COCO validation images (but none of the captions). We control for this in the quantitative results presented in Section <ref labelref="LABEL:sec:experiments"/> and find that it has no appreciable bearing on the results. We provide further details about the data collection process in Appendix <ref labelref="LABEL:sec:data_collection_details"/>.</p>
      </para>
    </subsection>
    <subsection inlist="toc" labels="LABEL:sec:mp_train" xml:id="S2.SS4">
      <tags>
        <tag>2.4</tag>
        <tag role="autoref">subsection 2.4</tag>
        <tag role="refnum">2.4</tag>
        <tag role="typerefnum">§2.4</tag>
      </tags>
      <title><tag close=" ">2.4</tag>Mixed-Precision Training</title>
      <para xml:id="S2.SS4.p1">
        <p>To save GPU memory and increase throughput, most parameters, Adam moments, and activations are stored in 16-bit precision. We also use activation checkpointing and recompute the activations within the resblocks during the backward pass. Getting the model to train in 16-bit precision past one billion parameters, without diverging, was the most challenging part of this project.</p>
      </para>
      <para xml:id="S2.SS4.p2">
        <p>We believe the root cause of this instability to be underflow in the 16-bit gradients. Appendix <ref labelref="LABEL:sec:mp_train_guidelines"/> presents a set of guidelines we developed to avoid underflow when training large-scale generative models. Here, we describe one of these guidelines: per-resblock gradient scaling.</p>
      </para>
      <para xml:id="S2.SS4.p3">
        <p>Similar to prior work <cite class="ltx_citemacro_citep">(<bibref bibrefs="liu2020understanding" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite>, we found that the norms of the activation gradients from the resblocks decrease monotonically as we move from the earlier resblocks to the later ones.<note mark="8" role="footnote" xml:id="footnote8"><tags>
              <tag>8</tag>
              <tag role="autoref">footnote 8</tag>
              <tag role="refnum">8</tag>
              <tag role="typerefnum">footnote 8</tag>
            </tags>It is possible that better initialization schemes <cite class="ltx_citemacro_citep">(<bibref bibrefs="liu2020understanding" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
                <bibrefphrase>, </bibrefphrase>
              </bibref>)</cite> might be able to avoid this, but we did not have success with alternative schemes in our experiments.</note> As the model is made deeper and wider, the true exponents of the activation gradients for later resblocks can fall below the minimum exponent of the 16-bit format. Consequently, they get rounded to zero, a phenomenon called <emph font="italic">underflow</emph>. We found that eliminating underflow allowed for stable training to convergence.</p>
      </para>
      <para xml:id="S2.SS4.p4">
        <p>Standard loss scaling <cite class="ltx_citemacro_citep">(<bibref bibrefs="micikevicius2017mixed" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite> is able to avoid underflow when the range spanned by the smallest and largest activation gradients (in absolute value) fits within the exponent range of the 16-bit format. On NVIDIA V100 GPUs, this exponent range is specified by five bits. While this is sufficient for training vanilla language models of the same size, we found the range to be too small for the text-to-image model.</p>
      </para>
      <para xml:id="S2.SS4.p5">
        <p>Our fix, which is shown in Figure <ref labelref="LABEL:fig:grad_scaling"/>, involves using a separate “gradient scale” for each resblock in the model. This can be seen as a practical alternative to a more general framework for mixed-precision training called Flexpoint <cite class="ltx_citemacro_citep">(<bibref bibrefs="koster2017flexpoint" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite>, with the advantage that specialized GPU kernels are not required. We found that <cite class="ltx_citemacro_citet"><bibref bibrefs="sun2020ultra" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
              <bibrefphrase>(</bibrefphrase>
              <bibrefphrase>)</bibrefphrase>
            </bibref></cite> had independently developed similar procedure for training convolutional networks in 4-bit precision.</p>
      </para>
    </subsection>
    <subsection inlist="toc" labels="LABEL:sec:dist_opt" xml:id="S2.SS5">
      <tags>
        <tag>2.5</tag>
        <tag role="autoref">subsection 2.5</tag>
        <tag role="refnum">2.5</tag>
        <tag role="typerefnum">§2.5</tag>
      </tags>
      <title><tag close=" ">2.5</tag>Distributed Optimization</title>
      <table inlist="lot" labels="LABEL:tab:cmp_rank" xml:id="S2.T1">
        <tags>
          <tag>Table 1</tag>
          <tag role="autoref">Table 1</tag>
          <tag role="refnum">1</tag>
          <tag role="typerefnum">Table 1</tag>
        </tags>
<!--  %****␣main.tex␣Line␣275␣**** -->        <tabular class="ltx_centering ltx_guessed_headers" vattach="middle">
          <thead>
            <tr>
              <td align="center" border="tt" thead="column row"><text fontsize="70%">Effective Parameter Count</text></td>
              <td align="center" border="tt" thead="column"><text fontsize="70%">Compression Rank</text></td>
              <td align="center" border="tt" thead="column"><text fontsize="70%">Compression Rate</text></td>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="center" border="t" thead="row"><Math mode="inline" tex="2.8\cdot 10^{9}" text="2.8 cdot 10 ^ 9" xml:id="S2.T1.m1">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="70%" name="cdot" role="MULOP">⋅</XMTok>
                      <XMTok fontsize="70%" meaning="2.8" role="NUMBER">2.8</XMTok>
                      <XMApp>
                        <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                        <XMTok fontsize="70%" meaning="10" role="NUMBER">10</XMTok>
                        <XMTok fontsize="49%" meaning="9" role="NUMBER">9</XMTok>
                      </XMApp>
                    </XMApp>
                  </XMath>
                </Math><text fontsize="70%"> (</text><Math mode="inline" tex="d_{\mathrm{model}}=1920" text="d _ model = 1920" xml:id="S2.T1.m2">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="70%" meaning="equals" role="RELOP">=</XMTok>
                      <XMApp>
                        <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                        <XMTok font="italic" fontsize="70%" role="UNKNOWN">d</XMTok>
                        <XMTok fontsize="49%" role="UNKNOWN">model</XMTok>
                      </XMApp>
                      <XMTok fontsize="70%" meaning="1920" role="NUMBER">1920</XMTok>
                    </XMApp>
                  </XMath>
                </Math><text fontsize="70%">)</text></td>
              <td align="center" border="t"><text fontsize="70%">512</text></td>
              <td align="center" border="t"><Math mode="inline" tex="\approx\!83\%" text="absent approximately-equals 83percent" xml:id="S2.T1.m3">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="70%" meaning="approximately-equals" name="approx" role="RELOP" rpadding="-1.7pt">≈</XMTok>
                      <XMTok meaning="absent"/>
                      <XMApp>
                        <XMTok fontsize="70%" meaning="percent" role="POSTFIX">%</XMTok>
                        <XMTok fontsize="70%" meaning="83" role="NUMBER">83</XMTok>
                      </XMApp>
                    </XMApp>
                  </XMath>
                </Math></td>
            </tr>
            <tr>
              <td align="center" thead="row"><Math mode="inline" tex="5.6\cdot 10^{9}" text="5.6 cdot 10 ^ 9" xml:id="S2.T1.m4">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="70%" name="cdot" role="MULOP">⋅</XMTok>
                      <XMTok fontsize="70%" meaning="5.6" role="NUMBER">5.6</XMTok>
                      <XMApp>
                        <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                        <XMTok fontsize="70%" meaning="10" role="NUMBER">10</XMTok>
                        <XMTok fontsize="49%" meaning="9" role="NUMBER">9</XMTok>
                      </XMApp>
                    </XMApp>
                  </XMath>
                </Math><text fontsize="70%"> (</text><Math mode="inline" tex="d_{\mathrm{model}}=2688" text="d _ model = 2688" xml:id="S2.T1.m5">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="70%" meaning="equals" role="RELOP">=</XMTok>
                      <XMApp>
                        <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                        <XMTok font="italic" fontsize="70%" role="UNKNOWN">d</XMTok>
                        <XMTok fontsize="49%" role="UNKNOWN">model</XMTok>
                      </XMApp>
                      <XMTok fontsize="70%" meaning="2688" role="NUMBER">2688</XMTok>
                    </XMApp>
                  </XMath>
                </Math><text fontsize="70%">)</text></td>
              <td align="center"><text fontsize="70%">640</text></td>
              <td align="center"><Math mode="inline" tex="\approx\!85\%" text="absent approximately-equals 85percent" xml:id="S2.T1.m6">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="70%" meaning="approximately-equals" name="approx" role="RELOP" rpadding="-1.7pt">≈</XMTok>
                      <XMTok meaning="absent"/>
                      <XMApp>
                        <XMTok fontsize="70%" meaning="percent" role="POSTFIX">%</XMTok>
                        <XMTok fontsize="70%" meaning="85" role="NUMBER">85</XMTok>
                      </XMApp>
                    </XMApp>
                  </XMath>
                </Math></td>
            </tr>
            <tr>
              <td align="center" border="bb" thead="row"><Math mode="inline" tex="12.0\cdot 10^{9}" text="12.0 cdot 10 ^ 9" xml:id="S2.T1.m7">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="70%" name="cdot" role="MULOP">⋅</XMTok>
                      <XMTok fontsize="70%" meaning="12.0" role="NUMBER">12.0</XMTok>
                      <XMApp>
                        <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                        <XMTok fontsize="70%" meaning="10" role="NUMBER">10</XMTok>
                        <XMTok fontsize="49%" meaning="9" role="NUMBER">9</XMTok>
                      </XMApp>
                    </XMApp>
                  </XMath>
                </Math><text fontsize="70%"> (</text><Math mode="inline" tex="d_{\mathrm{model}}=3968" text="d _ model = 3968" xml:id="S2.T1.m8">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="70%" meaning="equals" role="RELOP">=</XMTok>
                      <XMApp>
                        <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                        <XMTok font="italic" fontsize="70%" role="UNKNOWN">d</XMTok>
                        <XMTok fontsize="49%" role="UNKNOWN">model</XMTok>
                      </XMApp>
                      <XMTok fontsize="70%" meaning="3968" role="NUMBER">3968</XMTok>
                    </XMApp>
                  </XMath>
                </Math><text fontsize="70%">)</text></td>
              <td align="center" border="bb"><text fontsize="70%">896</text></td>
              <td align="center" border="bb"><Math mode="inline" tex="\approx\!86\%" text="absent approximately-equals 86percent" xml:id="S2.T1.m9">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="70%" meaning="approximately-equals" name="approx" role="RELOP" rpadding="-1.7pt">≈</XMTok>
                      <XMTok meaning="absent"/>
                      <XMApp>
                        <XMTok fontsize="70%" meaning="percent" role="POSTFIX">%</XMTok>
                        <XMTok fontsize="70%" meaning="86" role="NUMBER">86</XMTok>
                      </XMApp>
                    </XMApp>
                  </XMath>
                </Math></td>
            </tr>
          </tbody>
        </tabular>
        <toccaption class="ltx_centering"><tag close=" "><text fontsize="70%">1</text></tag><text fontsize="70%">We show the relationship between model size and the minimum compression rank for the gradients (up to a multiple of 128) necessary to avoid a gap in the training loss during the first </text><Math mode="inline" tex="10\%" text="10percent" xml:id="S2.T1.m10">
            <XMath>
              <XMApp>
                <XMTok fontsize="70%" meaning="percent" role="POSTFIX">%</XMTok>
                <XMTok fontsize="70%" meaning="10" role="NUMBER">10</XMTok>
              </XMApp>
            </XMath>
          </Math><text fontsize="70%"> of training. These results suggest that in our setting, we can achieve a compression rate of about </text><Math mode="inline" tex="85\%" text="85percent" xml:id="S2.T1.m11">
            <XMath>
              <XMApp>
                <XMTok fontsize="70%" meaning="percent" role="POSTFIX">%</XMTok>
                <XMTok fontsize="70%" meaning="85" role="NUMBER">85</XMTok>
              </XMApp>
            </XMath>
          </Math><text fontsize="70%">, independent of model size.</text></toccaption>
        <caption class="ltx_centering" fontsize="70%"><tag close=": ">Table 1</tag>We show the relationship between model size and the minimum compression rank for the gradients (up to a multiple of 128) necessary to avoid a gap in the training loss during the first <Math mode="inline" tex="10\%" text="10percent" xml:id="S2.T1.m12">
            <XMath>
              <XMApp>
                <XMTok meaning="percent" role="POSTFIX">%</XMTok>
                <XMTok meaning="10" role="NUMBER">10</XMTok>
              </XMApp>
            </XMath>
          </Math> of training. These results suggest that in our setting, we can achieve a compression rate of about <Math mode="inline" tex="85\%" text="85percent" xml:id="S2.T1.m13">
            <XMath>
              <XMApp>
                <XMTok meaning="percent" role="POSTFIX">%</XMTok>
                <XMTok meaning="85" role="NUMBER">85</XMTok>
              </XMApp>
            </XMath>
          </Math>, independent of model size.</caption>
      </table>
      <figure inlist="lof" labels="LABEL:fig:coco_reranking" placement="t" xml:id="S2.F6">
        <tags>
          <tag>Figure 6</tag>
          <tag role="autoref">Figure 6</tag>
          <tag role="refnum">6</tag>
          <tag role="typerefnum">Figure 6</tag>
        </tags>
        <graphics candidates="coco_reranking.jpg" class="ltx_centering" graphic="coco_reranking.jpg" options="width=433.62pt,keepaspectratio=true" xml:id="S2.F6.g1"/>
        <toccaption class="ltx_centering"><tag close=" ">6</tag>Effect of increasing the number of images for the contrastive reranking procedure on MS-COCO captions.</toccaption>
        <caption class="ltx_centering"><tag close=": ">Figure 6</tag>Effect of increasing the number of images for the contrastive reranking procedure on MS-COCO captions.</caption>
      </figure>
      <para xml:id="S2.SS5.p1">
        <p>Our 12-billion parameter model consumes about 24 GB of memory when stored in 16-bit precision, which exceeds the memory of a 16 GB NVIDIA V100 GPU. We address this using parameter sharding <cite class="ltx_citemacro_citep">(<bibref bibrefs="rajbhandari2019zero" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite>. As shown in Figure <ref labelref="LABEL:fig:dist_comm"/>, parameter sharding allows us to almost completely hide the latency of the intra-machine communication by overlapping it with compute-intensive operations.</p>
      </para>
      <para xml:id="S2.SS5.p2">
        <p>On the cluster used to train the model, the bandwidth between machines is much lower than the bandwidth among GPUs on the same machine. This makes the cost of the operation used to average the gradient among the machines (all-reduce) the main bottleneck during training. We were able to drastically reduce this cost by compressing the gradients using PowerSGD <cite class="ltx_citemacro_citep">(<bibref bibrefs="vogels2019powersgd" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite>.</p>
      </para>
      <para xml:id="S2.SS5.p3">
        <p><!--  %****␣main.tex␣Line␣300␣**** -->In our implementation, each GPU in a machine computes the low-rank factors for its parameter shard gradients independently of its neighboring GPUs.<note mark="9" role="footnote" xml:id="footnote9"><tags>
              <tag>9</tag>
              <tag role="autoref">footnote 9</tag>
              <tag role="refnum">9</tag>
              <tag role="typerefnum">footnote 9</tag>
            </tags>There is still intra-machine communication for other operations; what we mean is that the low-rank factors across the shards, when concatenated, are not regarded as collectively approximating the gradient for the full parameter matrix.</note> Once the low-rank factors are computed, each machine sets its error buffer to the residual between the uncompressed gradient averaged over its eight GPUs (obtained from reduce-scatter), and the decompressed gradient obtained from the low-rank factors.</p>
      </para>
      <para xml:id="S2.SS5.p4">
        <p>PowerSGD replaces the large communication operation for an uncompressed parameter gradient with two, much smaller communication operations for its low-rank factors. For a given compression rank <Math mode="inline" tex="r" text="r" xml:id="S2.SS5.p4.m1">
            <XMath>
              <XMTok font="italic" role="UNKNOWN">r</XMTok>
            </XMath>
          </Math> and transformer activation size <Math mode="inline" tex="d_{\mathrm{model}}" text="d _ model" xml:id="S2.SS5.p4.m2">
            <XMath>
              <XMApp>
                <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                <XMTok font="italic" role="UNKNOWN">d</XMTok>
                <XMTok fontsize="70%" role="UNKNOWN">model</XMTok>
              </XMApp>
            </XMath>
          </Math>, the compression rate is given by <Math mode="inline" tex="1-5r/(8d_{\textrm{model}})" text="1 - (5 * r) / (8 * d _ [model])" xml:id="S2.SS5.p4.m3">
            <XMath>
              <XMApp>
                <XMTok meaning="minus" role="ADDOP">-</XMTok>
                <XMTok meaning="1" role="NUMBER">1</XMTok>
                <XMApp>
                  <XMTok meaning="divide" role="MULOP">/</XMTok>
                  <XMApp>
                    <XMTok meaning="times" role="MULOP">⁢</XMTok>
                    <XMTok meaning="5" role="NUMBER">5</XMTok>
                    <XMTok font="italic" role="UNKNOWN">r</XMTok>
                  </XMApp>
                  <XMDual>
                    <XMRef idref="S2.SS5.p4.m3.1"/>
                    <XMWrap>
                      <XMTok role="OPEN" stretchy="false">(</XMTok>
                      <XMApp xml:id="S2.SS5.p4.m3.1">
                        <XMTok meaning="times" role="MULOP">⁢</XMTok>
                        <XMTok meaning="8" role="NUMBER">8</XMTok>
                        <XMApp>
                          <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                          <XMTok font="italic" role="UNKNOWN">d</XMTok>
                          <XMText><text fontsize="70%">model</text></XMText>
                        </XMApp>
                      </XMApp>
                      <XMTok role="CLOSE" stretchy="false">)</XMTok>
                    </XMWrap>
                  </XMDual>
                </XMApp>
              </XMApp>
            </XMath>
          </Math> (see Appendix <ref labelref="LABEL:sec:dist_train_bw"/>). Table <ref labelref="LABEL:tab:cmp_rank"/> shows that we can achieve a compression rate of about <Math mode="inline" tex="85\%" text="85percent" xml:id="S2.SS5.p4.m4">
            <XMath>
              <XMApp>
                <XMTok meaning="percent" role="POSTFIX">%</XMTok>
                <XMTok meaning="85" role="NUMBER">85</XMTok>
              </XMApp>
            </XMath>
          </Math>, independent of model size.</p>
      </para>
      <para xml:id="S2.SS5.p5">
        <p>In Appendix <ref labelref="LABEL:sec:dist_train_impl"/>, we describe various details that were necessary to get PowerSGD to perform well at scale. These include:</p>
        <itemize xml:id="S2.I4">
          <item xml:id="S2.I4.i1">
            <tags>
              <tag>•</tag>
              <tag role="autoref">item </tag>
              <tag role="typerefnum">1st item</tag>
            </tags>
            <para xml:id="S2.I4.i1.p1">
              <p>Saving memory by accumulating the gradient into the error buffers during backpropagation, rather than allocating separate buffers.</p>
            </para>
          </item>
          <item xml:id="S2.I4.i2">
            <tags>
              <tag>•</tag>
              <tag role="autoref">item </tag>
              <tag role="typerefnum">2nd item</tag>
            </tags>
            <para xml:id="S2.I4.i2.p1">
              <p>Minimizing instances in which we zero out the error buffers (e.g., due to nonfinite values encountered during mixed-precision backpropagation, or when resuming training from a checkpoint).</p>
            </para>
          </item>
          <item xml:id="S2.I4.i3">
            <tags>
              <tag>•</tag>
              <tag role="autoref">item </tag>
              <tag role="typerefnum">3rd item</tag>
            </tags>
            <para xml:id="S2.I4.i3.p1">
              <p>Improving numerical stability by using Householder orthogonalization instead of Gram-Schmidt, together with the addition of a small multiple of the identity matrix to the input.</p>
            </para>
          </item>
          <item xml:id="S2.I4.i4">
            <tags>
              <tag>•</tag>
              <tag role="autoref">item </tag>
              <tag role="typerefnum">4th item</tag>
            </tags>
            <para xml:id="S2.I4.i4.p1">
              <p>Avoiding underflow by using a custom 16-bit floating point format for the error buffers, their low-rank factors, and the all-reduce communication operations involving them.</p>
            </para>
          </item>
        </itemize>
        <p>We also found the warm-start procedure for the <Math mode="inline" tex="Q" text="Q" xml:id="S2.SS5.p5.m1">
            <XMath>
              <XMTok font="italic" role="UNKNOWN">Q</XMTok>
            </XMath>
          </Math> matrix described in <cite class="ltx_citemacro_citet"><bibref bibrefs="vogels2019powersgd" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
              <bibrefphrase>(</bibrefphrase>
              <bibrefphrase>)</bibrefphrase>
            </bibref></cite> to be unnecessary: we were able to get equivalent results by fixing <Math mode="inline" tex="Q" text="Q" xml:id="S2.SS5.p5.m2">
            <XMath>
              <XMTok font="italic" role="UNKNOWN">Q</XMTok>
            </XMath>
          </Math> to a random gaussian matrix at the start of training, and never updating it.<note mark="10" role="footnote" xml:id="footnote10"><tags>
              <tag>10</tag>
              <tag role="autoref">footnote 10</tag>
              <tag role="refnum">10</tag>
              <tag role="typerefnum">footnote 10</tag>
            </tags>We verified that the error in reconstructing the true gradient is higher when <Math mode="inline" tex="Q" text="Q" xml:id="footnote10.m1">
              <XMath>
                <XMTok font="italic" role="UNKNOWN">Q</XMTok>
              </XMath>
            </Math> is fixed as opposed to being updated using warm-starting, so it is interesting that this does not affect the loss. By contrast, resampling <Math mode="inline" tex="Q" text="Q" xml:id="footnote10.m2">
              <XMath>
                <XMTok font="italic" role="UNKNOWN">Q</XMTok>
              </XMath>
            </Math> at every update causes a large performance hit.</note></p>
      </para>
    </subsection>
    <subsection inlist="toc" xml:id="S2.SS6">
      <tags>
        <tag>2.6</tag>
        <tag role="autoref">subsection 2.6</tag>
        <tag role="refnum">2.6</tag>
        <tag role="typerefnum">§2.6</tag>
      </tags>
      <title><tag close=" ">2.6</tag>Sample Generation</title>
      <para xml:id="S2.SS6.p1">
        <p>Similar to <cite class="ltx_citemacro_citet"><bibref bibrefs="razavi2019generating" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
              <bibrefphrase>(</bibrefphrase>
              <bibrefphrase>)</bibrefphrase>
            </bibref></cite>, we rerank the samples drawn from the transformer using a pretrained contrastive model <cite class="ltx_citemacro_citep">(<bibref bibrefs="radford2021learning" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite>. Given a caption and a candidate image, the contrastive model assigns a score based on how well the image matches the caption. Figure <ref labelref="LABEL:fig:coco_reranking"/> shows the effect of increasing the number of samples <Math mode="inline" tex="N" text="N" xml:id="S2.SS6.p1.m1">
            <XMath>
              <XMTok font="italic" role="UNKNOWN">N</XMTok>
            </XMath>
          </Math> from which we select the top <Math mode="inline" tex="k" text="k" xml:id="S2.SS6.p1.m2">
            <XMath>
              <XMTok font="italic" role="UNKNOWN">k</XMTok>
            </XMath>
          </Math> images. This process can be seen as a kind of language-guided search <cite class="ltx_citemacro_citep">(<bibref bibrefs="andreas2017learning" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite>, and is also similar to the auxiliary text-image matching loss proposed by <cite class="ltx_citemacro_citet"><bibref bibrefs="xu2018attngan" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
              <bibrefphrase>(</bibrefphrase>
              <bibrefphrase>)</bibrefphrase>
            </bibref></cite>. Unless otherwise stated, all samples used for both qualitative and quantitative results are obtained without temperature reduction (i.e., using <Math mode="inline" tex="t=1" text="t = 1" xml:id="S2.SS6.p1.m3">
            <XMath>
              <XMApp>
                <XMTok meaning="equals" role="RELOP">=</XMTok>
                <XMTok font="italic" role="UNKNOWN">t</XMTok>
                <XMTok meaning="1" role="NUMBER">1</XMTok>
              </XMApp>
            </XMath>
          </Math>) (except for Figure <ref labelref="LABEL:fig:blog_samples"/>) and use reranking with <Math mode="inline" tex="N=512" text="N = 512" xml:id="S2.SS6.p1.m4">
            <XMath>
              <XMApp>
                <XMTok meaning="equals" role="RELOP">=</XMTok>
                <XMTok font="italic" role="UNKNOWN">N</XMTok>
                <XMTok meaning="512" role="NUMBER">512</XMTok>
              </XMApp>
            </XMath>
          </Math>.</p>
      </para>
    </subsection>
  </section>
  <section inlist="toc" labels="LABEL:sec:experiments" xml:id="S3">
    <tags>
      <tag>3</tag>
      <tag role="autoref">section 3</tag>
      <tag role="refnum">3</tag>
      <tag role="typerefnum">§3</tag>
    </tags>
    <title><tag close=" ">3</tag>Experiments</title>
    <figure inlist="lof" labels="LABEL:fig:human_eval" placement="t" xml:id="S3.F7">
      <tags>
        <tag>Figure 7</tag>
        <tag role="autoref">Figure 7</tag>
        <tag role="refnum">7</tag>
        <tag role="typerefnum">Figure 7</tag>
      </tags>
      <graphics candidates="assets_v2_final_graph.png" class="ltx_centering" graphic="assets_v2_final_graph.png" options="width=433.62pt,keepaspectratio=true" xml:id="S3.F7.g1"/>
      <toccaption class="ltx_centering"><tag close=" ">7</tag>Human evaluation of our model (evaluated zero-shot without temperature reduction) vs prior work (DF-GAN) on captions from MS-COCO. In a best-of-five vote, our model’s sample was chosen as the most realistic 90.0% of the time, and was chosen as the image best matching a shared caption 93.3% of the time.</toccaption>
      <caption class="ltx_centering"><tag close=": ">Figure 7</tag>Human evaluation of our model (evaluated zero-shot without temperature reduction) vs prior work (DF-GAN) on captions from MS-COCO. In a best-of-five vote, our model’s sample was chosen as the most realistic 90.0% of the time, and was chosen as the image best matching a shared caption 93.3% of the time.</caption>
<!--  %****␣main.tex␣Line␣325␣**** -->    </figure>
<!--  %Uncomment␣if␣we␣decide␣to␣include␣quantitative␣results␣for␣t=0.85. 
     %\begin{figure}[t] 
     %\centering 
     %\includegraphics[width=\linewidth]{assets_v1_final_graph.png} 
     %\caption{Human␣evaluation␣of␣our␣model~($t=0.85$)␣vs.␣prior␣work~(DF-GAN).␣In␣a␣best-of-5,␣our␣model’s␣output␣was␣chosen␣as␣the␣most␣realistic␣91.3\%␣of␣the␣time,␣and␣was␣chosen␣as␣the␣image␣best␣matching␣a␣shared␣caption␣94.5\%␣of␣the␣time.} 
     %\label{fig:assets_v1_final_graph} 
     %\end{figure} -->    <subsection inlist="toc" xml:id="S3.SS1">
      <tags>
        <tag>3.1</tag>
        <tag role="autoref">subsection 3.1</tag>
        <tag role="refnum">3.1</tag>
        <tag role="typerefnum">§3.1</tag>
      </tags>
      <title><tag close=" ">3.1</tag>Quantitative Results</title>
      <para xml:id="S3.SS1.p1">
        <p>We evaluate our model zero-shot by comparing it to three prior approaches: AttnGAN <cite class="ltx_citemacro_citep">(<bibref bibrefs="xu2018attngan" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite>, DM-GAN <cite class="ltx_citemacro_citep">(<bibref bibrefs="zhu2019dm" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite>, and DF-GAN <cite class="ltx_citemacro_citep">(<bibref bibrefs="tao2020df" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite>, the last of which reports the best Inception Score <cite class="ltx_citemacro_citep">(<bibref bibrefs="salimans2016improved" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite> and Fréchet Inception Distance <cite class="ltx_citemacro_citep">(<bibref bibrefs="heusel2017gans" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite> on MS-COCO. Figure <ref labelref="LABEL:fig:coco_cmp"/> qualitatively compares samples from our model to those from prior work.</p>
      </para>
      <para xml:id="S3.SS1.p2">
        <p>We also conduct a human evaluation similar to the one used in <cite class="ltx_citemacro_citet"><bibref bibrefs="koh2021text" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
              <bibrefphrase>(</bibrefphrase>
              <bibrefphrase>)</bibrefphrase>
            </bibref></cite> to compare our approach to DF-GAN, the results of which are shown in Figure <ref labelref="LABEL:fig:human_eval"/>. Given a caption, the sample from our model receives the majority vote for better matching the caption 93% of the time. It also receives the majority vote for being more realistic 90% of the time.</p>
      </para>
      <para xml:id="S3.SS1.p3">
        <p>Figure <ref labelref="LABEL:fig:quant_results"/>(a) shows that our model also obtains an FID score on MS-COCO within 2 points of the best prior approach, despite having never been trained on the captions. Our training data incorporates a filtered subset of YFCC100M, and we found that it includes about <Math mode="inline" tex="21\%" text="21percent" xml:id="S3.SS1.p3.m1">
            <XMath>
              <XMApp>
                <XMTok meaning="percent" role="POSTFIX">%</XMTok>
                <XMTok meaning="21" role="NUMBER">21</XMTok>
              </XMApp>
            </XMath>
          </Math> of the images in the MS-COCO validation set from a de-duplication procedure described in the next section. To isolate this effect, we compute the FID statistics for the validation set both with these images (solid lines) and without them (dashed lines), finding no significant change in the results.</p>
      </para>
      <para xml:id="S3.SS1.p4">
        <p>Training the transformer on the tokens from the dVAE encoder allows us to allocate its modeling capacity to the low-frequency information that makes images visually recognizable to us. However, it also disadvantages the model, since the heavy compression renders it unable to produce high-frequency details. To test the effect of this on the quantitative evaluations, we compute the FID and IS in Figure <ref labelref="LABEL:fig:quant_results"/>(a) after applying a Gaussian filter with varying radius to both the validation images and samples from the models. Our approach achieves the best FID by a margin of about 6 points with a slight blur of radius 1. The gap between our approach and others tends to widen as the blur radius is increased. We also obtain the highest IS when the blur radius is greater than or equal to two.</p>
      </para>
      <figure inlist="lof" labels="LABEL:fig:cub_samples" placement="t" xml:id="S3.F8">
        <tags>
          <tag>Figure 8</tag>
          <tag role="autoref">Figure 8</tag>
          <tag role="refnum">8</tag>
          <tag role="typerefnum">Figure 8</tag>
        </tags>
        <graphics candidates="cub_samples.jpg" class="ltx_centering" graphic="cub_samples.jpg" options="width=433.62pt,keepaspectratio=true" xml:id="S3.F8.g1"/>
        <toccaption class="ltx_centering"><tag close=" ">8</tag>Zero-shot samples from our model on the CUB dataset.</toccaption>
        <caption class="ltx_centering"><tag close=": ">Figure 8</tag>Zero-shot samples from our model on the CUB dataset.</caption>
      </figure>
      <figure inlist="lof" labels="LABEL:fig:quant_results" placement="t" xml:id="S3.F9">
        <tags>
          <tag>Figure 9</tag>
          <tag role="autoref">Figure 9</tag>
          <tag role="refnum">9</tag>
          <tag role="typerefnum">Figure 9</tag>
        </tags>
        <figure align="center" class="ltx_figure_panel" xml:id="S3.F9.sf1">
          <tags>
            <tag>(a)</tag>
            <tag role="autoref">9a</tag>
            <tag role="refnum">9a</tag>
          </tags>
          <tabular vattach="middle">
            <tbody>
              <tr>
                <td align="center"><graphics candidates="coco_fid.png" graphic="coco_fid.png" options="width=134.42113pt,keepaspectratio=true" xml:id="S3.F9.sf1.g1"/></td>
              </tr>
              <tr>
                <td align="center"><graphics candidates="coco_is.png" graphic="coco_is.png" options="width=134.42113pt,keepaspectratio=true" xml:id="S3.F9.sf1.g2"/></td>
              </tr>
            </tbody>
          </tabular>
          <toccaption><tag close=" ">a</tag>FID and IS on MS-COCO as a function of blur radius.</toccaption>
          <caption><tag close=" ">(a)</tag>FID and IS on MS-COCO as a function of blur radius.</caption>
        </figure>
        <figure align="center" class="ltx_figure_panel" xml:id="S3.F9.sf2">
          <tags>
            <tag>(b)</tag>
            <tag role="autoref">9b</tag>
            <tag role="refnum">9b</tag>
          </tags>
          <tabular vattach="middle">
            <tbody>
              <tr>
                <td align="center"><graphics candidates="cub_fid.png" graphic="cub_fid.png" options="width=134.42113pt,keepaspectratio=true" xml:id="S3.F9.sf2.g1"/></td>
              </tr>
              <tr>
                <td align="center"><graphics candidates="cub_is.png" graphic="cub_is.png" options="width=134.42113pt,keepaspectratio=true" xml:id="S3.F9.sf2.g2"/></td>
              </tr>
            </tbody>
          </tabular>
          <toccaption><tag close=" ">b</tag>FID and IS on CUB as a function of blur radius.</toccaption>
          <caption><tag close=" ">(b)</tag>FID and IS on CUB as a function of blur radius.</caption>
        </figure>
        <break class="ltx_break"/>
        <figure align="center" class="ltx_figure_panel" xml:id="S3.F9.sf3">
          <tags>
            <tag>(c)</tag>
            <tag role="autoref">9c</tag>
            <tag role="refnum">9c</tag>
          </tags>
          <tabular vattach="middle">
            <tbody>
              <tr>
                <td align="center"><graphics candidates="coco_fid_clip_sample_size.png" graphic="coco_fid_clip_sample_size.png" options="width=134.42113pt,keepaspectratio=true" xml:id="S3.F9.sf3.g1"/></td>
              </tr>
              <tr>
                <td align="center"><graphics candidates="coco_is_clip_sample_size.png" graphic="coco_is_clip_sample_size.png" options="width=134.42113pt,keepaspectratio=true" xml:id="S3.F9.sf3.g2"/></td>
              </tr>
            </tbody>
          </tabular>
          <toccaption><tag close=" ">c</tag>FID and IS on MS-COCO as a function of the sample size used for reranking.</toccaption>
          <caption><tag close=" ">(c)</tag>FID and IS on MS-COCO as a function of the sample size used for reranking.</caption>
        </figure>
        <toccaption class="ltx_centering"><tag close=" "><!--  %****␣main.tex␣Line␣375␣**** -->9<!--  %****␣main.tex␣Line␣375␣**** 
     %****␣main.tex␣Line␣375␣**** 
     %****␣main.tex␣Line␣375␣**** 
     %****␣main.tex␣Line␣375␣**** 
     %****␣main.tex␣Line␣375␣**** --></tag><!--  %****␣main.tex␣Line␣375␣**** -->Quantitative results on MS-COCO and CUB. Solid lines represent FID computed against the original validation sets, and dashed lines represent FID computed against validation sets with overlapping images removed (see Section <ref labelref="LABEL:sec:data_overlap_analysis"/>). For MS-COCO, we evaluate all models on a subset of <Math mode="inline" tex="30000" text="30000" xml:id="S3.F9.m1">
            <XMath>
              <XMTok meaning="30000" role="NUMBER">30000</XMTok>
            </XMath>
          </Math> captions sampled from the validation set. For CUB, we evaluate all models on all of the unique captions in the test set. We compute the FID and IS using the DM-GAN code, which is available at <ref class="ltx_url" font="typewriter" href="https://github.com/MinfengZhu/DM-GAN">https://github.com/MinfengZhu/DM-GAN</ref>.</toccaption>
        <caption class="ltx_centering"><tag close=": ">Figure 9</tag><!--  %****␣main.tex␣Line␣375␣**** 
     %****␣main.tex␣Line␣375␣**** -->Quantitative results on MS-COCO and CUB. Solid lines represent FID computed against the original validation sets, and dashed lines represent FID computed against validation sets with overlapping images removed (see Section <!--  %****␣main.tex␣Line␣375␣**** 
     %****␣main.tex␣Line␣375␣**** --><ref labelref="LABEL:sec:data_overlap_analysis"/>). For MS-COCO, we evaluate all models on a subset of <Math mode="inline" tex="30000" text="30000" xml:id="S3.F9.m2">
            <XMath>
              <XMTok meaning="30000" role="NUMBER">30000</XMTok>
            </XMath>
          </Math> captions sampled from the validation set. For CUB, we evaluate all models on all of the unique captions in the test set. We compute the FID and IS using the DM-GAN code, which is available at <ref class="ltx_url" font="typewriter" href="https://github.com/MinfengZhu/DM-GAN">https://github.com/MinfengZhu/DM-GAN</ref>.</caption>
      </figure>
      <para xml:id="S3.SS1.p5">
        <p>Our model fares significantly worse on the CUB dataset, for which there is a nearly 40-point gap in FID between our model and the leading prior approach (Figure <ref labelref="LABEL:fig:quant_results"/>(b)). We found an <Math mode="inline" tex="12\%" text="12percent" xml:id="S3.SS1.p5.m1">
            <XMath>
              <XMApp>
                <XMTok meaning="percent" role="POSTFIX">%</XMTok>
                <XMTok meaning="12" role="NUMBER">12</XMTok>
              </XMApp>
            </XMath>
          </Math> overlap rate for this dataset, and again observed no significant difference in the results after removing these images. We speculate that our zero-shot approach is less likely to compare favorably on specialized distributions such as CUB. We believe that fine-tuning is a promising direction for improvement, and leave this investigation to future work. Samples from our model for captions in this dataset are shown in Figure <ref labelref="LABEL:fig:cub_samples"/>.</p>
      </para>
      <para xml:id="S3.SS1.p6">
        <p>Finally, Figure <ref labelref="LABEL:fig:quant_results"/>(c) shows clear improvements in FID and IS for MS-COCO as the sample size used for reranking with the contrastive model is increased. This trend continues up to a sample size of 32, after which we observe diminishing returns.</p>
      </para>
    </subsection>
    <subsection inlist="toc" labels="LABEL:sec:data_overlap_analysis" xml:id="S3.SS2">
      <tags>
        <tag>3.2</tag>
        <tag role="autoref">subsection 3.2</tag>
        <tag role="refnum">3.2</tag>
        <tag role="typerefnum">§3.2</tag>
      </tags>
      <title><tag close=" ">3.2</tag>Data Overlap Analysis</title>
      <para xml:id="S3.SS2.p1">
        <p>We used the deduplication procedure described in <cite class="ltx_citemacro_citet"><bibref bibrefs="radford2021learning" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
              <bibrefphrase>(</bibrefphrase>
              <bibrefphrase>)</bibrefphrase>
            </bibref></cite> to determine which images to remove. For each validation image, we find the closest image in the training data using a contrastive model specifically trained for this task. We then sort the images in descending order by closeness to their nearest matches in the training data. After inspecting the results by hand, we determine the images to remove by manually selecting a conservative threshold designed to minimize the false negative rate.</p>
      </para>
    </subsection>
    <subsection inlist="toc" labels="LABEL:sec:qual_findings" xml:id="S3.SS3">
      <tags>
        <tag>3.3</tag>
        <tag role="autoref">subsection 3.3</tag>
        <tag role="refnum">3.3</tag>
        <tag role="typerefnum">§3.3</tag>
      </tags>
      <title><tag close=" ">3.3</tag>Qualitative Findings</title>
      <para xml:id="S3.SS3.p1">
        <p>We found that our model has the ability to generalize in ways that we did not originally anticipate. When given the caption “a tapir made of accordion…” (Figure <ref labelref="LABEL:fig:blog_samples1"/>), the model appears to draw a tapir with an accordion for a body, or an accordion whose keyboard or bass are in the shape of a tapir’s trunk or legs. This suggests that it has developed a rudimentary ability to compose unusual concepts at high levels of abstraction.</p>
      </para>
      <para xml:id="S3.SS3.p2">
        <p>Our model also appears to be capable of combinatorial generalization, such as when rendering text (Figure <ref labelref="LABEL:fig:blog_samples2"/>) or when probed on sentences like “an illustration of a baby hedgehog in a christmas sweater walking a dog” (Figure <ref labelref="LABEL:fig:blog_samples3"/>). Prompts like the latter require the model to perform variable binding <cite class="ltx_citemacro_citep">(<bibref bibrefs="smolensky1990tensor,greff2020binding" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite> – it is the hedgehog that is in the christmas sweater, not the dog. We note, however, that the model performs inconsistently on the task, sometimes drawing both animals with christmas sweaters, or drawing a hedgehog walking a smaller hedgehog.</p>
      </para>
      <para xml:id="S3.SS3.p3">
        <p>To a limited degree of reliability, we also find our model to be capable of zero-shot image-to-image translation controllable by natural language (Figure <ref labelref="LABEL:fig:blog_samples4"/>). When the model is given the caption “the exact same cat on the top as a sketch at the bottom” and the top <Math mode="inline" tex="15\times 32" text="15 * 32" xml:id="S3.SS3.p3.m1">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">×</XMTok>
                <XMTok meaning="15" role="NUMBER">15</XMTok>
                <XMTok meaning="32" role="NUMBER">32</XMTok>
              </XMApp>
            </XMath>
          </Math> part of the image token grid for a photo of a cat, it is able to draw a sketch of a similar looking cat on the bottom.</p>
      </para>
      <para xml:id="S3.SS3.p4">
        <p>This works with several other kinds of transformations, including image operations (e.g., changing the color of the image, converting it to grayscale, or flipping it upside-down) and style transfer (e.g., drawing the cat on a greeting card, a postage stamp, or a cell phone case). Some transformations, such as those that involve only changing the color of the animal, suggest that the model is capable of performing a rudimentary kind of object segmentation. We provide additional examples of zero-shot image-to-image translation in Section <ref labelref="LABEL:sec:im2im"/>.</p>
      </para>
    </subsection>
  </section>
  <section inlist="toc" xml:id="S4">
    <tags>
      <tag>4</tag>
      <tag role="autoref">section 4</tag>
      <tag role="refnum">4</tag>
      <tag role="typerefnum">§4</tag>
    </tags>
    <title><tag close=" ">4</tag>Conclusion</title>
    <para xml:id="S4.p1">
      <p><!--  %****␣main.tex␣Line␣400␣**** -->We investigate a simple approach for text-to-image generation based on an autoregressive transformer, when it is executed at scale. We find that scale can lead to improved generalization, both in terms of zero-shot performance relative to previous domain-specific approaches, and in terms of the range of capabilities that emerge from a single generative model. Our findings suggest that improving generalization as a function of scale may be a useful driver for progress on this task.</p>
    </para>
<!--  %We␣have␣investigated␣what␣happens␣when␣an␣autoregressive␣transformer␣based␣approach␣to␣text-to-image␣generation␣is␣scaled␣up␣and␣document␣several␣techniques␣critical␣to␣efficient␣and␣stable␣training␣of␣these␣models.␣We␣find␣that␣at␣sufficient␣scale␣generative␣models␣become␣highly␣capable␣and␣domain␣agnostic␣and␣can␣be␣competitive␣with␣prior␣domain␣specific␣models␣zero-shot.␣Our␣work␣suggests␣further␣scaling␣will␣continue␣to␣improve␣performance. -->  </section>
  <section xml:id="Sx1">
    <title>Acknowledgements</title>
    <para xml:id="Sx1.p1">
      <p>We would like to thank Matthew Knight for reviewing the code release for this work, and Rewon Child, John Schulman, Heewoo Jun, and Prafulla Dhariwal for helpful early feedback on the paper. We would also like to thank Jong Wook Kim for writing the PyTorch package for the contrastive model described in <cite class="ltx_citemacro_citet"><bibref bibrefs="radford2019language" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
            <bibrefphrase>(</bibrefphrase>
            <bibrefphrase>)</bibrefphrase>
          </bibref></cite> that we used to rerank the samples from our model.</p>
    </para>
  </section>
  <bibliography citestyle="authoryear" files="main" xml:id="bib">
    <title>References</title>
  </bibliography>
  <pagination role="newpage"/>
  <appendix inlist="toc" xml:id="A1">
    <tags>
      <tag>Appendix A</tag>
      <tag role="autoref">Appendix A</tag>
      <tag role="refnum">A</tag>
      <tag role="typerefnum">Appendix A</tag>
    </tags>
    <title><tag close=" ">Appendix A</tag>Details for Discrete VAE</title>
    <toctitle><tag close=" ">A</tag>Details for Discrete VAE</toctitle>
    <subsection inlist="toc" labels="LABEL:sec:dvae_arch" xml:id="A1.SS1">
      <tags>
        <tag>A.1</tag>
        <tag role="autoref">subsection A.1</tag>
        <tag role="refnum">A.1</tag>
        <tag role="typerefnum">§A.1</tag>
      </tags>
      <title><tag close=" ">A.1</tag>Architecture</title>
      <para xml:id="A1.SS1.p1">
        <p>The dVAE encoder and decoder are convolutional <cite class="ltx_citemacro_citep">(<bibref bibrefs="lecun1998gradient" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite> ResNets <cite class="ltx_citemacro_citep">(<bibref bibrefs="he2016identity" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite> with bottleneck-style resblocks. The models primarily use <Math mode="inline" tex="3\times 3" text="3 * 3" xml:id="A1.SS1.p1.m1">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">×</XMTok>
                <XMTok meaning="3" role="NUMBER">3</XMTok>
                <XMTok meaning="3" role="NUMBER">3</XMTok>
              </XMApp>
            </XMath>
          </Math> convolutions, with <Math mode="inline" tex="1\times 1" text="1 * 1" xml:id="A1.SS1.p1.m2">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">×</XMTok>
                <XMTok meaning="1" role="NUMBER">1</XMTok>
                <XMTok meaning="1" role="NUMBER">1</XMTok>
              </XMApp>
            </XMath>
          </Math> convolutions along skip connections in which the number of feature maps changes between the input and output of a resblock. The first convolution of the encoder is <Math mode="inline" tex="7\times 7" text="7 * 7" xml:id="A1.SS1.p1.m3">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">×</XMTok>
                <XMTok meaning="7" role="NUMBER">7</XMTok>
                <XMTok meaning="7" role="NUMBER">7</XMTok>
              </XMApp>
            </XMath>
          </Math>, and the last convolution of the encoder (which produces the <Math mode="inline" tex="32\times 32\times 8192" text="32 * 32 * 8192" xml:id="A1.SS1.p1.m4">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">×</XMTok>
                <XMTok meaning="32" role="NUMBER">32</XMTok>
                <XMTok meaning="32" role="NUMBER">32</XMTok>
                <XMTok meaning="8192" role="NUMBER">8192</XMTok>
              </XMApp>
            </XMath>
          </Math> output used as the logits for the categorical distributions for the image tokens) is <Math mode="inline" tex="1\times 1" text="1 * 1" xml:id="A1.SS1.p1.m5">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">×</XMTok>
                <XMTok meaning="1" role="NUMBER">1</XMTok>
                <XMTok meaning="1" role="NUMBER">1</XMTok>
              </XMApp>
            </XMath>
          </Math>. Both the first and last convolutions of the decoder are <Math mode="inline" tex="1\times 1" text="1 * 1" xml:id="A1.SS1.p1.m6">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">×</XMTok>
                <XMTok meaning="1" role="NUMBER">1</XMTok>
                <XMTok meaning="1" role="NUMBER">1</XMTok>
              </XMApp>
            </XMath>
          </Math>. The encoder uses max-pooling (which we found to yield better ELB than average-pooling) to downsample the feature maps, and the decoder uses nearest-neighbor upsampling. The precise details for the architectures are given in the files <text font="typewriter">dvae/encoder.py</text> and <text font="typewriter">dvae/decoder.py</text> of the code release.</p>
      </para>
    </subsection>
    <subsection inlist="toc" labels="LABEL:sec:dvae_train" xml:id="A1.SS2">
      <tags>
        <tag>A.2</tag>
        <tag role="autoref">subsection A.2</tag>
        <tag role="refnum">A.2</tag>
        <tag role="typerefnum">§A.2</tag>
      </tags>
      <title><tag close=" ">A.2</tag>Training</title>
      <float class="ltx_lstlisting" inlist="lol" labels="LABEL:lst:dvae_preproc" xml:id="LST1">
        <tags>
          <tag>Listing 1</tag>
          <tag role="autoref">1</tag>
          <tag role="refnum">1</tag>
          <tag role="typerefnum">Listing 1</tag>
        </tags>
        <listing class="ltx_lst_language_Python ltx_lstlisting" data="ZGVmIHByZXByb2Nlc3NfaW1hZ2UoaW1nLCB0YXJnZXRfcmVzKToKICAgIGgsIHcgID0gdGYuc2hhcGUoaW1nKVswXSwgdGYuc2hhcGUoaW1nKVsxXQogICAgc19taW4gPSB0Zi5taW5pbXVtKGgsIHcpCiAgICBpbWcgICA9IHRmLmltYWdlLnJhbmRvbV9jcm9wKGltZywgMiAqIFtzX21pbl0gKyBbM10pCgogICAgdF9taW4gPSB0Zi5taW5pbXVtKHNfbWluLCByb3VuZCg5IC8gOCAqIHRhcmdldF9yZXMpKQogICAgdF9tYXggPSB0Zi5taW5pbXVtKHNfbWluLCByb3VuZCgxMiAvIDggKiB0YXJnZXRfcmVzKSkKICAgIHQgICAgID0gdGYucmFuZG9tLnVuaWZvcm0oW10sIHRfbWluLCB0X21heCArIDEsIGR0eXBlPXRmLmludDMyKQogICAgaW1nICAgPSB0Zi5pbWFnZS5yZXNpemVfaW1hZ2VzKGltZywgW3QsIHRdLCBtZXRob2Q9dGYuaW1hZ2UuUmVzaXplTWV0aG9kLkFSRUEsCiAgICAgICAgICAgICAgICBhbGlnbl9jb3JuZXJzPVRydWUpCiAgICBpbWcgICA9IHRmLmNhc3QodGYucmludCh0Zi5jbGlwX2J5X3ZhbHVlKGltZywgMCwgMjU1KSksIHRmLnVpbnQ4KQogICAgaW1nICAgPSB0Zi5pbWFnZS5yYW5kb21fY3JvcChpbWcsIDIgKiBbdGFyZ2V0X3Jlc10gKyBbY2hhbm5lbF9jb3VudF0pCiAgICByZXR1cm4gdGYuaW1hZ2UucmFuZG9tX2ZsaXBfbGVmdF9yaWdodChpbWcp" dataencoding="base64" datamimetype="text/plain">
          <listingline xml:id="lstnumberx1"><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">def</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">preprocess_image</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">target_res</text><text font="typewriter" fontsize="80%">):</text></listingline>
          <listingline xml:id="lstnumberx2"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">h</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">w</text><text class="ltx_lst_space" font="typewriter" fontsize="80%">  </text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">shape</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text font="typewriter" fontsize="80%">)[0],</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">shape</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text font="typewriter" fontsize="80%">)[1]</text></listingline>
          <listingline xml:id="lstnumberx3"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">s_min</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">minimum</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">h</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">w</text><text font="typewriter" fontsize="80%">)</text></listingline>
          <listingline xml:id="lstnumberx4"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text class="ltx_lst_space" font="typewriter" fontsize="80%">   </text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">image</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">random_crop</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">2</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">*</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">[</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">s_min</text><text font="typewriter" fontsize="80%">]</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">+</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">[3])</text></listingline>
          <listingline xml:id="lstnumberx5"/>
          <listingline xml:id="lstnumberx6"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">t_min</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">minimum</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">s_min</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">round</text><text font="typewriter" fontsize="80%">(9</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">/</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">8</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">*</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">target_res</text><text font="typewriter" fontsize="80%">))</text></listingline>
          <listingline xml:id="lstnumberx7"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">t_max</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">minimum</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">s_min</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">round</text><text font="typewriter" fontsize="80%">(12</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">/</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">8</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">*</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">target_res</text><text font="typewriter" fontsize="80%">))</text></listingline>
          <listingline xml:id="lstnumberx8"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">t</text><text class="ltx_lst_space" font="typewriter" fontsize="80%">     </text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">random</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">uniform</text><text font="typewriter" fontsize="80%">([],</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">t_min</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">t_max</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">+</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">1,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">dtype</text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">int32</text><text font="typewriter" fontsize="80%">)</text></listingline>
          <listingline xml:id="lstnumberx9"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text class="ltx_lst_space" font="typewriter" fontsize="80%">   </text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">image</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">resize_images</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">[</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">t</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">t</text><text font="typewriter" fontsize="80%">],</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">method</text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">image</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">ResizeMethod</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">AREA</text><text font="typewriter" fontsize="80%">,</text></listingline>
          <listingline xml:id="lstnumberx10"><text class="ltx_lst_space" font="typewriter" fontsize="80%">                </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">align_corners</text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">True</text><text font="typewriter" fontsize="80%">)</text></listingline>
          <listingline xml:id="lstnumberx11"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text class="ltx_lst_space" font="typewriter" fontsize="80%">   </text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">cast</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">rint</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">clip_by_value</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">0,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">255)),</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">uint8</text><text font="typewriter" fontsize="80%">)</text></listingline>
          <listingline xml:id="lstnumberx12"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text class="ltx_lst_space" font="typewriter" fontsize="80%">   </text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">image</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">random_crop</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">2</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">*</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">[</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">target_res</text><text font="typewriter" fontsize="80%">]</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">+</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">[</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">channel_count</text><text font="typewriter" fontsize="80%">])</text></listingline>
          <listingline xml:id="lstnumberx13"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">return</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">image</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">random_flip_left_right</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text font="typewriter" fontsize="80%">)</text></listingline>
        </listing>
        <toccaption><tag close=" ">1</tag>TensorFlow <cite class="ltx_citemacro_citep">(<bibref bibrefs="abadi2016tensorflow" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite> image preprocessing code for training dVAE. We use <text font="typewriter">target_res = 256</text> and <text font="typewriter">channel_count = 3</text>.</toccaption>
        <caption><tag close=": ">Listing 1</tag>TensorFlow <cite class="ltx_citemacro_citep">(<bibref bibrefs="abadi2016tensorflow" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite> image preprocessing code for training dVAE. We use <text font="typewriter">target_res = 256</text> and <text font="typewriter">channel_count = 3</text>.</caption>
      </float>
      <para xml:id="A1.SS2.p1">
        <p>The dVAE is trained on the same dataset as the transformer, using the data augmentation code given in Listing <ref labelref="LABEL:lst:dvae_preproc"/>. Several quantities are decayed during training, all of which use a cosine schedule:</p>
        <enumerate xml:id="A1.I1">
          <item xml:id="A1.I1.i1">
            <tags>
              <tag>1.</tag>
              <tag role="autoref">item 1</tag>
              <tag role="refnum">1</tag>
              <tag role="typerefnum">item 1</tag>
            </tags>
            <para xml:id="A1.I1.i1.p1">
              <p>The KL weight <Math mode="inline" tex="\beta" text="beta" xml:id="A1.I1.i1.p1.m1">
                  <XMath>
                    <XMTok font="italic" name="beta" role="UNKNOWN">β</XMTok>
                  </XMath>
                </Math> is increased from <Math mode="inline" tex="0" text="0" xml:id="A1.I1.i1.p1.m2">
                  <XMath>
                    <XMTok meaning="0" role="NUMBER">0</XMTok>
                  </XMath>
                </Math> to <Math mode="inline" tex="6.6" text="6.6" xml:id="A1.I1.i1.p1.m3">
                  <XMath>
                    <XMTok meaning="6.6" role="NUMBER">6.6</XMTok>
                  </XMath>
                </Math> over the first <Math mode="inline" tex="5000" text="5000" xml:id="A1.I1.i1.p1.m4">
                  <XMath>
                    <XMTok meaning="5000" role="NUMBER">5000</XMTok>
                  </XMath>
                </Math> updates. <cite class="ltx_citemacro_citet"><bibref bibrefs="bowman2015generating" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
                    <bibrefphrase>(</bibrefphrase>
                    <bibrefphrase>)</bibrefphrase>
                  </bibref></cite> use a similar schedule based on the sigmoid function.</p>
            </para>
          </item>
          <item xml:id="A1.I1.i2">
            <tags>
              <tag>2.</tag>
              <tag role="autoref">item 2</tag>
              <tag role="refnum">2</tag>
              <tag role="typerefnum">item 2</tag>
            </tags>
            <para xml:id="A1.I1.i2.p1">
              <p>The relaxation temperature <Math mode="inline" tex="\tau" text="tau" xml:id="A1.I1.i2.p1.m1">
                  <XMath>
                    <XMTok font="italic" name="tau" role="UNKNOWN">τ</XMTok>
                  </XMath>
                </Math> is annealed from <Math mode="inline" tex="1" text="1" xml:id="A1.I1.i2.p1.m2">
                  <XMath>
                    <XMTok meaning="1" role="NUMBER">1</XMTok>
                  </XMath>
                </Math> to <Math mode="inline" tex="1/16" text="1 / 16" xml:id="A1.I1.i2.p1.m3">
                  <XMath>
                    <XMApp>
                      <XMTok meaning="divide" role="MULOP">/</XMTok>
                      <XMTok meaning="1" role="NUMBER">1</XMTok>
                      <XMTok meaning="16" role="NUMBER">16</XMTok>
                    </XMApp>
                  </XMath>
                </Math> over the first <Math mode="inline" tex="150000" text="150000" xml:id="A1.I1.i2.p1.m4">
                  <XMath>
                    <XMTok meaning="150000" role="NUMBER">150000</XMTok>
                  </XMath>
                </Math> updates. Using a linear annealing schedule for this typically led to divergence.</p>
            </para>
          </item>
          <item xml:id="A1.I1.i3">
            <tags>
              <tag>3.</tag>
              <tag role="autoref">item 3</tag>
              <tag role="refnum">3</tag>
              <tag role="typerefnum">item 3</tag>
            </tags>
            <para xml:id="A1.I1.i3.p1">
              <p>The step size is annealed from <Math mode="inline" tex="1\cdot 10^{-4}" text="1 cdot 10 ^ (- 4)" xml:id="A1.I1.i3.p1.m1">
                  <XMath>
                    <XMApp>
                      <XMTok name="cdot" role="MULOP">⋅</XMTok>
                      <XMTok meaning="1" role="NUMBER">1</XMTok>
                      <XMApp>
                        <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                        <XMTok meaning="10" role="NUMBER">10</XMTok>
                        <XMApp>
                          <XMTok fontsize="70%" meaning="minus" role="ADDOP">-</XMTok>
                          <XMTok fontsize="70%" meaning="4" role="NUMBER">4</XMTok>
                        </XMApp>
                      </XMApp>
                    </XMApp>
                  </XMath>
                </Math> to <Math mode="inline" tex="1.25\cdot 10^{-6}" text="1.25 cdot 10 ^ (- 6)" xml:id="A1.I1.i3.p1.m2">
                  <XMath>
                    <XMApp>
                      <XMTok name="cdot" role="MULOP">⋅</XMTok>
                      <XMTok meaning="1.25" role="NUMBER">1.25</XMTok>
                      <XMApp>
                        <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                        <XMTok meaning="10" role="NUMBER">10</XMTok>
                        <XMApp>
                          <XMTok fontsize="70%" meaning="minus" role="ADDOP">-</XMTok>
                          <XMTok fontsize="70%" meaning="6" role="NUMBER">6</XMTok>
                        </XMApp>
                      </XMApp>
                    </XMApp>
                  </XMath>
                </Math> over <Math mode="inline" tex="1200000" text="1200000" xml:id="A1.I1.i3.p1.m3">
                  <XMath>
                    <XMTok meaning="1200000" role="NUMBER">1200000</XMTok>
                  </XMath>
                </Math> updates.</p>
            </para>
          </item>
        </enumerate>
        <p>The decay schedules for the relaxation temperature and the step size are especially important for stability and successful optimization.</p>
      </para>
      <para xml:id="A1.SS2.p2">
        <p>We update the parameters using AdamW <cite class="ltx_citemacro_citep">(<bibref bibrefs="loshchilov2017decoupled" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite> with <Math mode="inline" tex="\beta_{1}=0.9" text="beta _ 1 = 0.9" xml:id="A1.SS2.p2.m1">
            <XMath>
              <XMApp>
                <XMTok meaning="equals" role="RELOP">=</XMTok>
                <XMApp>
                  <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                  <XMTok font="italic" name="beta" role="UNKNOWN">β</XMTok>
                  <XMTok fontsize="70%" meaning="1" role="NUMBER">1</XMTok>
                </XMApp>
                <XMTok meaning="0.9" role="NUMBER">0.9</XMTok>
              </XMApp>
            </XMath>
          </Math>, <Math mode="inline" tex="\beta_{2}=0.999" text="beta _ 2 = 0.999" xml:id="A1.SS2.p2.m2">
            <XMath>
              <XMApp>
                <XMTok meaning="equals" role="RELOP">=</XMTok>
                <XMApp>
                  <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                  <XMTok font="italic" name="beta" role="UNKNOWN">β</XMTok>
                  <XMTok fontsize="70%" meaning="2" role="NUMBER">2</XMTok>
                </XMApp>
                <XMTok meaning="0.999" role="NUMBER">0.999</XMTok>
              </XMApp>
            </XMath>
          </Math>, <Math mode="inline" tex="\epsilon=10^{-8}" text="epsilon = 10 ^ (- 8)" xml:id="A1.SS2.p2.m3">
            <XMath>
              <XMApp>
                <XMTok meaning="equals" role="RELOP">=</XMTok>
                <XMTok font="italic" name="epsilon" role="UNKNOWN">ϵ</XMTok>
                <XMApp>
                  <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                  <XMTok meaning="10" role="NUMBER">10</XMTok>
                  <XMApp>
                    <XMTok fontsize="70%" meaning="minus" role="ADDOP">-</XMTok>
                    <XMTok fontsize="70%" meaning="8" role="NUMBER">8</XMTok>
                  </XMApp>
                </XMApp>
              </XMApp>
            </XMath>
          </Math>, and weight decay multiplier <Math mode="inline" tex="10^{-4}" text="10 ^ (- 4)" xml:id="A1.SS2.p2.m4">
            <XMath>
              <XMApp>
                <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                <XMTok meaning="10" role="NUMBER">10</XMTok>
                <XMApp>
                  <XMTok fontsize="70%" meaning="minus" role="ADDOP">-</XMTok>
                  <XMTok fontsize="70%" meaning="4" role="NUMBER">4</XMTok>
                </XMApp>
              </XMApp>
            </XMath>
          </Math>. We use exponentially weighted iterate averaging for the parameters with decay coefficient <Math mode="inline" tex="0.999" text="0.999" xml:id="A1.SS2.p2.m5">
            <XMath>
              <XMTok meaning="0.999" role="NUMBER">0.999</XMTok>
            </XMath>
          </Math>. The reconstruction term in the ELB is a joint distribution over the <Math mode="inline" tex="256\times 256\times 3" text="256 * 256 * 3" xml:id="A1.SS2.p2.m6">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">×</XMTok>
                <XMTok meaning="256" role="NUMBER">256</XMTok>
                <XMTok meaning="256" role="NUMBER">256</XMTok>
                <XMTok meaning="3" role="NUMBER">3</XMTok>
              </XMApp>
            </XMath>
          </Math> values for the image pixels, and the KL term is a joint distribution over the <Math mode="inline" tex="32\times 32" text="32 * 32" xml:id="A1.SS2.p2.m7">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">×</XMTok>
                <XMTok meaning="32" role="NUMBER">32</XMTok>
                <XMTok meaning="32" role="NUMBER">32</XMTok>
              </XMApp>
            </XMath>
          </Math> positions in the spatial grid output by the encoder. We divide the overall loss by <Math mode="inline" tex="256\times 256\times 3" text="256 * 256 * 3" xml:id="A1.SS2.p2.m8">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">×</XMTok>
                <XMTok meaning="256" role="NUMBER">256</XMTok>
                <XMTok meaning="256" role="NUMBER">256</XMTok>
                <XMTok meaning="3" role="NUMBER">3</XMTok>
              </XMApp>
            </XMath>
          </Math>, so that the weight of the KL term becomes <Math mode="inline" tex="\beta/192" text="beta / 192" xml:id="A1.SS2.p2.m9">
            <XMath>
              <XMApp>
                <XMTok meaning="divide" role="MULOP">/</XMTok>
                <XMTok font="italic" name="beta" role="UNKNOWN">β</XMTok>
                <XMTok meaning="192" role="NUMBER">192</XMTok>
              </XMApp>
            </XMath>
          </Math>, where <Math mode="inline" tex="\beta" text="beta" xml:id="A1.SS2.p2.m10">
            <XMath>
              <XMTok font="italic" name="beta" role="UNKNOWN">β</XMTok>
            </XMath>
          </Math> is the KL weight. The model is trained in mixed-precision using standard (i.e., global) loss scaling on <Math mode="inline" tex="64" text="64" xml:id="A1.SS2.p2.m11">
            <XMath>
              <XMTok meaning="64" role="NUMBER">64</XMTok>
            </XMath>
          </Math> 16 GB NVIDIA V100 GPUs, with a per-GPU batch size of <Math mode="inline" tex="8" text="8" xml:id="A1.SS2.p2.m12">
            <XMath>
              <XMTok meaning="8" role="NUMBER">8</XMTok>
            </XMath>
          </Math>, resulting in a total batch size of 512. It is trained for a total of <Math mode="inline" tex="3000000" text="3000000" xml:id="A1.SS2.p2.m13">
            <XMath>
              <XMTok meaning="3000000" role="NUMBER">3000000</XMTok>
            </XMath>
          </Math> updates.</p>
      </para>
    </subsection>
    <subsection inlist="toc" labels="LABEL:sec:dvae_logit_laplace" xml:id="A1.SS3">
      <tags>
        <tag>A.3</tag>
        <tag role="autoref">subsection A.3</tag>
        <tag role="refnum">A.3</tag>
        <tag role="typerefnum">§A.3</tag>
      </tags>
      <title><tag close=" ">A.3</tag>The Logit-Laplace Distribution</title>
      <para xml:id="A1.SS3.p1">
        <p>The <Math mode="inline" tex="\ell_{1}" text="ell _ 1" xml:id="A1.SS3.p1.m1">
            <XMath>
              <XMApp>
                <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                <XMTok name="ell" role="UNKNOWN">ℓ</XMTok>
                <XMTok fontsize="70%" meaning="1" role="NUMBER">1</XMTok>
              </XMApp>
            </XMath>
          </Math> and <Math mode="inline" tex="\ell_{2}" text="ell _ 2" xml:id="A1.SS3.p1.m2">
            <XMath>
              <XMApp>
                <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                <XMTok name="ell" role="UNKNOWN">ℓ</XMTok>
                <XMTok fontsize="70%" meaning="2" role="NUMBER">2</XMTok>
              </XMApp>
            </XMath>
          </Math> reconstruction objectives are commonly used when training VAEs. These objectives correspond to using Laplace and Gaussian distributions for <Math mode="inline" tex="\ln p_{\theta}(x\,|\,y,z)" text="natural-logarithm@(p _ theta) * conditional@(x, list@(y, z))" xml:id="A1.SS3.p1.m3">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">⁢</XMTok>
                <XMApp>
                  <XMTok meaning="natural-logarithm" role="OPFUNCTION">ln</XMTok>
                  <XMApp>
                    <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                    <XMTok font="italic" role="UNKNOWN">p</XMTok>
                    <XMTok font="italic" fontsize="70%" name="theta" role="UNKNOWN">θ</XMTok>
                  </XMApp>
                </XMApp>
                <XMDual>
                  <XMRef idref="A1.SS3.p1.m3.3"/>
                  <XMWrap>
                    <XMTok role="OPEN" stretchy="false">(</XMTok>
                    <XMApp xml:id="A1.SS3.p1.m3.3">
                      <XMTok meaning="conditional" role="MODIFIEROP" rpadding="1.7pt" stretchy="false">|</XMTok>
                      <XMTok font="italic" role="UNKNOWN" rpadding="1.7pt">x</XMTok>
                      <XMDual>
                        <XMApp>
                          <XMTok meaning="list"/>
                          <XMRef idref="A1.SS3.p1.m3.1"/>
                          <XMRef idref="A1.SS3.p1.m3.2"/>
                        </XMApp>
                        <XMWrap>
                          <XMTok font="italic" role="UNKNOWN" xml:id="A1.SS3.p1.m3.1">y</XMTok>
                          <XMTok role="PUNCT">,</XMTok>
                          <XMTok font="italic" role="UNKNOWN" xml:id="A1.SS3.p1.m3.2">z</XMTok>
                        </XMWrap>
                      </XMDual>
                    </XMApp>
                    <XMTok role="CLOSE" stretchy="false">)</XMTok>
                  </XMWrap>
                </XMDual>
              </XMApp>
            </XMath>
          </Math> in Equation <ref labelref="LABEL:eq:elb"/>, respectively. There is a strange mismatch in this modeling choice: pixel values lie within a bounded interval, but both of these distributions are supported by the entire real line. Hence, some amount of likelihood will be placed outside the admissible range of pixel values.</p>
      </para>
      <para xml:id="A1.SS3.p2">
        <p>We present a variant of the Laplace distribution that is also supported by a bounded interval. This resolves the discrepancy between the range of the pixel values being modeled and the support of the distribution used to model them. We consider the pdf of the random variable obtained by applying the sigmoid function to a Laplace-distributed random variable. This pdf is defined on <Math mode="inline" tex="(0,1)" text="open-interval@(0, 1)" xml:id="A1.SS3.p2.m1">
            <XMath>
              <XMDual>
                <XMApp>
                  <XMTok meaning="open-interval"/>
                  <XMRef idref="A1.SS3.p2.m1.1"/>
                  <XMRef idref="A1.SS3.p2.m1.2"/>
                </XMApp>
                <XMWrap>
                  <XMTok role="OPEN" stretchy="false">(</XMTok>
                  <XMTok meaning="0" role="NUMBER" xml:id="A1.SS3.p2.m1.1">0</XMTok>
                  <XMTok role="PUNCT">,</XMTok>
                  <XMTok meaning="1" role="NUMBER" xml:id="A1.SS3.p2.m1.2">1</XMTok>
                  <XMTok role="CLOSE" stretchy="false">)</XMTok>
                </XMWrap>
              </XMDual>
            </XMath>
          </Math> and is given by</p>
        <equation labels="LABEL:eq:logit_laplace_pdf" xml:id="A1.E2">
          <tags>
            <tag>(2)</tag>
            <tag role="autoref">Equation 2</tag>
            <tag role="refnum">2</tag>
          </tags>
          <Math mode="display" tex="f(x\,|\,\mu,b)=\frac{1}{2bx(1-x)}\exp\left(-\frac{|\operatorname{logit}(x)-\mu%&#10;|}{b}\right);" text="f * conditional@(x, list@(mu, b)) = (1 / (2 * b * x * (1 - x))) * exponential@(- absolute-value@(logit@(x) - mu) / b)" xml:id="A1.E2.m1">
            <XMath>
              <XMDual>
                <XMRef idref="A1.E2.m1.8"/>
                <XMWrap>
                  <XMApp xml:id="A1.E2.m1.8">
                    <XMTok meaning="equals" role="RELOP">=</XMTok>
                    <XMApp>
                      <XMTok meaning="times" role="MULOP">⁢</XMTok>
                      <XMTok font="italic" role="UNKNOWN">f</XMTok>
                      <XMDual>
                        <XMRef idref="A1.E2.m1.8.1"/>
                        <XMWrap>
                          <XMTok role="OPEN" stretchy="false">(</XMTok>
                          <XMApp xml:id="A1.E2.m1.8.1">
                            <XMTok meaning="conditional" role="MODIFIEROP" rpadding="1.7pt" stretchy="false">|</XMTok>
                            <XMTok font="italic" role="UNKNOWN" rpadding="1.7pt">x</XMTok>
                            <XMDual>
                              <XMApp>
                                <XMTok meaning="list"/>
                                <XMRef idref="A1.E2.m1.5"/>
                                <XMRef idref="A1.E2.m1.6"/>
                              </XMApp>
                              <XMWrap>
                                <XMTok font="italic" name="mu" role="UNKNOWN" xml:id="A1.E2.m1.5">μ</XMTok>
                                <XMTok role="PUNCT">,</XMTok>
                                <XMTok font="italic" role="UNKNOWN" xml:id="A1.E2.m1.6">b</XMTok>
                              </XMWrap>
                            </XMDual>
                          </XMApp>
                          <XMTok role="CLOSE" stretchy="false">)</XMTok>
                        </XMWrap>
                      </XMDual>
                    </XMApp>
                    <XMApp>
                      <XMTok meaning="times" role="MULOP">⁢</XMTok>
                      <XMApp>
                        <XMTok mathstyle="display" meaning="divide" role="FRACOP"/>
                        <XMTok meaning="1" role="NUMBER">1</XMTok>
                        <XMApp>
                          <XMTok meaning="times" role="MULOP">⁢</XMTok>
                          <XMTok meaning="2" role="NUMBER">2</XMTok>
                          <XMTok font="italic" role="UNKNOWN">b</XMTok>
                          <XMTok font="italic" role="UNKNOWN">x</XMTok>
                          <XMDual>
                            <XMRef idref="A1.E2.m1.1"/>
                            <XMWrap>
                              <XMTok role="OPEN" stretchy="false">(</XMTok>
                              <XMApp xml:id="A1.E2.m1.1">
                                <XMTok meaning="minus" role="ADDOP">-</XMTok>
                                <XMTok meaning="1" role="NUMBER">1</XMTok>
                                <XMTok font="italic" role="UNKNOWN">x</XMTok>
                              </XMApp>
                              <XMTok role="CLOSE" stretchy="false">)</XMTok>
                            </XMWrap>
                          </XMDual>
                        </XMApp>
                      </XMApp>
                      <XMDual>
                        <XMApp>
                          <XMRef idref="A1.E2.m1.7"/>
                          <XMRef idref="A1.E2.m1.8.2"/>
                        </XMApp>
                        <XMApp>
                          <XMTok meaning="exponential" role="OPFUNCTION" xml:id="A1.E2.m1.7">exp</XMTok>
                          <XMWrap>
                            <XMTok role="OPEN" stretchy="true">(</XMTok>
                            <XMApp xml:id="A1.E2.m1.8.2">
                              <XMTok meaning="minus" role="ADDOP">-</XMTok>
                              <XMApp>
                                <XMTok mathstyle="display" meaning="divide" role="FRACOP"/>
                                <XMDual>
                                  <XMApp>
                                    <XMTok meaning="absolute-value"/>
                                    <XMRef idref="A1.E2.m1.4"/>
                                  </XMApp>
                                  <XMWrap>
                                    <XMTok role="OPEN" stretchy="false">|</XMTok>
                                    <XMApp xml:id="A1.E2.m1.4">
                                      <XMTok meaning="minus" role="ADDOP">-</XMTok>
                                      <XMDual>
                                        <XMApp>
                                          <XMRef idref="A1.E2.m1.2"/>
                                          <XMRef idref="A1.E2.m1.3"/>
                                        </XMApp>
                                        <XMApp>
                                          <XMTok role="OPFUNCTION" scriptpos="post" xml:id="A1.E2.m1.2">logit</XMTok>
                                          <XMWrap>
                                            <XMTok role="OPEN" stretchy="false">(</XMTok>
                                            <XMTok font="italic" role="UNKNOWN" xml:id="A1.E2.m1.3">x</XMTok>
                                            <XMTok role="CLOSE" stretchy="false">)</XMTok>
                                          </XMWrap>
                                        </XMApp>
                                      </XMDual>
                                      <XMTok font="italic" name="mu" role="UNKNOWN">μ</XMTok>
                                    </XMApp>
                                    <XMTok role="CLOSE" stretchy="false">|</XMTok>
                                  </XMWrap>
                                </XMDual>
                                <XMTok font="italic" role="UNKNOWN">b</XMTok>
                              </XMApp>
                            </XMApp>
                            <XMTok role="CLOSE" stretchy="true">)</XMTok>
                          </XMWrap>
                        </XMApp>
                      </XMDual>
                    </XMApp>
                  </XMApp>
                  <XMTok role="PUNCT">;</XMTok>
                </XMWrap>
              </XMDual>
            </XMath>
          </Math>
        </equation>
        <p>we call it the <emph font="italic">logit-Laplace distribution.</emph> We use the logarithm of the RHS of Equation <ref labelref="LABEL:eq:logit_laplace_pdf"/> as the reconstruction term for the training objective of the dVAE.</p>
      </para>
      <para xml:id="A1.SS3.p3">
        <p>The decoder of the dVAE produces six feature maps representing the sufficient statistics of the logit-Laplace distribution for the RGB channels of the image being reconstructed. The first three feature maps represent the <Math mode="inline" tex="\mu" text="mu" xml:id="A1.SS3.p3.m1">
            <XMath>
              <XMTok font="italic" name="mu" role="UNKNOWN">μ</XMTok>
            </XMath>
          </Math> parameter for the RGB channels, and the last three represent <Math mode="inline" tex="\ln b" text="natural-logarithm@(b)" xml:id="A1.SS3.p3.m2">
            <XMath>
              <XMApp>
                <XMTok meaning="natural-logarithm" role="OPFUNCTION">ln</XMTok>
                <XMTok font="italic" role="UNKNOWN">b</XMTok>
              </XMApp>
            </XMath>
          </Math>. Before feeding an image into the dVAE encoder, we transform its values using <Math mode="inline" tex="\varphi:[0,255]\to(\epsilon,1-\epsilon)" text="varphi colon closed-interval@(0, 255) to open-interval@(epsilon, 1 - epsilon)" xml:id="A1.SS3.p3.m3">
            <XMath>
              <XMApp>
                <XMTok name="colon" role="METARELOP">:</XMTok>
                <XMTok font="italic" name="varphi" role="UNKNOWN">φ</XMTok>
                <XMApp>
                  <XMTok name="to" role="ARROW">→</XMTok>
                  <XMDual>
                    <XMApp>
                      <XMTok meaning="closed-interval"/>
                      <XMRef idref="A1.SS3.p3.m3.1"/>
                      <XMRef idref="A1.SS3.p3.m3.2"/>
                    </XMApp>
                    <XMWrap>
                      <XMTok role="OPEN" stretchy="false">[</XMTok>
                      <XMTok meaning="0" role="NUMBER" xml:id="A1.SS3.p3.m3.1">0</XMTok>
                      <XMTok role="PUNCT">,</XMTok>
                      <XMTok meaning="255" role="NUMBER" xml:id="A1.SS3.p3.m3.2">255</XMTok>
                      <XMTok role="CLOSE" stretchy="false">]</XMTok>
                    </XMWrap>
                  </XMDual>
                  <XMDual>
                    <XMApp>
                      <XMTok meaning="open-interval"/>
                      <XMRef idref="A1.SS3.p3.m3.3"/>
                      <XMRef idref="A1.SS3.p3.m3.4"/>
                    </XMApp>
                    <XMWrap>
                      <XMTok role="OPEN" stretchy="false">(</XMTok>
                      <XMTok font="italic" name="epsilon" role="UNKNOWN" xml:id="A1.SS3.p3.m3.3">ϵ</XMTok>
                      <XMTok role="PUNCT">,</XMTok>
                      <XMApp xml:id="A1.SS3.p3.m3.4">
                        <XMTok meaning="minus" role="ADDOP">-</XMTok>
                        <XMTok meaning="1" role="NUMBER">1</XMTok>
                        <XMTok font="italic" name="epsilon" role="UNKNOWN">ϵ</XMTok>
                      </XMApp>
                      <XMTok role="CLOSE" stretchy="false">)</XMTok>
                    </XMWrap>
                  </XMDual>
                </XMApp>
              </XMApp>
            </XMath>
          </Math>, which is given by</p>
        <equation xml:id="A1.E3">
          <tags>
            <tag>(3)</tag>
            <tag role="autoref">Equation 3</tag>
            <tag role="refnum">3</tag>
          </tags>
          <Math mode="display" tex="\varphi:x\mapsto\frac{1-2\epsilon}{255}x+\epsilon." text="varphi colon x maps-to ((1 - 2 * epsilon) / 255) * x + epsilon" xml:id="A1.E3.m1">
            <XMath>
              <XMDual>
                <XMRef idref="A1.E3.m1.1"/>
                <XMWrap>
                  <XMApp xml:id="A1.E3.m1.1">
                    <XMTok name="colon" role="METARELOP">:</XMTok>
                    <XMTok font="italic" name="varphi" role="UNKNOWN">φ</XMTok>
                    <XMApp>
                      <XMTok meaning="maps-to" name="mapsto" role="ARROW">↦</XMTok>
                      <XMTok font="italic" role="UNKNOWN">x</XMTok>
                      <XMApp>
                        <XMTok meaning="plus" role="ADDOP">+</XMTok>
                        <XMApp>
                          <XMTok meaning="times" role="MULOP">⁢</XMTok>
                          <XMApp>
                            <XMTok mathstyle="display" meaning="divide" role="FRACOP"/>
                            <XMApp>
                              <XMTok meaning="minus" role="ADDOP">-</XMTok>
                              <XMTok meaning="1" role="NUMBER">1</XMTok>
                              <XMApp>
                                <XMTok meaning="times" role="MULOP">⁢</XMTok>
                                <XMTok meaning="2" role="NUMBER">2</XMTok>
                                <XMTok font="italic" name="epsilon" role="UNKNOWN">ϵ</XMTok>
                              </XMApp>
                            </XMApp>
                            <XMTok meaning="255" role="NUMBER">255</XMTok>
                          </XMApp>
                          <XMTok font="italic" role="UNKNOWN">x</XMTok>
                        </XMApp>
                        <XMTok font="italic" name="epsilon" role="UNKNOWN">ϵ</XMTok>
                      </XMApp>
                    </XMApp>
                  </XMApp>
                  <XMTok role="PERIOD">.</XMTok>
                </XMWrap>
              </XMDual>
            </XMath>
          </Math>
        </equation>
        <p>This restricts the range of the pixel values to be modeled by the dVAE decoder to <Math mode="inline" tex="(\epsilon,1-\epsilon)" text="open-interval@(epsilon, 1 - epsilon)" xml:id="A1.SS3.p3.m4">
            <XMath>
              <XMDual>
                <XMApp>
                  <XMTok meaning="open-interval"/>
                  <XMRef idref="A1.SS3.p3.m4.1"/>
                  <XMRef idref="A1.SS3.p3.m4.2"/>
                </XMApp>
                <XMWrap>
                  <XMTok role="OPEN" stretchy="false">(</XMTok>
                  <XMTok font="italic" name="epsilon" role="UNKNOWN" xml:id="A1.SS3.p3.m4.1">ϵ</XMTok>
                  <XMTok role="PUNCT">,</XMTok>
                  <XMApp xml:id="A1.SS3.p3.m4.2">
                    <XMTok meaning="minus" role="ADDOP">-</XMTok>
                    <XMTok meaning="1" role="NUMBER">1</XMTok>
                    <XMTok font="italic" name="epsilon" role="UNKNOWN">ϵ</XMTok>
                  </XMApp>
                  <XMTok role="CLOSE" stretchy="false">)</XMTok>
                </XMWrap>
              </XMDual>
            </XMath>
          </Math>, which avoids numerical problems arising from the <Math mode="inline" tex="x(1-x)" text="x * (1 - x)" xml:id="A1.SS3.p3.m5">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">⁢</XMTok>
                <XMTok font="italic" role="UNKNOWN">x</XMTok>
                <XMDual>
                  <XMRef idref="A1.SS3.p3.m5.1"/>
                  <XMWrap>
                    <XMTok role="OPEN" stretchy="false">(</XMTok>
                    <XMApp xml:id="A1.SS3.p3.m5.1">
                      <XMTok meaning="minus" role="ADDOP">-</XMTok>
                      <XMTok meaning="1" role="NUMBER">1</XMTok>
                      <XMTok font="italic" role="UNKNOWN">x</XMTok>
                    </XMApp>
                    <XMTok role="CLOSE" stretchy="false">)</XMTok>
                  </XMWrap>
                </XMDual>
              </XMApp>
            </XMath>
          </Math> in Equation <ref labelref="LABEL:eq:logit_laplace_pdf"/>. We use <Math mode="inline" tex="\epsilon=0.1" text="epsilon = 0.1" xml:id="A1.SS3.p3.m6">
            <XMath>
              <XMApp>
                <XMTok meaning="equals" role="RELOP">=</XMTok>
                <XMTok font="italic" name="epsilon" role="UNKNOWN">ϵ</XMTok>
                <XMTok meaning="0.1" role="NUMBER">0.1</XMTok>
              </XMApp>
            </XMath>
          </Math>. To reconstruct an image for manual inspection or computing metrics, we ignore <Math mode="inline" tex="\ln b" text="natural-logarithm@(b)" xml:id="A1.SS3.p3.m7">
            <XMath>
              <XMApp>
                <XMTok meaning="natural-logarithm" role="OPFUNCTION">ln</XMTok>
                <XMTok font="italic" role="UNKNOWN">b</XMTok>
              </XMApp>
            </XMath>
          </Math> and compute <Math mode="inline" tex="\hat{x}=\varphi^{-1}(\operatorname{sigmoid}(\mu))" text="hat@(x) = varphi ^ (- 1) * sigmoid@(mu)" xml:id="A1.SS3.p3.m8">
            <XMath>
              <XMApp>
                <XMTok meaning="equals" role="RELOP">=</XMTok>
                <XMApp>
                  <XMTok name="hat" role="OVERACCENT" stretchy="false">^</XMTok>
                  <XMTok font="italic" role="UNKNOWN">x</XMTok>
                </XMApp>
                <XMApp>
                  <XMTok meaning="times" role="MULOP">⁢</XMTok>
                  <XMApp>
                    <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                    <XMTok font="italic" name="varphi" role="UNKNOWN">φ</XMTok>
                    <XMApp>
                      <XMTok fontsize="70%" meaning="minus" role="ADDOP">-</XMTok>
                      <XMTok fontsize="70%" meaning="1" role="NUMBER">1</XMTok>
                    </XMApp>
                  </XMApp>
                  <XMDual>
                    <XMRef idref="A1.SS3.p3.m8.3"/>
                    <XMWrap>
                      <XMTok role="OPEN" stretchy="false">(</XMTok>
                      <XMDual xml:id="A1.SS3.p3.m8.3">
                        <XMApp>
                          <XMRef idref="A1.SS3.p3.m8.1"/>
                          <XMRef idref="A1.SS3.p3.m8.2"/>
                        </XMApp>
                        <XMApp>
                          <XMTok role="OPFUNCTION" scriptpos="post" xml:id="A1.SS3.p3.m8.1">sigmoid</XMTok>
                          <XMWrap>
                            <XMTok role="OPEN" stretchy="false">(</XMTok>
                            <XMTok font="italic" name="mu" role="UNKNOWN" xml:id="A1.SS3.p3.m8.2">μ</XMTok>
                            <XMTok role="CLOSE" stretchy="false">)</XMTok>
                          </XMWrap>
                        </XMApp>
                      </XMDual>
                      <XMTok role="CLOSE" stretchy="false">)</XMTok>
                    </XMWrap>
                  </XMDual>
                </XMApp>
              </XMApp>
            </XMath>
          </Math>, where <Math mode="inline" tex="\mu" text="mu" xml:id="A1.SS3.p3.m9">
            <XMath>
              <XMTok font="italic" name="mu" role="UNKNOWN">μ</XMTok>
            </XMath>
          </Math> is given by the first three feature maps output by the dVAE decoder.<note mark="11" role="footnote" xml:id="footnote11"><tags>
              <tag>11</tag>
              <tag role="autoref">footnote 11</tag>
              <tag role="refnum">11</tag>
              <tag role="typerefnum">footnote 11</tag>
            </tags>See <text font="typewriter">notebooks/usage.ipynb</text> of the code release for an example.</note></p>
      </para>
    </subsection>
  </appendix>
  <appendix inlist="toc" xml:id="A2">
    <tags>
      <tag>Appendix B</tag>
      <tag role="autoref">Appendix B</tag>
      <tag role="refnum">B</tag>
      <tag role="typerefnum">Appendix B</tag>
    </tags>
    <title><tag close=" ">Appendix B</tag>Details for Transformer</title>
    <toctitle><tag close=" ">B</tag>Details for Transformer</toctitle>
    <subsection inlist="toc" labels="LABEL:sec:xf_arch" xml:id="A2.SS1">
      <tags>
        <tag>B.1</tag>
        <tag role="autoref">subsection B.1</tag>
        <tag role="refnum">B.1</tag>
        <tag role="typerefnum">§B.1</tag>
      </tags>
      <title><tag close=" ">B.1</tag>Architecture</title>
      <figure inlist="lof" labels="LABEL:fig:xf_embds" placement="t" xml:id="A2.F10">
        <tags>
          <tag>Figure 10</tag>
          <tag role="autoref">Figure 10</tag>
          <tag role="refnum">10</tag>
          <tag role="typerefnum">Figure 10</tag>
        </tags>
        <graphics candidates="xf_embds.png" class="ltx_centering" graphic="xf_embds.png" options="width=433.62pt,keepaspectratio=true" xml:id="A2.F10.g1"/>
<!--  %****␣main.tex␣Line␣475␣**** -->        <toccaption class="ltx_centering"><tag close=" ">10</tag>Illustration of the embedding scheme for a hypothetical version of our transformer with a maximum text length of 6 tokens. Each box denotes a vector of size <Math mode="inline" tex="d_{\mathrm{model}}=3968" text="d _ model = 3968" xml:id="A2.F10.m1">
            <XMath>
              <XMApp>
                <XMTok meaning="equals" role="RELOP">=</XMTok>
                <XMApp>
                  <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                  <XMTok font="italic" role="UNKNOWN">d</XMTok>
                  <XMTok fontsize="70%" role="UNKNOWN">model</XMTok>
                </XMApp>
                <XMTok meaning="3968" role="NUMBER">3968</XMTok>
              </XMApp>
            </XMath>
          </Math>. In this illustration, the caption has a length of 4 tokens, so 2 padding tokens are used (as described in Section <ref labelref="LABEL:sec:learning_prior"/>). Each image vocabulary embedding is summed with a row and column embedding.</toccaption>
        <caption class="ltx_centering"><tag close=": ">Figure 10</tag>Illustration of the embedding scheme for a hypothetical version of our transformer with a maximum text length of 6 tokens. Each box denotes a vector of size <Math mode="inline" tex="d_{\mathrm{model}}=3968" text="d _ model = 3968" xml:id="A2.F10.m2">
            <XMath>
              <XMApp>
                <XMTok meaning="equals" role="RELOP">=</XMTok>
                <XMApp>
                  <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                  <XMTok font="italic" role="UNKNOWN">d</XMTok>
                  <XMTok fontsize="70%" role="UNKNOWN">model</XMTok>
                </XMApp>
                <XMTok meaning="3968" role="NUMBER">3968</XMTok>
              </XMApp>
            </XMath>
          </Math>. In this illustration, the caption has a length of 4 tokens, so 2 padding tokens are used (as described in Section <ref labelref="LABEL:sec:learning_prior"/>). Each image vocabulary embedding is summed with a row and column embedding.</caption>
      </figure>
      <figure inlist="lof" labels="LABEL:fig:xf_attn" placement="t" xml:id="A2.F11">
        <tags>
          <tag>Figure 11</tag>
          <tag role="autoref">Figure 11</tag>
          <tag role="refnum">11</tag>
          <tag role="typerefnum">Figure 11</tag>
        </tags>
        <figure align="center" class="ltx_figure_panel" xml:id="A2.F11.sf1">
          <tags>
            <tag>(a)</tag>
            <tag role="autoref">11a</tag>
            <tag role="refnum">11a</tag>
          </tags>
          <graphics candidates="attn_row.png" graphic="attn_row.png" options="width=104.07117pt,keepaspectratio=true" xml:id="A2.F11.sf1.g1"/>
          <toccaption><tag close=" ">a</tag>Row attention mask.</toccaption>
          <caption><tag close=" ">(a)</tag>Row attention mask.</caption>
        </figure>
        <figure align="center" class="ltx_figure_panel" xml:id="A2.F11.sf2">
          <tags>
            <tag>(b)</tag>
            <tag role="autoref">11b</tag>
            <tag role="refnum">11b</tag>
          </tags>
          <graphics candidates="attn_col.png" graphic="attn_col.png" options="width=104.07117pt,keepaspectratio=true" xml:id="A2.F11.sf2.g1"/>
          <toccaption><tag close=" ">b</tag>Column attention mask.</toccaption>
          <caption><tag close=" ">(b)</tag>Column attention mask.</caption>
        </figure>
        <figure align="center" class="ltx_figure_panel" xml:id="A2.F11.sf3">
          <tags>
            <tag>(c)</tag>
            <tag role="autoref">11c</tag>
            <tag role="refnum">11c</tag>
          </tags>
          <graphics candidates="attn_col_t.png" graphic="attn_col_t.png" options="width=104.07117pt,keepaspectratio=true" xml:id="A2.F11.sf3.g1"/>
          <toccaption><tag close=" ">c</tag>Column attention mask with transposed image states.</toccaption>
          <caption><tag close=" ">(c)</tag>Column attention mask with transposed image states.</caption>
        </figure>
        <figure align="center" class="ltx_figure_panel" xml:id="A2.F11.sf4">
          <tags>
            <tag>(d)</tag>
            <tag role="autoref">11d</tag>
            <tag role="refnum">11d</tag>
          </tags>
          <graphics candidates="attn_conv.png" graphic="attn_conv.png" options="width=104.07117pt,keepaspectratio=true" xml:id="A2.F11.sf4.g1"/>
          <toccaption><tag close=" ">d</tag>Convolutional attention mask.</toccaption>
          <caption><tag close=" ">(d)</tag>Convolutional attention mask.</caption>
        </figure>
        <toccaption class="ltx_centering"><tag close=" ">11</tag>Illustration of the three types of attention masks for a hypothetical version of our transformer with a maximum text length of 6 tokens and image length of 16 tokens (i.e., corresponding to a <Math mode="inline" tex="4\times 4" text="4 * 4" xml:id="A2.F11.m1">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">×</XMTok>
                <XMTok meaning="4" role="NUMBER">4</XMTok>
                <XMTok meaning="4" role="NUMBER">4</XMTok>
              </XMApp>
            </XMath>
          </Math> grid). Mask (a) corresponds to row attention in which each image token attends to the previous 5 image tokens in raster order. The extent is chosen to be 5, so that the last token being attended to is the one in the same column of the previous row. To obtain better GPU utilization, we transpose the row and column dimensions of the image states when applying column attention, so that we can use mask (c) instead of mask (b). Mask (d) corresponds to a causal convolutional attention pattern with wraparound behavior (similar to the row attention) and a <Math mode="inline" tex="3\times 3" text="3 * 3" xml:id="A2.F11.m2">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">×</XMTok>
                <XMTok meaning="3" role="NUMBER">3</XMTok>
                <XMTok meaning="3" role="NUMBER">3</XMTok>
              </XMApp>
            </XMath>
          </Math> kernel. Our model uses a mask corresponding to an <Math mode="inline" tex="11\times 11" text="11 * 11" xml:id="A2.F11.m3">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">×</XMTok>
                <XMTok meaning="11" role="NUMBER">11</XMTok>
                <XMTok meaning="11" role="NUMBER">11</XMTok>
              </XMApp>
            </XMath>
          </Math> kernel.</toccaption>
        <caption class="ltx_centering"><tag close=": ">Figure 11</tag>Illustration of the three types of attention masks for a hypothetical version of our transformer with a maximum text length of 6 tokens and image length of 16 tokens (i.e., corresponding to a <Math mode="inline" tex="4\times 4" text="4 * 4" xml:id="A2.F11.m4">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">×</XMTok>
                <XMTok meaning="4" role="NUMBER">4</XMTok>
                <XMTok meaning="4" role="NUMBER">4</XMTok>
              </XMApp>
            </XMath>
          </Math> grid). Mask (a) corresponds to row attention in which each image token attends to the previous 5 image tokens in raster order. The extent is chosen to be 5, so that the last token being attended to is the one in the same column of the previous row. To obtain better GPU utilization, we transpose the row and column dimensions of the image states when applying column attention, so that we can use mask (c) instead of mask (b). Mask (d) corresponds to a causal convolutional attention pattern with wraparound behavior (similar to the row attention) and a <Math mode="inline" tex="3\times 3" text="3 * 3" xml:id="A2.F11.m5">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">×</XMTok>
                <XMTok meaning="3" role="NUMBER">3</XMTok>
                <XMTok meaning="3" role="NUMBER">3</XMTok>
              </XMApp>
            </XMath>
          </Math> kernel. Our model uses a mask corresponding to an <Math mode="inline" tex="11\times 11" text="11 * 11" xml:id="A2.F11.m6">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">×</XMTok>
                <XMTok meaning="11" role="NUMBER">11</XMTok>
                <XMTok meaning="11" role="NUMBER">11</XMTok>
              </XMApp>
            </XMath>
          </Math> kernel.</caption>
      </figure>
      <para xml:id="A2.SS1.p1">
        <p><!--  %****␣main.tex␣Line␣500␣**** -->Our model is a decoder-only sparse transformer of the same kind described in <cite class="ltx_citemacro_citet"><bibref bibrefs="child2019generating" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
              <bibrefphrase>(</bibrefphrase>
              <bibrefphrase>)</bibrefphrase>
            </bibref></cite>, with broadcasted row and column embeddings for the part of the context for the image tokens. A complete description of the embedding scheme used in our model is shown in Figure <ref labelref="LABEL:fig:xf_embds"/>. We use 64 attention layers, each of which uses 62 attention heads with a per-head state size of 64.</p>
      </para>
      <para xml:id="A2.SS1.p2">
        <p>The model uses three kinds of sparse attention masks, which we show in Figure <ref labelref="LABEL:fig:xf_attn"/>. The convolutional attention mask (Figure <ref labelref="LABEL:fig:xf_attn"/>(d)) is only used in the last self-attention layer. Otherwise, given the index <Math mode="inline" tex="i" text="i" xml:id="A2.SS1.p2.m1">
            <XMath>
              <XMTok font="italic" role="UNKNOWN">i</XMTok>
            </XMath>
          </Math> of a self-attention layer (with <Math mode="inline" tex="i\in[1,63]" text="i element-of closed-interval@(1, 63)" xml:id="A2.SS1.p2.m2">
            <XMath>
              <XMApp>
                <XMTok meaning="element-of" name="in" role="RELOP">∈</XMTok>
                <XMTok font="italic" role="UNKNOWN">i</XMTok>
                <XMDual>
                  <XMApp>
                    <XMTok meaning="closed-interval"/>
                    <XMRef idref="A2.SS1.p2.m2.1"/>
                    <XMRef idref="A2.SS1.p2.m2.2"/>
                  </XMApp>
                  <XMWrap>
                    <XMTok role="OPEN" stretchy="false">[</XMTok>
                    <XMTok meaning="1" role="NUMBER" xml:id="A2.SS1.p2.m2.1">1</XMTok>
                    <XMTok role="PUNCT">,</XMTok>
                    <XMTok meaning="63" role="NUMBER" xml:id="A2.SS1.p2.m2.2">63</XMTok>
                    <XMTok role="CLOSE" stretchy="false">]</XMTok>
                  </XMWrap>
                </XMDual>
              </XMApp>
            </XMath>
          </Math>), we use the column attention mask (Figure <ref labelref="LABEL:fig:xf_attn"/>(c)) if <Math mode="inline" tex="i-2\!\!\mod 4=0" text="modulo@(i - 2, 4) = 0" xml:id="A2.SS1.p2.m3">
            <XMath>
              <XMApp>
                <XMTok meaning="equals" role="RELOP">=</XMTok>
                <XMApp>
                  <XMTok meaning="modulo" role="MODIFIEROP">mod</XMTok>
                  <XMApp>
                    <XMTok meaning="minus" role="ADDOP">-</XMTok>
                    <XMTok font="italic" role="UNKNOWN">i</XMTok>
                    <XMTok meaning="2" role="NUMBER" rpadding="-3.3pt">2</XMTok>
                  </XMApp>
                  <XMTok meaning="4" role="NUMBER">4</XMTok>
                </XMApp>
                <XMTok meaning="0" role="NUMBER">0</XMTok>
              </XMApp>
            </XMath>
          </Math>, and row attention otherwise. E.g., the first four self-attention layers use “row, column, row, row”, respectively. With the exception of the convolutional attention mask, which we found to provide a small boost in performance over the row and dense causal attention masks when used in the final self-attention layer, this is the same configuration used in <cite class="ltx_citemacro_citet"><bibref bibrefs="child2019generating" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
              <bibrefphrase>(</bibrefphrase>
              <bibrefphrase>)</bibrefphrase>
            </bibref></cite>.</p>
      </para>
    </subsection>
    <subsection inlist="toc" labels="LABEL:sec:xf_train" xml:id="A2.SS2">
      <tags>
        <tag>B.2</tag>
        <tag role="autoref">subsection B.2</tag>
        <tag role="refnum">B.2</tag>
        <tag role="typerefnum">§B.2</tag>
      </tags>
      <title><tag close=" ">B.2</tag>Training</title>
      <float class="ltx_lstlisting" inlist="lol" labels="LABEL:lst:xf_preproc" xml:id="LST2">
        <tags>
          <tag>Listing 2</tag>
          <tag role="autoref">2</tag>
          <tag role="refnum">2</tag>
          <tag role="typerefnum">Listing 2</tag>
        </tags>
        <listing class="ltx_lst_language_Python ltx_lstlisting" data="ZGVmIHByZXByb2Nlc3NfaW1hZ2UoaW1nLCB0YXJnZXRfcmVzKToKICAgIGgsIHcgID0gdGYuc2hhcGUoaW1nKVswXSwgdGYuc2hhcGUoaW1nKVsxXQogICAgc19taW4gPSB0Zi5taW5pbXVtKGgsIHcpCgogICAgb2ZmX2ggPSB0Zi5yYW5kb20udW5pZm9ybShbXSwgMyAqIChoIC0gc19taW4pIC8vIDgsCiAgICAgICAgdGYubWF4aW11bSgzICogKGggLSBzX21pbikgLy8gOCArIDEsIDUgKiAoaCAtIHNfbWluKSAvLyA4KSwKICAgICAgICBkdHlwZT10Zi5pbnQzMikKICAgIG9mZl93ID0gdGYucmFuZG9tLnVuaWZvcm0oW10sIDMgKiAodyAtIHNfbWluKSAvLyA4LAogICAgICAgIHRmLm1heGltdW0oMyAqICh3IC0gc19taW4pIC8vIDggKyAxLCA1ICogKHcgLSBzX21pbikgLy8gOCksCiAgICAgICAgZHR5cGU9dGYuaW50MzIpCgogICAgIyBSYW5kb20gZnVsbCBzcXVhcmUgY3JvcC4KICAgIGltZyAgID0gdGYuaW1hZ2UuY3JvcF90b19ib3VuZGluZ19ib3goaW1nLCBvZmZfaCwgb2ZmX3csIHNfbWluLCBzX21pbikKICAgIHRfbWF4ID0gdGYubWluaW11bShzX21pbiwgcm91bmQoOSAvIDggKiB0YXJnZXRfcmVzKSkKICAgIHQgICAgID0gdGYucmFuZG9tLnVuaWZvcm0oW10sIHRhcmdldF9yZXMsIHRfbWF4ICsgMSwgZHR5cGU9dGYuaW50MzIpCiAgICBpbWcgICA9IHRmLmltYWdlLnJlc2l6ZV9pbWFnZXMoaW1nLCBbdCwgdF0sIG1ldGhvZD10Zi5pbWFnZS5SZXNpemVNZXRob2QuQVJFQSwKICAgICAgICAgICAgICAgIGFsaWduX2Nvcm5lcnM9VHJ1ZSkKICAgIGltZyAgID0gdGYuY2FzdCh0Zi5yaW50KHRmLmNsaXBfYnlfdmFsdWUoaW1nLCAwLCAyNTUpKSwgdGYudWludDgpCgogICAgIyBXZSBkb24ndCB1c2UgaGZsaXAgYXVnIHNpbmNlIHRoZSBpbWFnZSBtYXkgY29udGFpbiB0ZXh0LgogICAgcmV0dXJuIHRmLmltYWdlLnJhbmRvbV9jcm9wKGltZywgMiAqIFt0YXJnZXRfcmVzXSArIFtjaGFubmVsX2NvdW50XSk=" dataencoding="base64" datamimetype="text/plain">
          <listingline xml:id="lstnumberx14"><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">def</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">preprocess_image</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">target_res</text><text font="typewriter" fontsize="80%">):</text></listingline>
          <listingline xml:id="lstnumberx15"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">h</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">w</text><text class="ltx_lst_space" font="typewriter" fontsize="80%">  </text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">shape</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text font="typewriter" fontsize="80%">)[0],</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">shape</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text font="typewriter" fontsize="80%">)[1]</text></listingline>
          <listingline xml:id="lstnumberx16"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">s_min</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">minimum</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">h</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">w</text><text font="typewriter" fontsize="80%">)</text></listingline>
          <listingline xml:id="lstnumberx17"/>
          <listingline xml:id="lstnumberx18"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">off_h</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">random</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">uniform</text><text font="typewriter" fontsize="80%">([],</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">3</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">*</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">h</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">-</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">s_min</text><text font="typewriter" fontsize="80%">)</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">//</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">8,</text></listingline>
          <listingline xml:id="lstnumberx19"><text class="ltx_lst_space" font="typewriter" fontsize="80%">        </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">maximum</text><text font="typewriter" fontsize="80%">(3</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">*</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">h</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">-</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">s_min</text><text font="typewriter" fontsize="80%">)</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">//</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">8</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">+</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">1,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">5</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">*</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">h</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">-</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">s_min</text><text font="typewriter" fontsize="80%">)</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">//</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">8),</text></listingline>
          <listingline xml:id="lstnumberx20"><text class="ltx_lst_space" font="typewriter" fontsize="80%">        </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">dtype</text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">int32</text><text font="typewriter" fontsize="80%">)</text></listingline>
          <listingline xml:id="lstnumberx21"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">off_w</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">random</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">uniform</text><text font="typewriter" fontsize="80%">([],</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">3</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">*</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">w</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">-</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">s_min</text><text font="typewriter" fontsize="80%">)</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">//</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">8,</text></listingline>
          <listingline xml:id="lstnumberx22"><text class="ltx_lst_space" font="typewriter" fontsize="80%">        </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">maximum</text><text font="typewriter" fontsize="80%">(3</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">*</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">w</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">-</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">s_min</text><text font="typewriter" fontsize="80%">)</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">//</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">8</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">+</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">1,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">5</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">*</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">w</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">-</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">s_min</text><text font="typewriter" fontsize="80%">)</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">//</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">8),</text></listingline>
          <listingline xml:id="lstnumberx23"><text class="ltx_lst_space" font="typewriter" fontsize="80%">        </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">dtype</text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">int32</text><text font="typewriter" fontsize="80%">)</text></listingline>
          <listingline xml:id="lstnumberx24"/>
          <listingline xml:id="lstnumberx25"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text font="typewriter" fontsize="80%">#</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">Random</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">full</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">square</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">crop</text><text font="typewriter" fontsize="80%">.</text></listingline>
          <listingline xml:id="lstnumberx26"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text class="ltx_lst_space" font="typewriter" fontsize="80%">   </text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">image</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">crop_to_bounding_box</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">off_h</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">off_w</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">s_min</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">s_min</text><text font="typewriter" fontsize="80%">)</text></listingline>
          <listingline xml:id="lstnumberx27"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">t_max</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">minimum</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">s_min</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">round</text><text font="typewriter" fontsize="80%">(9</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">/</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">8</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">*</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">target_res</text><text font="typewriter" fontsize="80%">))</text></listingline>
          <listingline xml:id="lstnumberx28"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">t</text><text class="ltx_lst_space" font="typewriter" fontsize="80%">     </text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">random</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">uniform</text><text font="typewriter" fontsize="80%">([],</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">target_res</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">t_max</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">+</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">1,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">dtype</text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">int32</text><text font="typewriter" fontsize="80%">)</text></listingline>
          <listingline xml:id="lstnumberx29"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text class="ltx_lst_space" font="typewriter" fontsize="80%">   </text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">image</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">resize_images</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">[</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">t</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">t</text><text font="typewriter" fontsize="80%">],</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">method</text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">image</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">ResizeMethod</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">AREA</text><text font="typewriter" fontsize="80%">,</text></listingline>
          <listingline xml:id="lstnumberx30"><text class="ltx_lst_space" font="typewriter" fontsize="80%">                </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">align_corners</text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">True</text><text font="typewriter" fontsize="80%">)</text></listingline>
          <listingline xml:id="lstnumberx31"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text class="ltx_lst_space" font="typewriter" fontsize="80%">   </text><text font="typewriter" fontsize="80%">=</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">cast</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">rint</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">clip_by_value</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">0,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">255)),</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">uint8</text><text font="typewriter" fontsize="80%">)</text></listingline>
          <listingline xml:id="lstnumberx32"/>
          <listingline xml:id="lstnumberx33"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text font="typewriter" fontsize="80%">#</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">We</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">don</text><text font="typewriter" fontsize="80%">’</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">t</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">use</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">hflip</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">aug</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">since</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">the</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">image</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">may</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">contain</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">text</text><text font="typewriter" fontsize="80%">.</text></listingline>
          <listingline xml:id="lstnumberx34"><text class="ltx_lst_space" font="typewriter" fontsize="80%">    </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">return</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">tf</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">image</text><text font="typewriter" fontsize="80%">.</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">random_crop</text><text font="typewriter" fontsize="80%">(</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">img</text><text font="typewriter" fontsize="80%">,</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">2</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">*</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">[</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">target_res</text><text font="typewriter" fontsize="80%">]</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">+</text><text class="ltx_lst_space" font="typewriter" fontsize="80%"> </text><text font="typewriter" fontsize="80%">[</text><text class="ltx_lst_identifier" font="typewriter" fontsize="80%">channel_count</text><text font="typewriter" fontsize="80%">])</text></listingline>
        </listing>
        <toccaption><tag close=" ">2</tag>TensorFlow <cite class="ltx_citemacro_citep">(<bibref bibrefs="abadi2016tensorflow" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite> image preprocessing code for training the transformer. We use <text font="typewriter">target_res = 256</text> and <text font="typewriter">channel_count = 3</text>.</toccaption>
        <caption><tag close=": ">Listing 2</tag>TensorFlow <cite class="ltx_citemacro_citep">(<bibref bibrefs="abadi2016tensorflow" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
              <bibrefphrase>, </bibrefphrase>
            </bibref>)</cite> image preprocessing code for training the transformer. We use <text font="typewriter">target_res = 256</text> and <text font="typewriter">channel_count = 3</text>.</caption>
      </float>
      <para xml:id="A2.SS2.p1">
        <p>When training the transformer, we apply data augmentation to the images before encoding them using the dVAE encoder. We use slightly different augmentations from the ones used to train the dVAE; the code used for this is given in Listing <ref labelref="LABEL:lst:xf_preproc"/>. We also apply 10% BPE dropout when BPE-encoding the captions for training. The model is trained using per-resblock scaling (see Section <ref labelref="LABEL:sec:mp_train"/>) and gradient compression (see Section <ref labelref="LABEL:sec:dist_opt"/>) with total compression rank 896 (so that each GPU uses a compression rank of 112 for its parameter shards). As shown in Table <ref labelref="LABEL:tab:cmp_rank"/>, this results in a compression rate of about 86%, which we analyze in Section <ref labelref="LABEL:sec:dist_train_bw"/>.</p>
      </para>
      <para xml:id="A2.SS2.p2">
        <p>We update the parameters using AdamW with <Math mode="inline" tex="\beta_{1}=0.9" text="beta _ 1 = 0.9" xml:id="A2.SS2.p2.m1">
            <XMath>
              <XMApp>
                <XMTok meaning="equals" role="RELOP">=</XMTok>
                <XMApp>
                  <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                  <XMTok font="italic" name="beta" role="UNKNOWN">β</XMTok>
                  <XMTok fontsize="70%" meaning="1" role="NUMBER">1</XMTok>
                </XMApp>
                <XMTok meaning="0.9" role="NUMBER">0.9</XMTok>
              </XMApp>
            </XMath>
          </Math>, <Math mode="inline" tex="\beta_{2}=0.96" text="beta _ 2 = 0.96" xml:id="A2.SS2.p2.m2">
            <XMath>
              <XMApp>
                <XMTok meaning="equals" role="RELOP">=</XMTok>
                <XMApp>
                  <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                  <XMTok font="italic" name="beta" role="UNKNOWN">β</XMTok>
                  <XMTok fontsize="70%" meaning="2" role="NUMBER">2</XMTok>
                </XMApp>
                <XMTok meaning="0.96" role="NUMBER">0.96</XMTok>
              </XMApp>
            </XMath>
          </Math>, <Math mode="inline" tex="\epsilon=10^{-8}" text="epsilon = 10 ^ (- 8)" xml:id="A2.SS2.p2.m3">
            <XMath>
              <XMApp>
                <XMTok meaning="equals" role="RELOP">=</XMTok>
                <XMTok font="italic" name="epsilon" role="UNKNOWN">ϵ</XMTok>
                <XMApp>
                  <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                  <XMTok meaning="10" role="NUMBER">10</XMTok>
                  <XMApp>
                    <XMTok fontsize="70%" meaning="minus" role="ADDOP">-</XMTok>
                    <XMTok fontsize="70%" meaning="8" role="NUMBER">8</XMTok>
                  </XMApp>
                </XMApp>
              </XMApp>
            </XMath>
          </Math>, and weight decay multiplier <Math mode="inline" tex="4.5\cdot 10^{-2}" text="4.5 cdot 10 ^ (- 2)" xml:id="A2.SS2.p2.m4">
            <XMath>
              <XMApp>
                <XMTok name="cdot" role="MULOP">⋅</XMTok>
                <XMTok meaning="4.5" role="NUMBER">4.5</XMTok>
                <XMApp>
                  <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                  <XMTok meaning="10" role="NUMBER">10</XMTok>
                  <XMApp>
                    <XMTok fontsize="70%" meaning="minus" role="ADDOP">-</XMTok>
                    <XMTok fontsize="70%" meaning="2" role="NUMBER">2</XMTok>
                  </XMApp>
                </XMApp>
              </XMApp>
            </XMath>
          </Math>. We clip the decompressed gradients by norm using a threshold of 4, prior to applying the Adam update. Gradient clipping is only triggered during the warm-up phase at the start of training. To conserve memory, most Adam moments (see Section <ref labelref="LABEL:sec:mp_train_guidelines"/> for details) are stored in 16-bit formats, with a 1-6-9 format for the running mean (i.e., 1 bit for the sign, 6 bits for the exponent, and 9 bits for the significand), and a 0-6-10 format for the running variance. We clip the estimate for running variance by value to 5 before it is used to update the parameters or moments. Finally, we apply exponentially weighted iterate averaging by asynchronously copying the model parameters from the GPU to the CPU once every 25 updates, using a decay coefficient of 0.99.</p>
      </para>
      <para xml:id="A2.SS2.p3">
        <p>We trained the model using 1024, 16 GB NVIDIA V100 GPUs and a total batch size of <Math mode="inline" tex="1024" text="1024" xml:id="A2.SS2.p3.m1">
            <XMath>
              <XMTok meaning="1024" role="NUMBER">1024</XMTok>
            </XMath>
          </Math>, for a total of <Math mode="inline" tex="430000" text="430000" xml:id="A2.SS2.p3.m2">
            <XMath>
              <XMTok meaning="430000" role="NUMBER">430000</XMTok>
            </XMath>
          </Math> updates. At the start of training, we use a linear schedule to ramp up the step size to <Math mode="inline" tex="4.5\cdot 10^{-4}" text="4.5 cdot 10 ^ (- 4)" xml:id="A2.SS2.p3.m3">
            <XMath>
              <XMApp>
                <XMTok name="cdot" role="MULOP">⋅</XMTok>
                <XMTok meaning="4.5" role="NUMBER">4.5</XMTok>
                <XMApp>
                  <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                  <XMTok meaning="10" role="NUMBER">10</XMTok>
                  <XMApp>
                    <XMTok fontsize="70%" meaning="minus" role="ADDOP">-</XMTok>
                    <XMTok fontsize="70%" meaning="4" role="NUMBER">4</XMTok>
                  </XMApp>
                </XMApp>
              </XMApp>
            </XMath>
          </Math> over <Math mode="inline" tex="5000" text="5000" xml:id="A2.SS2.p3.m4">
            <XMath>
              <XMTok meaning="5000" role="NUMBER">5000</XMTok>
            </XMath>
          </Math> updates, and halved the step size each time the training loss appeared to plateau. We did this a total of five times, ending training with a final step size that was 32 times smaller than the initial one. We reserved about <Math mode="inline" tex="606000" text="606000" xml:id="A2.SS2.p3.m5">
            <XMath>
              <XMTok meaning="606000" role="NUMBER">606000</XMTok>
            </XMath>
          </Math> images for validation, and did not observe overfitting at any point during training.</p>
      </para>
    </subsection>
  </appendix>
  <appendix inlist="toc" labels="LABEL:sec:data_collection_details" xml:id="A3">
    <tags>
      <tag>Appendix C</tag>
      <tag role="autoref">Appendix C</tag>
      <tag role="refnum">C</tag>
      <tag role="typerefnum">Appendix C</tag>
    </tags>
    <title><tag close=" ">Appendix C</tag>Details for Data Collection</title>
    <toctitle><tag close=" ">C</tag>Details for Data Collection</toctitle>
    <para xml:id="A3.p1">
      <p>In order to train the 12-billion parameter transformer, we created a dataset of a similar scale to JFT-300M by collecting 250 million text-image pairs from the internet. As described in Section <ref labelref="LABEL:sec:data_collection"/>, this dataset incorporates Conceptual Captions, the text-image pairs from Wikipedia, and a filtered subset of YFCC100M. We use a subset of the text, image, and joint text and image filters described in <cite class="ltx_citemacro_citet"><bibref bibrefs="sharma2018conceptual" separator=";" show="Authors Phrase1YearPhrase2" yyseparator=",">
            <bibrefphrase>(</bibrefphrase>
            <bibrefphrase>)</bibrefphrase>
          </bibref></cite> to construct this dataset. These filters include discarding instances whose captions are too short, are classified as non-English by the Python package <text font="typewriter">cld3</text>, or that consist primarily of boilerplate phrases such as “photographed on <text font="typewriter">&lt;date&gt;</text>”, where <text font="typewriter">&lt;date&gt;</text> matches various formats for dates that we found in the data. We also discard instances whose images have aspect ratios not in <Math mode="inline" tex="[1/2,2]" text="closed-interval@(1 / 2, 2)" xml:id="A3.p1.m1">
          <XMath>
            <XMDual>
              <XMApp>
                <XMTok meaning="closed-interval"/>
                <XMRef idref="A3.p1.m1.2"/>
                <XMRef idref="A3.p1.m1.1"/>
              </XMApp>
              <XMWrap>
                <XMTok role="OPEN" stretchy="false">[</XMTok>
                <XMApp xml:id="A3.p1.m1.2">
                  <XMTok meaning="divide" role="MULOP">/</XMTok>
                  <XMTok meaning="1" role="NUMBER">1</XMTok>
                  <XMTok meaning="2" role="NUMBER">2</XMTok>
                </XMApp>
                <XMTok role="PUNCT">,</XMTok>
                <XMTok meaning="2" role="NUMBER" xml:id="A3.p1.m1.1">2</XMTok>
                <XMTok role="CLOSE" stretchy="false">]</XMTok>
              </XMWrap>
            </XMDual>
          </XMath>
        </Math>. If we were to use to very tall or wide images, then the square crops used during training would likely exclude objects mentioned in the caption.</p>
    </para>
  </appendix>
  <appendix inlist="toc" labels="LABEL:sec:mp_train_guidelines" xml:id="A4">
    <tags>
      <tag>Appendix D</tag>
      <tag role="autoref">Appendix D</tag>
      <tag role="refnum">D</tag>
      <tag role="typerefnum">Appendix D</tag>
    </tags>
    <title><tag close=" ">Appendix D</tag>Guidelines for Mixed-Precision Training</title>
    <toctitle><tag close=" ">D</tag>Guidelines for Mixed-Precision Training</toctitle>
    <figure inlist="lof" labels="LABEL:fig:grad_scale_plot" placement="t" xml:id="A4.F12">
      <tags>
        <tag>Figure 12</tag>
        <tag role="autoref">Figure 12</tag>
        <tag role="refnum">12</tag>
        <tag role="typerefnum">Figure 12</tag>
      </tags>
      <graphics candidates="grad_scale_plot.png" class="ltx_centering" graphic="grad_scale_plot.png" options="width=173.44534pt,keepaspectratio=true" xml:id="A4.F12.g1"/>
      <toccaption class="ltx_centering"><tag close=" ">12</tag>Plot of per-resblock gradient scales for a 2.8-billion parameter text-to-image transformer trained without gradient compression. The <Math mode="inline" tex="x" text="x" xml:id="A4.F12.m1">
          <XMath>
            <XMTok font="italic" role="UNKNOWN">x</XMTok>
          </XMath>
        </Math>-axis is parameter updates, and the <Math mode="inline" tex="y" text="y" xml:id="A4.F12.m2">
          <XMath>
            <XMTok font="italic" role="UNKNOWN">y</XMTok>
          </XMath>
        </Math>-axis is the base-2 logarithm of the gradient scale. Darkest violet corresponds to the first resblock, and brightest yellow corresponds to the last (of which there are 128 total). The gradient scale for the second MLP resblock hovers at around <Math mode="inline" tex="2^{24}" text="2 ^ 24" xml:id="A4.F12.m3">
          <XMath>
            <XMApp>
              <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
              <XMTok meaning="2" role="NUMBER">2</XMTok>
              <XMTok fontsize="70%" meaning="24" role="NUMBER">24</XMTok>
            </XMApp>
          </XMath>
        </Math>, while the others stay within a 4-bit range. The extent of this range increases as the model is made larger.</toccaption>
      <caption class="ltx_centering"><tag close=": ">Figure 12</tag>Plot of per-resblock gradient scales for a 2.8-billion parameter text-to-image transformer trained without gradient compression. The <Math mode="inline" tex="x" text="x" xml:id="A4.F12.m4">
          <XMath>
            <XMTok font="italic" role="UNKNOWN">x</XMTok>
          </XMath>
        </Math>-axis is parameter updates, and the <Math mode="inline" tex="y" text="y" xml:id="A4.F12.m5">
          <XMath>
            <XMTok font="italic" role="UNKNOWN">y</XMTok>
          </XMath>
        </Math>-axis is the base-2 logarithm of the gradient scale. Darkest violet corresponds to the first resblock, and brightest yellow corresponds to the last (of which there are 128 total). The gradient scale for the second MLP resblock hovers at around <Math mode="inline" tex="2^{24}" text="2 ^ 24" xml:id="A4.F12.m6">
          <XMath>
            <XMApp>
              <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
              <XMTok meaning="2" role="NUMBER">2</XMTok>
              <XMTok fontsize="70%" meaning="24" role="NUMBER">24</XMTok>
            </XMApp>
          </XMath>
        </Math>, while the others stay within a 4-bit range. The extent of this range increases as the model is made larger.</caption>
<!--  %****␣main.tex␣Line␣550␣**** -->    </figure>
    <para xml:id="A4.p1">
      <p>The most challenging part of this project was getting the model to train in 16-bit precision past one billion parameters. We were able to do this after detecting for underflow in various parts of training, and revising the code to eliminate it. We developed a set of guidelines as a result of this process that we present here.<note mark="12" role="footnote" xml:id="footnote12"><tags>
            <tag>12</tag>
            <tag role="autoref">footnote 12</tag>
            <tag role="refnum">12</tag>
            <tag role="typerefnum">footnote 12</tag>
          </tags>Fewer of these guidelines may be necessary on hardware like the TPU that has native support for the bfloat16 format, since the larger 8-bit exponent range makes underflow less likely to occur.</note></p>
      <enumerate xml:id="A4.I1">
        <item xml:id="A4.I1.i1">
          <tags>
            <tag>1.</tag>
            <tag role="autoref">item 1</tag>
            <tag role="refnum">1</tag>
            <tag role="typerefnum">item 1</tag>
          </tags>
          <para xml:id="A4.I1.i1.p1">
            <p><text font="bold">Use per-resblock gradient scaling (Figure <ref labelref="LABEL:fig:grad_scaling"/>) instead of standard loss scaling.</text> Our model uses 128 gradient scales, one for each of its resblocks. All of the gradient scales are initialized to <Math mode="inline" tex="M\cdot 2^{13}" text="M cdot 2 ^ 13" xml:id="A4.I1.i1.p1.m1">
                <XMath>
                  <XMApp>
                    <XMTok name="cdot" role="MULOP">⋅</XMTok>
                    <XMTok font="italic" role="UNKNOWN">M</XMTok>
                    <XMApp>
                      <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                      <XMTok meaning="2" role="NUMBER">2</XMTok>
                      <XMTok fontsize="70%" meaning="13" role="NUMBER">13</XMTok>
                    </XMApp>
                  </XMApp>
                </XMath>
              </Math>, where <Math mode="inline" tex="M" text="M" xml:id="A4.I1.i1.p1.m2">
                <XMath>
                  <XMTok font="italic" role="UNKNOWN">M</XMTok>
                </XMath>
              </Math> is the number of data-parallel replicas (i.e., the number of GPUs). In our setup, each grad scale is multiplied by <Math mode="inline" tex="2^{1/1000}" text="2 ^ (1 / 1000)" xml:id="A4.I1.i1.p1.m3">
                <XMath>
                  <XMApp>
                    <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                    <XMTok meaning="2" role="NUMBER">2</XMTok>
                    <XMApp>
                      <XMTok fontsize="70%" meaning="divide" role="MULOP">/</XMTok>
                      <XMTok fontsize="70%" meaning="1" role="NUMBER">1</XMTok>
                      <XMTok fontsize="70%" meaning="1000" role="NUMBER">1000</XMTok>
                    </XMApp>
                  </XMApp>
                </XMath>
              </Math> at every parameter update when there are no nonfinite values for any parameter gradient in that resblock. Otherwise, we divide the grad scale by <Math mode="inline" tex="\sqrt{2}" text="square-root@(2)" xml:id="A4.I1.i1.p1.m4">
                <XMath>
                  <XMApp>
                    <XMTok meaning="square-root"/>
                    <XMTok meaning="2" role="NUMBER">2</XMTok>
                  </XMApp>
                </XMath>
              </Math> and skip the update. We also disallow consecutive divisions of the same grad scale within a window of <Math mode="inline" tex="125" text="125" xml:id="A4.I1.i1.p1.m5">
                <XMath>
                  <XMTok meaning="125" role="NUMBER">125</XMTok>
                </XMath>
              </Math> updates. All grad scales are clamped to the range <Math mode="inline" tex="[M\cdot 2^{7},M\cdot 2^{24}]" text="closed-interval@(M cdot 2 ^ 7, M cdot 2 ^ 24)" xml:id="A4.I1.i1.p1.m6">
                <XMath>
                  <XMDual>
                    <XMApp>
                      <XMTok meaning="closed-interval"/>
                      <XMRef idref="A4.I1.i1.p1.m6.1"/>
                      <XMRef idref="A4.I1.i1.p1.m6.2"/>
                    </XMApp>
                    <XMWrap>
                      <XMTok role="OPEN" stretchy="false">[</XMTok>
                      <XMApp xml:id="A4.I1.i1.p1.m6.1">
                        <XMTok name="cdot" role="MULOP">⋅</XMTok>
                        <XMTok font="italic" role="UNKNOWN">M</XMTok>
                        <XMApp>
                          <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                          <XMTok meaning="2" role="NUMBER">2</XMTok>
                          <XMTok fontsize="70%" meaning="7" role="NUMBER">7</XMTok>
                        </XMApp>
                      </XMApp>
                      <XMTok role="PUNCT">,</XMTok>
                      <XMApp xml:id="A4.I1.i1.p1.m6.2">
                        <XMTok name="cdot" role="MULOP">⋅</XMTok>
                        <XMTok font="italic" role="UNKNOWN">M</XMTok>
                        <XMApp>
                          <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                          <XMTok meaning="2" role="NUMBER">2</XMTok>
                          <XMTok fontsize="70%" meaning="24" role="NUMBER">24</XMTok>
                        </XMApp>
                      </XMApp>
                      <XMTok role="CLOSE" stretchy="false">]</XMTok>
                    </XMWrap>
                  </XMDual>
                </XMath>
              </Math> after being updated. Figure <ref labelref="LABEL:fig:grad_scale_plot"/> shows the gradient scales in the early phase of training for a 2.8-billion parameter model.</p>
          </para>
        </item>
        <item xml:id="A4.I1.i2">
          <tags>
            <tag>2.</tag>
            <tag role="autoref">item 2</tag>
            <tag role="refnum">2</tag>
            <tag role="typerefnum">item 2</tag>
          </tags>
          <para xml:id="A4.I1.i2.p1">
            <p><text font="bold">Only use 16-bit precision where it is really necessary for performance.</text> In particular, store all gains, biases, embeddings, and unembeddings in 32-bit precision, with 32-bit gradients (including for remote communication) and 32-bit Adam moments. We disable gradient compression for these parameters (though PowerSGD would not make sense for 1D parameters like gains and biases). The logits for the text and image tokens are computed and stored in 32-bit precision. We found that storing the embeddings in 16-bit precision sometimes caused divergence early in optimization, and using 16-bit logits resulted in a small shift in the training curve, so we switched to use 32-bit precision out of an abundance of caution.</p>
          </para>
        </item>
        <item xml:id="A4.I1.i3">
          <tags>
            <tag>3.</tag>
            <tag role="autoref">item 3</tag>
            <tag role="refnum">3</tag>
            <tag role="typerefnum">item 3</tag>
          </tags>
          <para xml:id="A4.I1.i3.p1">
            <p><text font="bold">Avoid underflow when dividing the gradient.</text> For data-parallel training, we need to divide the gradients by the total number of data-parallel workers <Math mode="inline" tex="M" text="M" xml:id="A4.I1.i3.p1.m1">
                <XMath>
                  <XMTok font="italic" role="UNKNOWN">M</XMTok>
                </XMath>
              </Math>. One way to do this is to divide the loss by the per-machine batch size, and then divide the parameter gradients by <Math mode="inline" tex="M" text="M" xml:id="A4.I1.i3.p1.m2">
                <XMath>
                  <XMTok font="italic" role="UNKNOWN">M</XMTok>
                </XMath>
              </Math> before summing them over the machines (using all-reduce). To save time and space, the gradients are usually computed and stored in 16-bit precision. When <Math mode="inline" tex="M" text="M" xml:id="A4.I1.i3.p1.m3">
                <XMath>
                  <XMTok font="italic" role="UNKNOWN">M</XMTok>
                </XMath>
              </Math> is large, this division could result in underflow before the gradients are summed. On the other hand, if we attempt to sum the gradients first and then divide them later, we could encounter overflow in the all-reduce.</p>
          </para>
          <para xml:id="A4.I1.i3.p2">
            <p>Our solution for this problem attempts to minimize the loss of information in the division prior to the all-reduce, without danger of overflow. To do this, we divide the loss by the overall batch size (which includes <Math mode="inline" tex="M" text="M" xml:id="A4.I1.i3.p2.m1">
                <XMath>
                  <XMTok font="italic" role="UNKNOWN">M</XMTok>
                </XMath>
              </Math> as a factor) rather than the per-machine batch size, and multiply the gradient scales by <Math mode="inline" tex="M" text="M" xml:id="A4.I1.i3.p2.m2">
                <XMath>
                  <XMTok font="italic" role="UNKNOWN">M</XMTok>
                </XMath>
              </Math> to compensate, as described in (1). Then, prior to the all-reduce operation, we divide the gradients by a constant that was tuned by hand to avoid both underflow and overflow. This was done by inspecting histograms of the exponents (i.e., base-2 logarithms) of the absolute values of the scalar components of the per-parameter gradients. Since the gradient scaling keeps the gradients close to right end of the exponent range of the 16-bit format, we found that the same constant worked well for all parameters in the model with 16-bit gradients. When using PowerSGD, we chose different constants for the <Math mode="inline" tex="P" text="P" xml:id="A4.I1.i3.p2.m3">
                <XMath>
                  <XMTok font="italic" role="UNKNOWN">P</XMTok>
                </XMath>
              </Math> and <Math mode="inline" tex="Q" text="Q" xml:id="A4.I1.i3.p2.m4">
                <XMath>
                  <XMTok font="italic" role="UNKNOWN">Q</XMTok>
                </XMath>
              </Math> matrices.</p>
          </para>
        </item>
      </enumerate>
    </para>
  </appendix>
  <appendix inlist="toc" xml:id="A5">
    <tags>
      <tag>Appendix E</tag>
      <tag role="autoref">Appendix E</tag>
      <tag role="refnum">E</tag>
      <tag role="typerefnum">Appendix E</tag>
    </tags>
    <title><tag close=" ">Appendix E</tag>Details for Distributed Optimization</title>
    <toctitle><tag close=" ">E</tag>Details for Distributed Optimization</toctitle>
    <para xml:id="A5.p1">
      <p>We use PowerSGD <cite class="ltx_citemacro_citep">(<bibref bibrefs="vogels2019powersgd" separator=";" show="AuthorsPhrase1Year" yyseparator=",">
            <bibrefphrase>, </bibrefphrase>
          </bibref>)</cite> to compress the gradients with respect to all parameters except the embeddings, unembeddings, gains, and biases. In Section <ref labelref="LABEL:sec:dist_train_bw"/>, we derive an expression for the reduction in the amount of data communicated as a function of the compression rank and model size. In Section <ref labelref="LABEL:sec:dist_train_impl"/>, we present a detailed overview of our adaptation of PowerSGD, and the modifications we had to make in order to fix performance regressions, some of which only manifest at billion-parameter scale.</p>
    </para>
    <subsection inlist="toc" labels="LABEL:sec:dist_train_bw" xml:id="A5.SS1">
      <tags>
        <tag>E.1</tag>
        <tag role="autoref">subsection E.1</tag>
        <tag role="refnum">E.1</tag>
        <tag role="typerefnum">§E.1</tag>
      </tags>
      <title><tag close=" ">E.1</tag>Bandwidth Analysis</title>
      <table inlist="lot" labels="LABEL:tab:cmp_ratio" xml:id="A5.T2">
        <tags>
          <tag>Table 2</tag>
          <tag role="autoref">Table 2</tag>
          <tag role="refnum">2</tag>
          <tag role="typerefnum">Table 2</tag>
        </tags>
        <tabular class="ltx_centering ltx_guessed_headers" vattach="middle">
          <thead>
            <tr>
              <td align="center" border="tt" thead="column row"><text fontsize="90%">Parameter Names</text></td>
              <td align="center" border="tt" thead="column"><text fontsize="90%">Parameter Shard Gradient Shape (No Compression)</text></td>
              <td align="center" border="tt" thead="column"><Math mode="inline" tex="P" text="P" xml:id="A5.T2.m1">
                  <XMath>
                    <XMTok font="italic" fontsize="90%" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math><text fontsize="90%"> shape</text></td>
              <td align="center" border="tt" thead="column"><Math mode="inline" tex="Q" text="Q" xml:id="A5.T2.m2">
                  <XMath>
                    <XMTok font="italic" fontsize="90%" role="UNKNOWN">Q</XMTok>
                  </XMath>
                </Math><text fontsize="90%"> shape</text></td>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="center" border="t" thead="row"><text fontsize="90%">qkv and post-attention matrices</text></td>
              <td align="center" border="t"><Math mode="inline" tex="d\times(d/m)" text="d * (d / m)" xml:id="A5.T2.m3">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="90%" meaning="times" role="MULOP">×</XMTok>
                      <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
                      <XMDual>
                        <XMRef idref="A5.T2.m3.1"/>
                        <XMWrap>
                          <XMTok fontsize="90%" role="OPEN" stretchy="false">(</XMTok>
                          <XMApp xml:id="A5.T2.m3.1">
                            <XMTok fontsize="90%" meaning="divide" role="MULOP">/</XMTok>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                          </XMApp>
                          <XMTok fontsize="90%" role="CLOSE" stretchy="false">)</XMTok>
                        </XMWrap>
                      </XMDual>
                    </XMApp>
                  </XMath>
                </Math></td>
              <td align="center" border="t"><Math mode="inline" tex="d\times(r/m)" text="d * (r / m)" xml:id="A5.T2.m4">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="90%" meaning="times" role="MULOP">×</XMTok>
                      <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
                      <XMDual>
                        <XMRef idref="A5.T2.m4.1"/>
                        <XMWrap>
                          <XMTok fontsize="90%" role="OPEN" stretchy="false">(</XMTok>
                          <XMApp xml:id="A5.T2.m4.1">
                            <XMTok fontsize="90%" meaning="divide" role="MULOP">/</XMTok>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">r</XMTok>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                          </XMApp>
                          <XMTok fontsize="90%" role="CLOSE" stretchy="false">)</XMTok>
                        </XMWrap>
                      </XMDual>
                    </XMApp>
                  </XMath>
                </Math></td>
              <td align="center" border="t"><Math mode="inline" tex="(r/m)\times(d/m)" text="(r / m) * (d / m)" xml:id="A5.T2.m5">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="90%" meaning="times" role="MULOP">×</XMTok>
                      <XMDual>
                        <XMRef idref="A5.T2.m5.1"/>
                        <XMWrap>
                          <XMTok fontsize="90%" role="OPEN" stretchy="false">(</XMTok>
                          <XMApp xml:id="A5.T2.m5.1">
                            <XMTok fontsize="90%" meaning="divide" role="MULOP">/</XMTok>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">r</XMTok>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                          </XMApp>
                          <XMTok fontsize="90%" role="CLOSE" stretchy="false">)</XMTok>
                        </XMWrap>
                      </XMDual>
                      <XMDual>
                        <XMRef idref="A5.T2.m5.2"/>
                        <XMWrap>
                          <XMTok fontsize="90%" role="OPEN" stretchy="false">(</XMTok>
                          <XMApp xml:id="A5.T2.m5.2">
                            <XMTok fontsize="90%" meaning="divide" role="MULOP">/</XMTok>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                          </XMApp>
                          <XMTok fontsize="90%" role="CLOSE" stretchy="false">)</XMTok>
                        </XMWrap>
                      </XMDual>
                    </XMApp>
                  </XMath>
                </Math></td>
            </tr>
            <tr>
              <td align="center" thead="row"><text fontsize="90%">First MLP matrix</text></td>
              <td align="center"><Math mode="inline" tex="d\times(4d/m)" text="d * ((4 * d) / m)" xml:id="A5.T2.m6">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="90%" meaning="times" role="MULOP">×</XMTok>
                      <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
                      <XMDual>
                        <XMRef idref="A5.T2.m6.1"/>
                        <XMWrap>
                          <XMTok fontsize="90%" role="OPEN" stretchy="false">(</XMTok>
                          <XMApp xml:id="A5.T2.m6.1">
                            <XMTok fontsize="90%" meaning="divide" role="MULOP">/</XMTok>
                            <XMApp>
                              <XMTok meaning="times" role="MULOP">⁢</XMTok>
                              <XMTok fontsize="90%" meaning="4" role="NUMBER">4</XMTok>
                              <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
                            </XMApp>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                          </XMApp>
                          <XMTok fontsize="90%" role="CLOSE" stretchy="false">)</XMTok>
                        </XMWrap>
                      </XMDual>
                    </XMApp>
                  </XMath>
                </Math></td>
              <td align="center"><Math mode="inline" tex="d\times(r/m)" text="d * (r / m)" xml:id="A5.T2.m7">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="90%" meaning="times" role="MULOP">×</XMTok>
                      <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
                      <XMDual>
                        <XMRef idref="A5.T2.m7.1"/>
                        <XMWrap>
                          <XMTok fontsize="90%" role="OPEN" stretchy="false">(</XMTok>
                          <XMApp xml:id="A5.T2.m7.1">
                            <XMTok fontsize="90%" meaning="divide" role="MULOP">/</XMTok>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">r</XMTok>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                          </XMApp>
                          <XMTok fontsize="90%" role="CLOSE" stretchy="false">)</XMTok>
                        </XMWrap>
                      </XMDual>
                    </XMApp>
                  </XMath>
                </Math></td>
              <td align="center"><Math mode="inline" tex="(r/m)\times(4d/m)" text="(r / m) * ((4 * d) / m)" xml:id="A5.T2.m8">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="90%" meaning="times" role="MULOP">×</XMTok>
                      <XMDual>
                        <XMRef idref="A5.T2.m8.1"/>
                        <XMWrap>
                          <XMTok fontsize="90%" role="OPEN" stretchy="false">(</XMTok>
                          <XMApp xml:id="A5.T2.m8.1">
                            <XMTok fontsize="90%" meaning="divide" role="MULOP">/</XMTok>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">r</XMTok>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                          </XMApp>
                          <XMTok fontsize="90%" role="CLOSE" stretchy="false">)</XMTok>
                        </XMWrap>
                      </XMDual>
                      <XMDual>
                        <XMRef idref="A5.T2.m8.2"/>
                        <XMWrap>
                          <XMTok fontsize="90%" role="OPEN" stretchy="false">(</XMTok>
                          <XMApp xml:id="A5.T2.m8.2">
                            <XMTok fontsize="90%" meaning="divide" role="MULOP">/</XMTok>
                            <XMApp>
                              <XMTok meaning="times" role="MULOP">⁢</XMTok>
                              <XMTok fontsize="90%" meaning="4" role="NUMBER">4</XMTok>
                              <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
                            </XMApp>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                          </XMApp>
                          <XMTok fontsize="90%" role="CLOSE" stretchy="false">)</XMTok>
                        </XMWrap>
                      </XMDual>
                    </XMApp>
                  </XMath>
                </Math></td>
            </tr>
            <tr>
              <td align="center" thead="row"><text fontsize="90%">Second MLP matrix</text></td>
              <td align="center"><Math mode="inline" tex="(4d/m)\times d" text="((4 * d) / m) * d" xml:id="A5.T2.m9">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="90%" meaning="times" role="MULOP">×</XMTok>
                      <XMDual>
                        <XMRef idref="A5.T2.m9.1"/>
                        <XMWrap>
                          <XMTok fontsize="90%" role="OPEN" stretchy="false">(</XMTok>
                          <XMApp xml:id="A5.T2.m9.1">
                            <XMTok fontsize="90%" meaning="divide" role="MULOP">/</XMTok>
                            <XMApp>
                              <XMTok meaning="times" role="MULOP">⁢</XMTok>
                              <XMTok fontsize="90%" meaning="4" role="NUMBER">4</XMTok>
                              <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
                            </XMApp>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                          </XMApp>
                          <XMTok fontsize="90%" role="CLOSE" stretchy="false">)</XMTok>
                        </XMWrap>
                      </XMDual>
                      <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
                    </XMApp>
                  </XMath>
                </Math></td>
              <td align="center"><Math mode="inline" tex="(4d/m)\times(r/m)" text="((4 * d) / m) * (r / m)" xml:id="A5.T2.m10">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="90%" meaning="times" role="MULOP">×</XMTok>
                      <XMDual>
                        <XMRef idref="A5.T2.m10.1"/>
                        <XMWrap>
                          <XMTok fontsize="90%" role="OPEN" stretchy="false">(</XMTok>
                          <XMApp xml:id="A5.T2.m10.1">
                            <XMTok fontsize="90%" meaning="divide" role="MULOP">/</XMTok>
                            <XMApp>
                              <XMTok meaning="times" role="MULOP">⁢</XMTok>
                              <XMTok fontsize="90%" meaning="4" role="NUMBER">4</XMTok>
                              <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
                            </XMApp>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                          </XMApp>
                          <XMTok fontsize="90%" role="CLOSE" stretchy="false">)</XMTok>
                        </XMWrap>
                      </XMDual>
                      <XMDual>
                        <XMRef idref="A5.T2.m10.2"/>
                        <XMWrap>
                          <XMTok fontsize="90%" role="OPEN" stretchy="false">(</XMTok>
                          <XMApp xml:id="A5.T2.m10.2">
                            <XMTok fontsize="90%" meaning="divide" role="MULOP">/</XMTok>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">r</XMTok>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                          </XMApp>
                          <XMTok fontsize="90%" role="CLOSE" stretchy="false">)</XMTok>
                        </XMWrap>
                      </XMDual>
                    </XMApp>
                  </XMath>
                </Math></td>
              <td align="center"><Math mode="inline" tex="(r/m)\times d" text="(r / m) * d" xml:id="A5.T2.m11">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="90%" meaning="times" role="MULOP">×</XMTok>
                      <XMDual>
                        <XMRef idref="A5.T2.m11.1"/>
                        <XMWrap>
                          <XMTok fontsize="90%" role="OPEN" stretchy="false">(</XMTok>
                          <XMApp xml:id="A5.T2.m11.1">
                            <XMTok fontsize="90%" meaning="divide" role="MULOP">/</XMTok>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">r</XMTok>
                            <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                          </XMApp>
                          <XMTok fontsize="90%" role="CLOSE" stretchy="false">)</XMTok>
                        </XMWrap>
                      </XMDual>
                      <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
                    </XMApp>
                  </XMath>
                </Math></td>
            </tr>
            <tr>
              <td align="center" border="bb" thead="row"><text fontsize="90%">Total size</text></td>
              <td align="center" border="bb"><Math mode="inline" tex="12d^{2}/m" text="(12 * d ^ 2) / m" xml:id="A5.T2.m12">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="90%" meaning="divide" role="MULOP">/</XMTok>
                      <XMApp>
                        <XMTok meaning="times" role="MULOP">⁢</XMTok>
                        <XMTok fontsize="90%" meaning="12" role="NUMBER">12</XMTok>
                        <XMApp>
                          <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                          <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
                          <XMTok fontsize="63%" meaning="2" role="NUMBER">2</XMTok>
                        </XMApp>
                      </XMApp>
                      <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                    </XMApp>
                  </XMath>
                </Math></td>
              <td align="center" border="bb"><Math mode="inline" tex="(5drm+4dr)/m^{2}" text="(5 * d * r * m + 4 * d * r) / m ^ 2" xml:id="A5.T2.m13">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="90%" meaning="divide" role="MULOP">/</XMTok>
                      <XMDual>
                        <XMRef idref="A5.T2.m13.1"/>
                        <XMWrap>
                          <XMTok fontsize="90%" role="OPEN" stretchy="false">(</XMTok>
                          <XMApp xml:id="A5.T2.m13.1">
                            <XMTok fontsize="90%" meaning="plus" role="ADDOP">+</XMTok>
                            <XMApp>
                              <XMTok meaning="times" role="MULOP">⁢</XMTok>
                              <XMTok fontsize="90%" meaning="5" role="NUMBER">5</XMTok>
                              <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
                              <XMTok font="italic" fontsize="90%" role="UNKNOWN">r</XMTok>
                              <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                            </XMApp>
                            <XMApp>
                              <XMTok meaning="times" role="MULOP">⁢</XMTok>
                              <XMTok fontsize="90%" meaning="4" role="NUMBER">4</XMTok>
                              <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
                              <XMTok font="italic" fontsize="90%" role="UNKNOWN">r</XMTok>
                            </XMApp>
                          </XMApp>
                          <XMTok fontsize="90%" role="CLOSE" stretchy="false">)</XMTok>
                        </XMWrap>
                      </XMDual>
                      <XMApp>
                        <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                        <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                        <XMTok fontsize="63%" meaning="2" role="NUMBER">2</XMTok>
                      </XMApp>
                    </XMApp>
                  </XMath>
                </Math></td>
              <td align="center" border="bb"><Math mode="inline" tex="(drm+8dr)/m^{2}" text="(d * r * m + 8 * d * r) / m ^ 2" xml:id="A5.T2.m14">
                  <XMath>
                    <XMApp>
                      <XMTok fontsize="90%" meaning="divide" role="MULOP">/</XMTok>
                      <XMDual>
                        <XMRef idref="A5.T2.m14.1"/>
                        <XMWrap>
                          <XMTok fontsize="90%" role="OPEN" stretchy="false">(</XMTok>
                          <XMApp xml:id="A5.T2.m14.1">
                            <XMTok fontsize="90%" meaning="plus" role="ADDOP">+</XMTok>
                            <XMApp>
                              <XMTok meaning="times" role="MULOP">⁢</XMTok>
                              <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
                              <XMTok font="italic" fontsize="90%" role="UNKNOWN">r</XMTok>
                              <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                            </XMApp>
                            <XMApp>
                              <XMTok meaning="times" role="MULOP">⁢</XMTok>
                              <XMTok fontsize="90%" meaning="8" role="NUMBER">8</XMTok>
                              <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
                              <XMTok font="italic" fontsize="90%" role="UNKNOWN">r</XMTok>
                            </XMApp>
                          </XMApp>
                          <XMTok fontsize="90%" role="CLOSE" stretchy="false">)</XMTok>
                        </XMWrap>
                      </XMDual>
                      <XMApp>
                        <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                        <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                        <XMTok fontsize="63%" meaning="2" role="NUMBER">2</XMTok>
                      </XMApp>
                    </XMApp>
                  </XMath>
                </Math></td>
            </tr>
          </tbody>
        </tabular>
        <toccaption class="ltx_centering"><tag close=" "><text fontsize="90%">2</text></tag><text fontsize="90%">We analyze the amount of data sent from each GPU on a given machine to GPUs on other machines, in the case where we shard the parameters among the </text><Math mode="inline" tex="m" text="m" xml:id="A5.T2.m15">
            <XMath>
              <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
            </XMath>
          </Math><text fontsize="90%"> GPUs on each machine. Here, </text><Math mode="inline" tex="r" text="r" xml:id="A5.T2.m16">
            <XMath>
              <XMTok font="italic" fontsize="90%" role="UNKNOWN">r</XMTok>
            </XMath>
          </Math><text fontsize="90%"> denotes the rank used for compression, and </text><Math mode="inline" tex="d" text="d" xml:id="A5.T2.m17">
            <XMath>
              <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
            </XMath>
          </Math><text fontsize="90%"> the transformer hidden size. The compression ratio is given by the sum of the last two columns of the last row, divided by the first column of the last row. This comes out to </text><Math mode="inline" tex="r(m+2)/(2dm)" text="(r * (m + 2)) / (2 * d * m)" xml:id="A5.T2.m18">
            <XMath>
              <XMApp>
                <XMTok fontsize="90%" meaning="divide" role="MULOP">/</XMTok>
                <XMApp>
                  <XMTok meaning="times" role="MULOP">⁢</XMTok>
                  <XMTok font="italic" fontsize="90%" role="UNKNOWN">r</XMTok>
                  <XMDual>
                    <XMRef idref="A5.T2.m18.1"/>
                    <XMWrap>
                      <XMTok fontsize="90%" role="OPEN" stretchy="false">(</XMTok>
                      <XMApp xml:id="A5.T2.m18.1">
                        <XMTok fontsize="90%" meaning="plus" role="ADDOP">+</XMTok>
                        <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                        <XMTok fontsize="90%" meaning="2" role="NUMBER">2</XMTok>
                      </XMApp>
                      <XMTok fontsize="90%" role="CLOSE" stretchy="false">)</XMTok>
                    </XMWrap>
                  </XMDual>
                </XMApp>
                <XMDual>
                  <XMRef idref="A5.T2.m18.2"/>
                  <XMWrap>
                    <XMTok fontsize="90%" role="OPEN" stretchy="false">(</XMTok>
                    <XMApp xml:id="A5.T2.m18.2">
                      <XMTok meaning="times" role="MULOP">⁢</XMTok>
                      <XMTok fontsize="90%" meaning="2" role="NUMBER">2</XMTok>
                      <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
                      <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                    </XMApp>
                    <XMTok fontsize="90%" role="CLOSE" stretchy="false">)</XMTok>
                  </XMWrap>
                </XMDual>
              </XMApp>
            </XMath>
          </Math><text fontsize="90%">, which for </text><Math mode="inline" tex="m=8" text="m = 8" xml:id="A5.T2.m19">
            <XMath>
              <XMApp>
                <XMTok fontsize="90%" meaning="equals" role="RELOP">=</XMTok>
                <XMTok font="italic" fontsize="90%" role="UNKNOWN">m</XMTok>
                <XMTok fontsize="90%" meaning="8" role="NUMBER">8</XMTok>
              </XMApp>
            </XMath>
          </Math><text fontsize="90%"> is </text><Math mode="inline" tex="5r/8d" text="((5 * r) / 8) * d" xml:id="A5.T2.m20">
            <XMath>
              <XMApp>
                <XMTok meaning="times" role="MULOP">⁢</XMTok>
                <XMApp>
                  <XMTok fontsize="90%" meaning="divide" role="MULOP">/</XMTok>
                  <XMApp>
                    <XMTok meaning="times" role="MULOP">⁢</XMTok>
                    <XMTok fontsize="90%" meaning="5" role="NUMBER">5</XMTok>
                    <XMTok font="italic" fontsize="90%" role="UNKNOWN">r</XMTok>
                  </XMApp>
                  <XMTok fontsize="90%" meaning="8" role="NUMBER">8</XMTok>
                </XMApp>
                <XMTok font="italic" fontsize="90%" role="UNKNOWN">d</XMTok>
              </XMApp>
            </XMath>
          </Math><text fontsize="90%">.</text></toccaption>
        <caption class="ltx_centering" fontsize="90%"><tag close=": ">Table 2</tag>We analyze the amount of data sent from each GPU on a given machine to GPUs on other machines, in the case where we shard the parameters among the <Math mode="inline" tex="m" text="m" xml:id="A5.T2.m21">
            <XMath>
              <XMTok font="italic" role="UNKNOWN">m</XMTok>
            </XMath>
          </Math> GPUs on each machine. Here, <Math mode="inline" tex="r" text="r" xml:id="A5.T2.m22">
            <XMath>
              <XMTok font="italic" role="UNKNOWN">r</XMTok>
            </XMath>
          </Math> denotes the rank used for compression, and <Math mode="inline" tex="d" text="d" xml:id="A5.T2.m23">
            <XMath>
              <XMTok font="italic" role="UNKNOWN">d</XMTok>
            </XMath>
          </Math> the transformer hidden size. The compression ratio is given by the sum of the last two columns of the last row, divided by the first column of the last row. This comes out to <Math mode="inline" tex="r(m+2)/(2dm)" text="(r * (m + 2)) / (2 * d * m)" xml:id="A5.T2.m24">
            <XMath>
              <XMApp>
                <XMTok meaning="divide" role="MULOP">/</XMTok>
                <XMApp>
                  <XMTok fontsize="111%" meaning="times" role="MULOP">⁢</XMTok>
                  <XMTok font="italic" role="UNKNOWN">r</XMTok>
                  <XMDual>
                    <XMRef idref="A5.T2.m24.1"/>
                    <XMWrap>
                      <XMTok role="OPEN" stretchy="false">(</XMTok>
                      <XMApp xml:id="A5.T2.m24.1">
                        <XMTok meaning="plus" role="ADDOP">+</XMTok>
                        <XMTok font="italic" role="UNKNOWN">m</XMTok>
                        <XMTok meaning="2" role="NUMBER">2</XMTok>
                      </XMApp>
                      <XMTok role="CLOSE" stretchy="false">)</XMTok>
                    </XMWrap>
                  </XMDual>
                </XMApp>
                <XMDual>
                  <XMRef idref="A5.T2.m24.2"/>
                  <XMWrap>
                    <XMTok role="OPEN" stretchy="false">(</XMTok>
                    <XMApp xml:id="A5.T2.m24.2">
                      <XMTok fontsize="111%" meaning="times" role="MULOP">⁢</XMTok>
                      <XMTok meaning="2" role="NUMBER">2</XMTok>
                      <XMTok font="italic" role="UNKNOWN">d</XMTok>
                      <XMTok font="italic" role="UNKNOWN">m</XMTok>
                    </XMApp>
                    <XMTok role="CLOSE" stretchy="false">)</XMTok>
                  </XMWrap>
                </XMDual>
              </XMApp>
            </XMath>
          </Math>, which for <Math mode="inline" tex="m=8" text="m = 8" xml:id="A5.T2.m25">
            <XMath>
              <XMApp>
                <XMTok meaning="equals" role="RELOP">=</XMTok>
                <XMTok font="italic" role="UNKNOWN">m</XMTok>
                <XMTok meaning="8" role="NUMBER">8</XMTok>
              </XMApp>
            </XMath>
          </Math> is <Math mode="inline" tex="5r/8d" text="((5 * r) / 8) * d" xml:id="A5.T2.m26">
            <XMath>
              <XMApp>
                <XMTok fontsize="111%" meaning="times" role="MULOP">⁢</XMTok>
                <XMApp>
                  <XMTok meaning="divide" role="MULOP">/</XMTok>
                  <XMApp>
                    <XMTok fontsize="111%" meaning="times" role="MULOP">⁢</XMTok>
                    <XMTok meaning="5" role="NUMBER">5</XMTok>
                    <XMTok font="italic" role="UNKNOWN">r</XMTok>
                  </XMApp>
                  <XMTok meaning="8" role="NUMBER">8</XMTok>
                </XMApp>
                <XMTok font="italic" role="UNKNOWN">d</XMTok>
              </XMApp>
            </XMath>
          </Math>.</caption>
      </table>
      <para xml:id="A5.SS1.p1">
        <p>Gradient compression uses the factorization <Math mode="inline" tex="G\approx PQ^{t}" text="G approximately-equals P * Q ^ t" xml:id="A5.SS1.p1.m1">
            <XMath>
              <XMApp>
                <XMTok meaning="approximately-equals" name="approx" role="RELOP">≈</XMTok>
                <XMTok font="italic" role="UNKNOWN">G</XMTok>
                <XMApp>
                  <XMTok meaning="times" role="MULOP">⁢</XMTok>
                  <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  <XMApp>
                    <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                    <XMTok font="italic" role="UNKNOWN">Q</XMTok>
                    <XMTok font="italic" fontsize="70%" role="UNKNOWN">t</XMTok>
                  </XMApp>
                </XMApp>
              </XMApp>
            </XMath>
          </Math>, where <Math mode="inline" tex="P" text="P" xml:id="A5.SS1.p1.m2">
            <XMath>
              <XMTok font="italic" role="UNKNOWN">P</XMTok>
            </XMath>
          </Math> and <Math mode="inline" tex="Q" text="Q" xml:id="A5.SS1.p1.m3">
            <XMath>
              <XMTok font="italic" role="UNKNOWN">Q</XMTok>
            </XMath>
          </Math> both have rank <Math mode="inline" tex="r" text="r" xml:id="A5.SS1.p1.m4">
            <XMath>
              <XMTok font="italic" role="UNKNOWN">r</XMTok>
            </XMath>
          </Math>. Instead of using a single all-reduce to transmit <Math mode="inline" tex="G" text="G" xml:id="A5.SS1.p1.m5">
            <XMath>
              <XMTok font="italic" role="UNKNOWN">G</XMTok>
            </XMath>
          </Math>, we use two, smaller all-reduces to transmit both <Math mode="inline" tex="P" text="P" xml:id="A5.SS1.p1.m6">
            <XMath>
              <XMTok font="italic" role="UNKNOWN">P</XMTok>
            </XMath>
          </Math> and <Math mode="inline" tex="Q^{t}" text="Q ^ t" xml:id="A5.SS1.p1.m7">
            <XMath>
              <XMApp>
                <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                <XMTok font="italic" role="UNKNOWN">Q</XMTok>
                <XMTok font="italic" fontsize="70%" role="UNKNOWN">t</XMTok>
              </XMApp>
            </XMath>
          </Math> in succession. Hence, the compression ratio is the sum of the sizes of the <Math mode="inline" tex="P" text="P" xml:id="A5.SS1.p1.m8">
            <XMath>
              <XMTok font="italic" role="UNKNOWN">P</XMTok>
            </XMath>
          </Math> and <Math mode="inline" tex="Q" text="Q" xml:id="A5.SS1.p1.m9">
            <XMath>
              <XMTok font="italic" role="UNKNOWN">Q</XMTok>
            </XMath>
          </Math> matrices divided by the sum of the sizes of the <Math mode="inline" tex="G" text="G" xml:id="A5.SS1.p1.m10">
            <XMath>
              <XMTok font="italic" role="UNKNOWN">G</XMTok>
            </XMath>
          </Math> matrices. We shard along axis 1 for all parameters except for the second MLP matrix. The derivation of the compression ratio in our setup is given in Table <ref labelref="LABEL:tab:cmp_ratio"/>. We note that the choice of shard axis changes the compression ratio for the MLP matrices. Finally, this analysis excludes the embeddings, unembeddings, gains, and biases, for which we do not use compression. The total fraction of the bandwidth used by these parameters becomes smaller as the model size is increased.</p>
      </para>
    </subsection>
    <subsection inlist="toc" labels="LABEL:sec:dist_train_impl" xml:id="A5.SS2">
      <tags>
        <tag>E.2</tag>
        <tag role="autoref">subsection E.2</tag>
        <tag role="refnum">E.2</tag>
        <tag role="typerefnum">§E.2</tag>
      </tags>
      <title><tag close=" ">E.2</tag>Implementation Details</title>
      <para xml:id="A5.SS2.p1">
        <p>We describe the steps in our implementation of PowerSGD in detail, since these details were crucial in getting it to work efficiently and reliably at billion-parameter scale.</p>
        <enumerate xml:id="A5.I1">
          <item xml:id="A5.I1.i1">
            <tags>
              <tag>1.</tag>
              <tag role="autoref">item 1</tag>
              <tag role="refnum">1</tag>
              <tag role="typerefnum">item 1</tag>
            </tags>
            <para xml:id="A5.I1.i1.p1">
              <p>Our training setup uses a combination of parameter sharding and gradient compression, as described in Section <ref labelref="LABEL:sec:dist_opt"/>. During backpropagation, while recomputing the activations and computing the gradients for the current resblock, we prefetch the parameters for the preceding resblock using all-gather. Once each GPU has computed the gradient with respect to a full parameter matrix, we compute the average of the slice of the gradient corresponding to the GPU’s parameter shard, and discard the full gradient immediately to conserve memory. This average is taken over all of the GPUs on a machine using reduce-scatter.</p>
            </para>
          </item>
          <item xml:id="A5.I1.i2">
            <tags>
              <tag>2.</tag>
              <tag role="autoref">item 2</tag>
              <tag role="refnum">2</tag>
              <tag role="typerefnum">item 2</tag>
            </tags>
            <para xml:id="A5.I1.i2.p1">
              <p>If there are no nonfinite values in the result of the reduce-scatter (which could be caused by overflow in backpropagation or the reduce-scatter), we divide the result by the resblock’s gradient scale, and add it to the error buffer (i.e., the buffer used for error correction). Otherwise, we do nothing and proceed with backpropagation; a single nonfinite value in the gradient means that the entire update will be skipped, which happens about 5% of the time. The error buffer uses the same 1-6-9 format used for the Adam mean, which we describe in Section <ref labelref="LABEL:sec:xf_train"/>; the larger exponent range ensures that this division does not result in underflow. Adding the gradients directly to the error buffers avoids redundantly allocating another set of buffers of size equal to the parameter shard gradients.</p>
            </para>
          </item>
          <item xml:id="A5.I1.i3">
            <tags>
              <tag>3.</tag>
              <tag role="autoref">item 3</tag>
              <tag role="refnum">3</tag>
              <tag role="typerefnum">item 3</tag>
            </tags>
            <para xml:id="A5.I1.i3.p1">
              <p>Once the reduce-scatter operations for the resblock have finished, we schedule the operations to compute the <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i3.p1.m1">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> matrices from the errors buffers and the <Math mode="inline" tex="Q" text="Q" xml:id="A5.I1.i3.p1.m2">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">Q</XMTok>
                  </XMath>
                </Math> matrices, whose values are fixed at the start of training (see Section <ref labelref="LABEL:sec:dist_opt"/>). Both the <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i3.p1.m3">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> and <Math mode="inline" tex="Q" text="Q" xml:id="A5.I1.i3.p1.m4">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">Q</XMTok>
                  </XMath>
                </Math> matrices are stored in 1-6-9 format and have their values scaled by predetermined constants, as discussed in Section <ref labelref="LABEL:sec:mp_train_guidelines"/>.</p>
            </para>
          </item>
          <item xml:id="A5.I1.i4">
            <tags>
              <tag>4.</tag>
              <tag role="autoref">item 4</tag>
              <tag role="refnum">4</tag>
              <tag role="typerefnum">item 4</tag>
            </tags>
            <para xml:id="A5.I1.i4.p1">
              <p>Once each GPU has computed the <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i4.p1.m1">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> matrices for the parameter shards in a resblock, they are averaged with the <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i4.p1.m2">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> matrices from the GPUs with the same ordinal on all other machines, using a single, grouped all-reduce operation. This all-reduce is carried out in the 1-6-9 format, using a custom kernel. The grouping results in better bandwidth utilization, since it avoids scheduling many all-reduce calls for smaller, individual parameters, each of which carries some overhead. We clamp any infinities in the results of the all-reduce to the maximum value of the 1-6-9 format (which is slightly less than 16), retaining the sign. With our choice of scaling factors for the <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i4.p1.m3">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> and <Math mode="inline" tex="Q" text="Q" xml:id="A5.I1.i4.p1.m4">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">Q</XMTok>
                  </XMath>
                </Math> matrices, this clamping happens very rarely.</p>
            </para>
          </item>
          <item xml:id="A5.I1.i5">
            <tags>
              <tag>5.</tag>
              <tag role="autoref">item 5</tag>
              <tag role="refnum">5</tag>
              <tag role="typerefnum">item 5</tag>
            </tags>
            <para xml:id="A5.I1.i5.p1">
              <p>Once the all-reduce operation for the <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i5.p1.m1">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> matrices for a resblock have finished, we orthogonalize the columns of the resulting matrices. We use a custom Householder orthogonalization kernel rather than Gram-Schmidt, as we found the latter to be numerically unstable. We also add <Math mode="inline" tex="\epsilon I_{m\times r}" text="epsilon * I _ (m * r)" xml:id="A5.I1.i5.p1.m2">
                  <XMath>
                    <XMApp>
                      <XMTok meaning="times" role="MULOP">⁢</XMTok>
                      <XMTok font="italic" name="epsilon" role="UNKNOWN">ϵ</XMTok>
                      <XMApp>
                        <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                        <XMTok font="italic" role="UNKNOWN">I</XMTok>
                        <XMApp>
                          <XMTok fontsize="70%" meaning="times" role="MULOP">×</XMTok>
                          <XMTok font="italic" fontsize="70%" role="UNKNOWN">m</XMTok>
                          <XMTok font="italic" fontsize="70%" role="UNKNOWN">r</XMTok>
                        </XMApp>
                      </XMApp>
                    </XMApp>
                  </XMath>
                </Math> to <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i5.p1.m3">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> in order to ensure that the result is not near rank-deficient, where <Math mode="inline" tex="\epsilon=10^{-6}" text="epsilon = 10 ^ (- 6)" xml:id="A5.I1.i5.p1.m4">
                  <XMath>
                    <XMApp>
                      <XMTok meaning="equals" role="RELOP">=</XMTok>
                      <XMTok font="italic" name="epsilon" role="UNKNOWN">ϵ</XMTok>
                      <XMApp>
                        <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                        <XMTok meaning="10" role="NUMBER">10</XMTok>
                        <XMApp>
                          <XMTok fontsize="70%" meaning="minus" role="ADDOP">-</XMTok>
                          <XMTok fontsize="70%" meaning="6" role="NUMBER">6</XMTok>
                        </XMApp>
                      </XMApp>
                    </XMApp>
                  </XMath>
                </Math>. Here, <Math mode="inline" tex="I_{m\times r}" text="I _ (m * r)" xml:id="A5.I1.i5.p1.m5">
                  <XMath>
                    <XMApp>
                      <XMTok role="SUBSCRIPTOP" scriptpos="post1"/>
                      <XMTok font="italic" role="UNKNOWN">I</XMTok>
                      <XMApp>
                        <XMTok fontsize="70%" meaning="times" role="MULOP">×</XMTok>
                        <XMTok font="italic" fontsize="70%" role="UNKNOWN">m</XMTok>
                        <XMTok font="italic" fontsize="70%" role="UNKNOWN">r</XMTok>
                      </XMApp>
                    </XMApp>
                  </XMath>
                </Math> is a rectangular matrix of the same size as the <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i5.p1.m6">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> matrix to which it is added; it contains the <Math mode="inline" tex="r\times r" text="r * r" xml:id="A5.I1.i5.p1.m7">
                  <XMath>
                    <XMApp>
                      <XMTok meaning="times" role="MULOP">×</XMTok>
                      <XMTok font="italic" role="UNKNOWN">r</XMTok>
                      <XMTok font="italic" role="UNKNOWN">r</XMTok>
                    </XMApp>
                  </XMath>
                </Math> identity matrix and has zeros elsewhere. The orthogonalizalied <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i5.p1.m8">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> matrices are stored in 1-6-9 format, but without scaling.</p>
            </para>
          </item>
          <item xml:id="A5.I1.i6">
            <tags>
              <tag>6.</tag>
              <tag role="autoref">item 6</tag>
              <tag role="refnum">6</tag>
              <tag role="typerefnum">item 6</tag>
            </tags>
            <para xml:id="A5.I1.i6.p1">
              <p>Once the <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i6.p1.m1">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> matrices for a resblock have been orthogonalized, we schedule the operations to compute the new <Math mode="inline" tex="Q" text="Q" xml:id="A5.I1.i6.p1.m2">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">Q</XMTok>
                  </XMath>
                </Math> matrices from the error buffers and the <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i6.p1.m3">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> matrices.</p>
            </para>
          </item>
          <item xml:id="A5.I1.i7">
            <tags>
              <tag>7.</tag>
              <tag role="autoref">item 7</tag>
              <tag role="refnum">7</tag>
              <tag role="typerefnum">item 7</tag>
            </tags>
            <para xml:id="A5.I1.i7.p1">
              <p>Once the new <Math mode="inline" tex="Q" text="Q" xml:id="A5.I1.i7.p1.m1">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">Q</XMTok>
                  </XMath>
                </Math> matrices for a resblock have been computed, we schedule another grouped all-reduce, similar to what we did for the <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i7.p1.m2">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> matrices. As in step (4), we clamp all infinities in the results of the all-reduce to the maximum value of the 1-6-9 format, retaining the sign. The error buffers for the resblock have now been decomposed into low-rank factors <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i7.p1.m3">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> and <Math mode="inline" tex="Q^{t}" text="Q ^ t" xml:id="A5.I1.i7.p1.m4">
                  <XMath>
                    <XMApp>
                      <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                      <XMTok font="italic" role="UNKNOWN">Q</XMTok>
                      <XMTok font="italic" fontsize="70%" role="UNKNOWN">t</XMTok>
                    </XMApp>
                  </XMath>
                </Math>.</p>
            </para>
          </item>
          <item xml:id="A5.I1.i8">
            <tags>
              <tag>8.</tag>
              <tag role="autoref">item 8</tag>
              <tag role="refnum">8</tag>
              <tag role="typerefnum">item 8</tag>
            </tags>
            <para xml:id="A5.I1.i8.p1">
              <p>The gradients for all parameters that are not compressed are grouped together into a single, 32-bit precision all-reduce. Section <ref labelref="LABEL:sec:mp_train_guidelines"/> explains why we use 32-bit precision for these parameters and their gradients.</p>
            </para>
          </item>
          <item xml:id="A5.I1.i9">
            <tags>
              <tag>9.</tag>
              <tag role="autoref">item 9</tag>
              <tag role="refnum">9</tag>
              <tag role="typerefnum">item 9</tag>
            </tags>
            <para xml:id="A5.I1.i9.p1">
              <p>Once all GPUs on a machine have finished steps (7) and (8) for every resblock in the model, the values of the <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i9.p1.m1">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> and <Math mode="inline" tex="Q" text="Q" xml:id="A5.I1.i9.p1.m2">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">Q</XMTok>
                  </XMath>
                </Math> matrices for the same parameter shard on all machines will be identical. We then compute the global gradient norm, which is the sum of two quantities: (a) the sum of the squared Frobenius norms of the <Math mode="inline" tex="Q" text="Q" xml:id="A5.I1.i9.p1.m3">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">Q</XMTok>
                  </XMath>
                </Math> matrices over all of the parameter shards on a machine, and (b) the sum of the squared norms of the gradients for the parameter shards that do not use compression, taken over all such parameter shards on a machine. We need to compute this value for gradient clipping (see Section <ref labelref="LABEL:sec:xf_train"/><!--  %****␣main.tex␣Line␣600␣**** -->).</p>
            </para>
          </item>
          <item xml:id="A5.I1.i10">
            <tags>
              <tag>10.</tag>
              <tag role="autoref">item 10</tag>
              <tag role="refnum">10</tag>
              <tag role="typerefnum">item 10</tag>
            </tags>
            <para xml:id="A5.I1.i10.p1">
              <p>While computing the global norm, we also synchronize the information from step (2) about which parameter shard gradients contained nonfinite values after the reduce-scatter. After doing this, we have two pieces of information for each parameter shard: (a) whether its error buffer from step (2) contains nonfinite values on the current GPU, and (b) whether <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i10.p1.m1">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> or <Math mode="inline" tex="Q" text="Q" xml:id="A5.I1.i10.p1.m2">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">Q</XMTok>
                  </XMath>
                </Math> contains nonfinite values. We cannot rely on the values of the <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i10.p1.m3">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> and <Math mode="inline" tex="Q" text="Q" xml:id="A5.I1.i10.p1.m4">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">Q</XMTok>
                  </XMath>
                </Math> matrices to determine (b), since we clamp infinities as described in step (4). If we find that the gradient with respect to any parameter shard on the machine contains nonfinite values, then we set the global norm to infinity.</p>
            </para>
          </item>
          <item xml:id="A5.I1.i11">
            <tags>
              <tag>11.</tag>
              <tag role="autoref">item 11</tag>
              <tag role="refnum">11</tag>
              <tag role="typerefnum">item 11</tag>
            </tags>
            <para xml:id="A5.I1.i11.p1">
              <p>Once all of the all-reduces have finished and the global norm has been computed, we can apply the parameter updates. Like backpropagation, the parameter updates proceed resblock-by-resblock. The first step is to compute the decompressed gradients by forming the product <Math mode="inline" tex="PQ^{t}" text="P * Q ^ t" xml:id="A5.I1.i11.p1.m1">
                  <XMath>
                    <XMApp>
                      <XMTok meaning="times" role="MULOP">⁢</XMTok>
                      <XMTok font="italic" role="UNKNOWN">P</XMTok>
                      <XMApp>
                        <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                        <XMTok font="italic" role="UNKNOWN">Q</XMTok>
                        <XMTok font="italic" fontsize="70%" role="UNKNOWN">t</XMTok>
                      </XMApp>
                    </XMApp>
                  </XMath>
                </Math> for all parameters in a given resblock. To avoid overflow, these products are computed in 32-bit precision. We can then apply the Adam update to the parameters using the decompressed gradients and the global norm computed in step (9). If the global norm is not finite, then the update to the parameters and Adam moments is skipped. We note that the decompressed gradient must be divided by the scale of the <Math mode="inline" tex="Q" text="Q" xml:id="A5.I1.i11.p1.m2">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">Q</XMTok>
                  </XMath>
                </Math> matrix (the <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i11.p1.m3">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> matrix is stored without scaling after orthogonalization).</p>
            </para>
          </item>
          <item xml:id="A5.I1.i12">
            <tags>
              <tag>12.</tag>
              <tag role="autoref">item 12</tag>
              <tag role="refnum">12</tag>
              <tag role="typerefnum">item 12</tag>
            </tags>
            <para xml:id="A5.I1.i12.p1">
              <p>The second step is the update to the error buffers. First, we use the results from step (10) to check if the <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i12.p1.m1">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> and <Math mode="inline" tex="Q" text="Q" xml:id="A5.I1.i12.p1.m2">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">Q</XMTok>
                  </XMath>
                </Math> matrices for a given parameter shard contain only finite values. If this is the case, then we divide the decompressed gradient by the total number of machines, and subtract it from the current value for the error buffer. This sets the error buffer to the difference between the “local” gradient averaged over the GPUs on the machine using reduce-scatter, and the “remote” decompressed gradient (i.e., the “error”). If either <Math mode="inline" tex="P" text="P" xml:id="A5.I1.i12.p1.m3">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> or <Math mode="inline" tex="Q" text="Q" xml:id="A5.I1.i12.p1.m4">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">Q</XMTok>
                  </XMath>
                </Math> contains nonfinite values, then we check if the error buffer computed in step (2) contains only finite values. If it does, then we preserve its value and do nothing. If it does not, then we set it to zero. The purpose of this tedious logic is to set an error buffer to zero only when we must do so, because it has been contaminated with nonfinite values. We found that error buffers getting set to zero too frequently by gradient scaling events leads to performance regressions.</p>
            </para>
          </item>
          <item xml:id="A5.I1.i13">
            <tags>
              <tag>13.</tag>
              <tag role="autoref">item 13</tag>
              <tag role="refnum">13</tag>
              <tag role="typerefnum">item 13</tag>
            </tags>
            <para xml:id="A5.I1.i13.p1">
              <p>The parameter shards whose gradients are not compressed are updated separately.</p>
            </para>
          </item>
        </enumerate>
      </para>
      <para xml:id="A5.SS2.p2">
        <p>We also note the following important optimizations:</p>
        <enumerate xml:id="A5.I2">
          <item xml:id="A5.I2.i1">
            <tags>
              <tag>1.</tag>
              <tag role="autoref">item 1</tag>
              <tag role="refnum">1</tag>
              <tag role="typerefnum">item 1</tag>
            </tags>
            <para xml:id="A5.I2.i1.p1">
              <p>There are several opportunities for overlap between compute and communication in the above steps. For example, while we are running step (2) for resblock <Math mode="inline" tex="i" text="i" xml:id="A5.I2.i1.p1.m1">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">i</XMTok>
                  </XMath>
                </Math>, we can proceed to steps (3)–(8) for all resblocks <Math mode="inline" tex="j&gt;i" text="j &gt; i" xml:id="A5.I2.i1.p1.m2">
                  <XMath>
                    <XMApp>
                      <XMTok meaning="greater-than" role="RELOP">&gt;</XMTok>
                      <XMTok font="italic" role="UNKNOWN">j</XMTok>
                      <XMTok font="italic" role="UNKNOWN">i</XMTok>
                    </XMApp>
                  </XMath>
                </Math>. Exploiting opportunities for overlap is necessary to achieve good performance.</p>
            </para>
          </item>
          <item xml:id="A5.I2.i2">
            <tags>
              <tag>2.</tag>
              <tag role="autoref">item 2</tag>
              <tag role="refnum">2</tag>
              <tag role="typerefnum">item 2</tag>
            </tags>
            <para xml:id="A5.I2.i2.p1">
              <p>We throttle specific operations that are liable to exhaust all available memory. For example, we only prefetch the parameters from the preceding resblock when the reduce-scatter operations have finished for the current one. Otherwise, we risk running out of memory by holding on to the full parameters. We also throttle the Adam updates, so that we do not decompress all of the gradients at once.</p>
            </para>
          </item>
          <item xml:id="A5.I2.i3">
            <tags>
              <tag>3.</tag>
              <tag role="autoref">item 3</tag>
              <tag role="refnum">3</tag>
              <tag role="typerefnum">item 3</tag>
            </tags>
            <para xml:id="A5.I2.i3.p1">
              <p>There are two places in the implementation where the transposition matters: (a) the choice of shard axis for the MLP matrices and (b) whether we compute the low-rank factorization for a gradient or its transpose. The former influences the bandwidth analysis, which we present in Section <ref labelref="LABEL:sec:dist_train_bw"/>. The latter influences the cost of the orthogonalization. Suppose that the gradient <Math mode="inline" tex="G" text="G" xml:id="A5.I2.i3.p1.m1">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">G</XMTok>
                  </XMath>
                </Math> is <Math mode="inline" tex="m\times n" text="m * n" xml:id="A5.I2.i3.p1.m2">
                  <XMath>
                    <XMApp>
                      <XMTok meaning="times" role="MULOP">×</XMTok>
                      <XMTok font="italic" role="UNKNOWN">m</XMTok>
                      <XMTok font="italic" role="UNKNOWN">n</XMTok>
                    </XMApp>
                  </XMath>
                </Math> and its low-rank factors <Math mode="inline" tex="P" text="P" xml:id="A5.I2.i3.p1.m3">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">P</XMTok>
                  </XMath>
                </Math> and <Math mode="inline" tex="Q^{t}" text="Q ^ t" xml:id="A5.I2.i3.p1.m4">
                  <XMath>
                    <XMApp>
                      <XMTok role="SUPERSCRIPTOP" scriptpos="post1"/>
                      <XMTok font="italic" role="UNKNOWN">Q</XMTok>
                      <XMTok font="italic" fontsize="70%" role="UNKNOWN">t</XMTok>
                    </XMApp>
                  </XMath>
                </Math> are <Math mode="inline" tex="m\times r" text="m * r" xml:id="A5.I2.i3.p1.m5">
                  <XMath>
                    <XMApp>
                      <XMTok meaning="times" role="MULOP">×</XMTok>
                      <XMTok font="italic" role="UNKNOWN">m</XMTok>
                      <XMTok font="italic" role="UNKNOWN">r</XMTok>
                    </XMApp>
                  </XMath>
                </Math> and <Math mode="inline" tex="r\times n" text="r * n" xml:id="A5.I2.i3.p1.m6">
                  <XMath>
                    <XMApp>
                      <XMTok meaning="times" role="MULOP">×</XMTok>
                      <XMTok font="italic" role="UNKNOWN">r</XMTok>
                      <XMTok font="italic" role="UNKNOWN">n</XMTok>
                    </XMApp>
                  </XMath>
                </Math>, respectively, with <Math mode="inline" tex="r\ll m,n" text="r &lt;&lt; list@(m, n)" xml:id="A5.I2.i3.p1.m7">
                  <XMath>
                    <XMApp>
                      <XMTok meaning="much-less-than" name="ll" role="RELOP">≪</XMTok>
                      <XMTok font="italic" role="UNKNOWN">r</XMTok>
                      <XMDual>
                        <XMApp>
                          <XMTok meaning="list"/>
                          <XMRef idref="A5.I2.i3.p1.m7.1"/>
                          <XMRef idref="A5.I2.i3.p1.m7.2"/>
                        </XMApp>
                        <XMWrap>
                          <XMTok font="italic" role="UNKNOWN" xml:id="A5.I2.i3.p1.m7.1">m</XMTok>
                          <XMTok role="PUNCT">,</XMTok>
                          <XMTok font="italic" role="UNKNOWN" xml:id="A5.I2.i3.p1.m7.2">n</XMTok>
                        </XMWrap>
                      </XMDual>
                    </XMApp>
                  </XMath>
                </Math>. To make orthogonalization cheaper, we transpose <Math mode="inline" tex="G" text="G" xml:id="A5.I2.i3.p1.m8">
                  <XMath>
                    <XMTok font="italic" role="UNKNOWN">G</XMTok>
                  </XMath>
                </Math> appropriately so that <Math mode="inline" tex="m\leqslant n" text="m &lt;= n" xml:id="A5.I2.i3.p1.m9">
                  <XMath>
                    <XMApp>
                      <XMTok meaning="less-than-or-equals" name="leqslant" role="RELOP">⩽</XMTok>
                      <XMTok font="italic" role="UNKNOWN">m</XMTok>
                      <XMTok font="italic" role="UNKNOWN">n</XMTok>
                    </XMApp>
                  </XMath>
                </Math>.</p>
            </para>
            <para xml:id="A5.I2.i3.p2">
              <p>At first glance, it may seem like a limitation that the NCCL all-gather and reduce-scatter primitives shard along axis 0 only. We may need to transpose some matrices before and after communication operations because of (a) and (b), which would require additional time and potentially special care to avoid out-of-memory errors. In fact, we never actually needed to do this. This is because we stored some of the parameters in their transposed formats and exploited the <text font="typewriter">transpose_a</text> and <text font="typewriter">transpose_b</text> parameters of the matrix multiplication kernels used in forward propagation, backpropagation, and steps (1)–(13) above. This allowed us to avoid explicit transposition while retaining the freedom to choose how to handle (a) and (b).</p>
            </para>
          </item>
          <item xml:id="A5.I2.i4">
            <tags>
              <tag>4.</tag>
              <tag role="autoref">item 4</tag>
              <tag role="refnum">4</tag>
              <tag role="typerefnum">item 4</tag>
            </tags>
            <para xml:id="A5.I2.i4.p1">
              <p>In step (12) above, we note that setting the error buffers to zero too often can cause performance regressions. We wanted to avoid doing this when resuming training from a checkpoint, which happens more frequently for larger jobs as it is likely that a machine will periodically fail. Naively, this would require uploading the error buffers from all of the machines along with the model checkpoints. Since we use a total of 128 machines for training, this would lead to 128 times greater storage usage, which is extremely wasteful.</p>
            </para>
            <para xml:id="A5.I2.i4.p2">
              <p>Fortunately, this is unnecessary, as error correction depends only on the sum of the error buffers. This property follows from linearity and the sequence of operations used by PowerSGD. Hence, it suffices to store the sums of the errors buffers taken across all GPUs with the same ordinal. When resuming from a checkpoint, we can divide the error buffers by the total number of machines and broadcast them.</p>
            </para>
          </item>
        </enumerate>
      </para>
    </subsection>
  </appendix>
  <appendix inlist="toc" labels="LABEL:sec:human_eval" xml:id="A6">
    <tags>
      <tag>Appendix F</tag>
      <tag role="autoref">Appendix F</tag>
      <tag role="refnum">F</tag>
      <tag role="typerefnum">Appendix F</tag>
    </tags>
    <title><tag close=" ">Appendix F</tag>Details for Human Evaluation Experiments</title>
    <toctitle><tag close=" ">F</tag>Details for Human Evaluation Experiments</toctitle>
    <figure inlist="lof" labels="LABEL:fig:example_human_evals_task" placement="t" xml:id="A6.F13">
      <tags>
        <tag>Figure 13</tag>
        <tag role="autoref">Figure 13</tag>
        <tag role="refnum">13</tag>
        <tag role="typerefnum">Figure 13</tag>
      </tags>
      <graphics candidates="example_human_evals_task.png" class="ltx_centering" graphic="example_human_evals_task.png" options="width=433.62pt,keepaspectratio=true" xml:id="A6.F13.g1"/>
      <toccaption class="ltx_centering"><tag close=" "><!--  %****␣main.tex␣Line␣625␣**** -->13<!--  %****␣main.tex␣Line␣625␣**** 
     %****␣main.tex␣Line␣625␣**** 
     %****␣main.tex␣Line␣625␣**** 
     %****␣main.tex␣Line␣625␣**** 
     %****␣main.tex␣Line␣625␣**** --></tag><!--  %****␣main.tex␣Line␣625␣**** -->Example task interface shown to workers.</toccaption>
      <caption class="ltx_centering"><tag close=": ">Figure 13</tag><!--  %****␣main.tex␣Line␣625␣**** 
     %****␣main.tex␣Line␣625␣**** -->Example task interface shown to workers.<!--  %****␣main.tex␣Line␣625␣**** 
     %****␣main.tex␣Line␣625␣**** --></caption>
    </figure>
    <para xml:id="A6.p1">
      <p>We start with a list of <Math mode="inline" tex="1000" text="1000" xml:id="A6.p1.m1">
          <XMath>
            <XMTok meaning="1000" role="NUMBER">1000</XMTok>
          </XMath>
        </Math> captions and generate one sample image per model per caption. Captions and sample images are then used to create <Math mode="inline" tex="1000" text="1000" xml:id="A6.p1.m2">
          <XMath>
            <XMTok meaning="1000" role="NUMBER">1000</XMTok>
          </XMath>
        </Math> image comparison tasks per experiment, which we submitted to Amazon’s Mechanical Turk. Each task was answered by five distinct workers. Workers were asked to compare two images and answer two questions about them: (1) which image is most realistic, and (2) which image best matches the shared caption. The experimental setup provided to workers is shown in Figure <ref labelref="LABEL:fig:example_human_evals_task"/>. One worker’s answers were disqualified due to a high rate of disagreement with other workers combined with a fast answer velocity (with many submission times under 4 seconds); all other worker answers were kept.</p>
    </para>
  </appendix>
  <appendix inlist="toc" labels="LABEL:sec:im2im" xml:id="A7">
    <tags>
      <tag>Appendix G</tag>
      <tag role="autoref">Appendix G</tag>
      <tag role="refnum">G</tag>
      <tag role="typerefnum">Appendix G</tag>
    </tags>
    <title><tag close=" ">Appendix G</tag>Zero-Shot Image-to-Image Translation</title>
    <toctitle><tag close=" ">G</tag>Zero-Shot Image-to-Image Translation</toctitle>
    <figure inlist="lof" labels="LABEL:fig:zero_shot_samples" xml:id="A7.F14">
      <tags>
        <tag>Figure 14</tag>
        <tag role="autoref">Figure 14</tag>
        <tag role="refnum">14</tag>
        <tag role="typerefnum">Figure 14</tag>
      </tags>
      <figure align="center" class="ltx_figure_panel" xml:id="A7.F14.sf1">
        <tags>
          <tag>(a)</tag>
          <tag role="autoref">14a</tag>
          <tag role="refnum">14a</tag>
        </tags>
        <tabular vattach="middle">
          <tbody>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="sketch_0.png" graphic="sketch_0.png" options="scale=0.27" xml:id="A7.F14.sf1.g1"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="sketch_1.png" graphic="sketch_1.png" options="scale=0.27" xml:id="A7.F14.sf1.g2"/></text></td>
            </tr>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="sketch_2.png" graphic="sketch_2.png" options="scale=0.27" xml:id="A7.F14.sf1.g3"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="sketch_3.png" graphic="sketch_3.png" options="scale=0.27" xml:id="A7.F14.sf1.g4"/></text></td>
            </tr>
          </tbody>
        </tabular>
        <toccaption><tag close=" ">a</tag>“the exact same cat on the top as a sketch on the bottom”</toccaption>
        <caption><tag close=" ">(a)</tag>“the exact same cat on the top as a sketch on the bottom”</caption>
      </figure>
      <figure align="center" class="ltx_figure_panel" xml:id="A7.F14.sf2">
        <tags>
          <tag>(b)</tag>
          <tag role="autoref">14b</tag>
          <tag role="refnum">14b</tag>
        </tags>
        <tabular vattach="middle">
          <tbody>
            <tr>
              <td align="center"><!--  %****␣main.tex␣Line␣650␣**** --><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="reflection_0.png" graphic="reflection_0.png" options="scale=0.27" xml:id="A7.F14.sf2.g1"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="reflection_1.png" graphic="reflection_1.png" options="scale=0.27" xml:id="A7.F14.sf2.g2"/></text></td>
            </tr>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="reflection_2.png" graphic="reflection_2.png" options="scale=0.27" xml:id="A7.F14.sf2.g3"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="reflection_3.png" graphic="reflection_3.png" options="scale=0.27" xml:id="A7.F14.sf2.g4"/></text></td>
            </tr>
          </tbody>
        </tabular>
        <toccaption><tag close=" ">b</tag>“the exact same photo on the top reflected upside-down on the bottom”</toccaption>
        <caption><tag close=" ">(b)</tag>“the exact same photo on the top reflected upside-down on the bottom”</caption>
      </figure>
      <figure align="center" class="ltx_figure_panel" xml:id="A7.F14.sf3">
        <tags>
          <tag>(c)</tag>
          <tag role="autoref">14c</tag>
          <tag role="refnum">14c</tag>
        </tags>
        <tabular vattach="middle">
          <tbody>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="close_up_0.png" graphic="close_up_0.png" options="scale=0.27" xml:id="A7.F14.sf3.g1"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="close_up_1.png" graphic="close_up_1.png" options="scale=0.27" xml:id="A7.F14.sf3.g2"/></text></td>
            </tr>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="close_up_2.png" graphic="close_up_2.png" options="scale=0.27" xml:id="A7.F14.sf3.g3"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="close_up_3.png" graphic="close_up_3.png" options="scale=0.27" xml:id="A7.F14.sf3.g4"/></text></td>
            </tr>
          </tbody>
        </tabular>
        <toccaption><tag close=" ">c</tag>“2 panel image of the exact same cat. on the top, a photo of the cat. on the bottom, an extreme close-up view of the cat in the photo.”</toccaption>
        <caption><tag close=" ">(c)</tag>“2 panel image of the exact same cat. on the top, a photo of the cat. on the bottom, an extreme close-up view of the cat in the photo.”</caption>
      </figure>
      <break class="ltx_centering"/>
      <figure align="center" class="ltx_figure_panel" xml:id="A7.F14.sf4">
        <tags>
          <tag>(d)</tag>
          <tag role="autoref">14d</tag>
          <tag role="refnum">14d</tag>
        </tags>
        <tabular vattach="middle">
          <tbody>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="red_0.png" graphic="red_0.png" options="scale=0.27" xml:id="A7.F14.sf4.g1"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="red_1.png" graphic="red_1.png" options="scale=0.27" xml:id="A7.F14.sf4.g2"/></text></td>
            </tr>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="red_2.png" graphic="red_2.png" options="scale=0.27" xml:id="A7.F14.sf4.g3"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="red_3.png" graphic="red_3.png" options="scale=0.27" xml:id="A7.F14.sf4.g4"/></text></td>
            </tr>
          </tbody>
        </tabular>
        <toccaption><tag close=" ">d</tag>“the exact same cat on the top colored red on the bottom”</toccaption>
        <caption><tag close=" ">(d)</tag>“the exact same cat on the top colored red on the bottom”</caption>
      </figure>
      <figure align="center" class="ltx_figure_panel" xml:id="A7.F14.sf5">
        <tags>
          <tag>(e)</tag>
          <tag role="autoref">14e</tag>
          <tag role="refnum">14e</tag>
        </tags>
        <tabular vattach="middle">
          <tbody>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="sunglasses_0.png" graphic="sunglasses_0.png" options="scale=0.27" xml:id="A7.F14.sf5.g1"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="sunglasses_1.png" graphic="sunglasses_1.png" options="scale=0.27" xml:id="A7.F14.sf5.g2"/></text></td>
            </tr>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="sunglasses_2.png" graphic="sunglasses_2.png" options="scale=0.27" xml:id="A7.F14.sf5.g3"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="sunglasses_3.png" graphic="sunglasses_3.png" options="scale=0.27" xml:id="A7.F14.sf5.g4"/></text></td>
            </tr>
          </tbody>
        </tabular>
        <toccaption><tag close=" ">e</tag>“2 panel image of the exact same cat. on the top, a photo of the cat. on the bottom, the cat with sunglasses.”</toccaption>
        <caption><tag close=" ">(e)</tag>“2 panel image of the exact same cat. on the top, a photo of the cat. on the bottom, the cat with sunglasses.”</caption>
      </figure>
      <figure align="center" class="ltx_figure_panel" xml:id="A7.F14.sf6">
        <tags>
          <tag>(f)</tag>
          <tag role="autoref">14f</tag>
          <tag role="refnum">14f</tag>
        </tags>
        <tabular vattach="middle">
          <tbody>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="postage_stamp_0.png" graphic="postage_stamp_0.png" options="scale=0.27" xml:id="A7.F14.sf6.g1"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="postage_stamp_1.png" graphic="postage_stamp_1.png" options="scale=0.27" xml:id="A7.F14.sf6.g2"/></text></td>
            </tr>
            <tr>
              <td align="center"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="postage_stamp_2.png" graphic="postage_stamp_2.png" options="scale=0.27" xml:id="A7.F14.sf6.g3"/></text></td>
              <td align="center" class="ltx_nopad_l ltx_nopad_r"><text cssstyle="padding:0.0pt" framecolor="#000000" framed="rectangle"><graphics candidates="postage_stamp_3.png" graphic="postage_stamp_3.png" options="scale=0.27" xml:id="A7.F14.sf6.g4"/></text></td>
            </tr>
          </tbody>
        </tabular>
        <toccaption><tag close=" ">f</tag>“the exact same cat on the top as a postage stamp on the bottom”</toccaption>
        <caption><tag close=" ">(f)</tag>“the exact same cat on the top as a postage stamp on the bottom”</caption>
      </figure>
<!--  %****␣main.tex␣Line␣700␣**** -->      <toccaption class="ltx_centering"><tag close=" ">14</tag>Further examples of zero-shot image-to-image translation.</toccaption>
      <caption class="ltx_centering"><tag close=": ">Figure 14</tag>Further examples of zero-shot image-to-image translation.</caption>
    </figure>
    <para xml:id="A7.p1">
      <p>Figure <ref labelref="LABEL:fig:zero_shot_samples"/> shows further examples of zero-shot image-to-image translation, which we discussed in Section <ref labelref="LABEL:sec:qual_findings"/>. We did not anticipate that this capability would emerge, and made no modifications to the training procedure to encourage it.</p>
    </para>
  </appendix>
</document>
